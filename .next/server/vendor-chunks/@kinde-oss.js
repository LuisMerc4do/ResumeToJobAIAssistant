"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@kinde-oss";
exports.ids = ["vendor-chunks/@kinde-oss"];
exports.modules = {

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: !0\n}));\nvar e = __webpack_require__(/*! jwt-decode */ \"(rsc)/./node_modules/jwt-decode/build/jwt-decode.cjs.js\"), t = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\"), r = __webpack_require__(/*! next/navigation */ \"(rsc)/./node_modules/next/navigation.js\"), o = __webpack_require__(/*! crypto-js */ \"(rsc)/./node_modules/crypto-js/index.js\"), s = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\"), i = __webpack_require__(/*! @kinde-oss/kinde-typescript-sdk */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/index.js\");\nfunction a(e) {\n    return e && \"object\" == typeof e && \"default\" in e ? e : {\n        default: e\n    };\n}\nvar c = a(e), l = a(s);\nconst u = process.env.KINDE_SITE_URL, d = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH || process.env.KINDE_AUTH_API_PATH || \"/api/auth\", p = process.env.KINDE_POST_LOGIN_REDIRECT_URL || process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL, _ = process.env.KINDE_POST_LOGOUT_REDIRECT_URL, g = {\n    apiPath: d,\n    initialState: {\n        user: null,\n        isLoading: !0,\n        checkSession: null\n    },\n    SESSION_PREFIX: \"pkce-verifier\",\n    redirectURL: u,\n    postLoginRedirectURL: p,\n    issuerURL: process.env.KINDE_ISSUER_URL,\n    clientID: process.env.KINDE_CLIENT_ID,\n    clientSecret: process.env.KINDE_CLIENT_SECRET,\n    postLogoutRedirectURL: _,\n    audience: process.env.KINDE_AUDIENCE,\n    responseType: \"code\",\n    scope: \"openid profile email offline\",\n    codeChallengeMethod: \"S256\",\n    cookieDomain: process.env.KINDE_COOKIE_DOMAIN,\n    redirectRoutes: {\n        callback: `${d}/kinde_callback`\n    },\n    issuerRoutes: {\n        logout: \"/logout\",\n        login: \"/oauth2/auth\",\n        register: \"/oauth2/auth\",\n        token: \"/oauth2/token\",\n        profile: \"/oauth2/v2/user_profile\"\n    }\n}, h = (e, t)=>`${e.endsWith(\"/\") ? e.slice(0, -1) : e}/${t.startsWith(\"/\") ? t.substr(1) : t}`, { getRandomValues: f } = __webpack_require__(/*! uncrypto */ \"(rsc)/./node_modules/uncrypto/dist/crypto.node.cjs\"), R = ()=>{\n    const e = new Uint8Array(28);\n    return f(e), Array.from(e).map((e)=>e.toString(16).padStart(2, \"0\")).join(\"\");\n};\nfunction k() {\n    const e = R(), t = function(e) {\n        return o.SHA256(e).toString(o.enc.Base64url);\n    }(e);\n    return {\n        code_verifier: e,\n        code_challenge: t\n    };\n}\nconst m = (e, r = \"login\")=>{\n    const { code_challenge: o, code_verifier: n, state: s } = ((e, t)=>{\n        const r = R(), { code_challenge: o, code_verifier: n } = k();\n        return {\n            state: r,\n            code_challenge: o,\n            code_verifier: n\n        };\n    })();\n    return ((e, r, o)=>{\n        t.cookies().set({\n            name: `${g.SESSION_PREFIX}-${e}`,\n            value: JSON.stringify({\n                code_verifier: r,\n                options: o\n            }),\n            httpOnly: !0,\n            path: \"/\",\n            maxAge: 900\n        });\n    })(s, n, e), e.state = s, e.code_challenge = o, function(e, t = \"login\") {\n        const r = new URL(g.issuerURL + g.issuerRoutes[t]);\n        let o = {\n            redirect_uri: h(g.redirectURL, g.redirectRoutes.callback),\n            client_id: g.clientID,\n            response_type: g.responseType,\n            scope: g.scope,\n            code_challenge: e.code_challenge,\n            code_challenge_method: g.codeChallengeMethod,\n            state: e.state\n        };\n        g.audience && (o.audience = g.audience), g.login_hint && (o.login_hint = g.login_hint), g.connection_id && (o.connection_id = g.connection_id), \"register\" === t && (o.start_page = \"registration\");\n        for (const [t, r] of Object.entries(e))\"kindeAuth\" !== t && null != r && (o[t] = r);\n        return r.search = new URLSearchParams(o), r;\n    }(e, r).href;\n}, S = {\n    create_org: async (e)=>{\n        const t = e.nextUrl.searchParams.get(\"org_name\"), o = m({\n            org_name: t,\n            is_create_org: !0\n        }, \"register\");\n        r.redirect(o);\n    },\n    register: async (e)=>{\n        const t = e.nextUrl.searchParams.get(\"org_code\"), o = e.nextUrl.searchParams.get(\"post_login_redirect_url\"), n = m({\n            org_code: t,\n            post_login_redirect_url: o\n        }, \"register\");\n        r.redirect(n);\n    },\n    login: async (e)=>{\n        const t = e.nextUrl.searchParams.get(\"org_code\"), o = e.nextUrl.searchParams.get(\"post_login_redirect_url\"), n = m({\n            org_code: t,\n            post_login_redirect_url: o\n        });\n        r.redirect(n);\n    },\n    logout: async (e)=>{\n        t.cookies(), t.cookies().set({\n            name: \"kinde_token\",\n            value: \"\",\n            httpOnly: !0,\n            expires: new Date(0),\n            sameSite: \"lax\",\n            secure: \"https:\" == g.redirectURL.substring(0, 6),\n            path: \"/\",\n            domain: g.cookieDomain ? g.cookieDomain : void 0\n        });\n        const o = new URL(g.issuerURL + g.issuerRoutes.logout);\n        o.searchParams.set(\"redirect\", g.postLogoutRedirectURL || \"\"), r.redirect(o.href);\n    },\n    kinde_callback: async (e)=>{\n        const o = e.nextUrl.searchParams.get(\"code\"), n = e.nextUrl.searchParams.get(\"state\"), s = t.cookies().get(`${g.SESSION_PREFIX}-${n}`);\n        let i = g.postLoginRedirectURL || g.redirectURL;\n        if (s) {\n            const { code_verifier: e, options: n } = JSON.parse(s.value);\n            n?.post_login_redirect_url && (i = (({ baseUrl: e, url: t })=>t.startsWith(\"/\") ? `${e}${t}` : new URL(t).origin === e ? t : e)({\n                baseUrl: new URL(g.redirectURL).origin,\n                url: n.post_login_redirect_url\n            }));\n            try {\n                const r = await fetch(g.issuerURL + g.issuerRoutes.token, {\n                    method: \"POST\",\n                    headers: new Headers({\n                        \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n                        \"Kinde-SDK\": '\"NextJS\"/1.10.1'\n                    }),\n                    body: new URLSearchParams({\n                        client_id: g.clientID,\n                        client_secret: g.clientSecret,\n                        code: o,\n                        code_verifier: e,\n                        grant_type: \"authorization_code\",\n                        redirect_uri: h(g.redirectURL, g.redirectRoutes.callback)\n                    })\n                }), n = await r.json();\n                console.log(\"look here\", n);\n                const s = c.default(n.access_token, {\n                    header: !0\n                }), i = c.default(n.access_token);\n                let a = !0;\n                g.audience && (a = i.aud && i.aud.includes(g.audience)), i.iss === g.issuerURL && \"RS256\" === s.alg && i.exp > Math.floor(Date.now() / 1e3) && a ? t.cookies().set({\n                    name: \"kinde_token\",\n                    value: JSON.stringify(n),\n                    httpOnly: !0,\n                    expires: new Date(1e3 * i.exp),\n                    sameSite: \"lax\",\n                    secure: \"https:\" == g.redirectURL.substring(0, 6),\n                    path: \"/\",\n                    domain: g.cookieDomain ? g.cookieDomain : void 0\n                }) : console.error(\"One or more of the claims were not verified.\");\n            } catch (e) {\n                console.error({\n                    err: e\n                });\n            }\n            r.redirect(i);\n        } else {\n            const e = new URL(g.issuerURL + g.issuerRoutes.logout);\n            e.searchParams.set(\"redirect\", g.postLogoutRedirectURL), r.redirect(e.href);\n        }\n    }\n};\nconst L = (e)=>{\n    const r = t.cookies().get(\"kinde_token\");\n    if (r) {\n        return c.default(JSON.parse(r.value).access_token);\n    }\n    return {\n        message: \"There is no kinde_token, you are not authenticated. Try logging in.\"\n    };\n}, U = (e)=>{\n    const r = t.cookies().get(\"kinde_token\");\n    if (r) {\n        return c.default(JSON.parse(r.value).id_token);\n    }\n}, v = (e)=>{\n    const t = L();\n    return t ? t[e] : null;\n}, y = {\n    s: \"string\",\n    i: \"integer\",\n    b: \"boolean\"\n}, A = (e, t, r)=>{\n    const o = v(\"feature_flags\"), n = o && o[e] ? o[e] : {};\n    if (n == {} && null == t) throw Error(`Flag ${e} was not found, and no default value has been provided`);\n    if (r && n.t && r !== n.t) throw Error(`Flag ${e} is of type ${y[n.t]} - requested type ${y[r]}`);\n    return {\n        code: e,\n        type: y[n.t || r],\n        value: null == n.v ? t : n.v,\n        is_default: null == n.v\n    };\n}, w = (e)=>{\n    const t = U();\n    return t ? {\n        id: t.sub,\n        given_name: t.given_name,\n        family_name: t.family_name,\n        email: t.email,\n        picture: t.picture\n    } : void 0;\n};\nvar I = Object.freeze({\n    __proto__: null,\n    getAccessToken: L,\n    getBooleanFlag: (e, t)=>{\n        try {\n            return A(e, t, \"b\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getFlag: A,\n    getIdToken: U,\n    getIntegerFlag: (e, t)=>{\n        try {\n            return A(e, t, \"i\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getOrganization: ()=>({\n            orgCode: v(\"org_code\")\n        }),\n    getPermission: (e)=>{\n        const t = v(\"org_code\");\n        return {\n            isGranted: (v(\"permissions\") || []).some((t)=>t === e),\n            orgCode: t\n        };\n    },\n    getPermissions: ()=>{\n        const e = v(\"org_code\");\n        return {\n            permissions: v(\"permissions\"),\n            orgCode: e\n        };\n    },\n    getStringFlag: (e, t)=>{\n        try {\n            return A(e, t, \"s\").value;\n        } catch (e) {\n            console.error(e);\n        }\n    },\n    getUserOrganizations: (e)=>({\n            orgCodes: ((e)=>{\n                const t = U();\n                return t ? t[e] : null;\n            })(\"org_codes\")\n        }),\n    getUser: w,\n    isAuthenticated: (e)=>Boolean(w())\n});\nconst E = (e)=>e && \"/\" === e.charAt(e.length - 1) ? e.slice(0, -1) : e;\nfunction O() {\n    return O = Object.assign ? Object.assign.bind() : function(e) {\n        for(var t = 1; t < arguments.length; t++){\n            var r = arguments[t];\n            for(var o in r)Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);\n        }\n        return e;\n    }, O.apply(this, arguments);\n}\nvar P = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\nconst b = (e, r)=>e ? ((e)=>e instanceof Request)(e) ? x(t.cookies()) : N(e, r) : x(t.cookies()), x = (e)=>({\n        getSessionItem: (t)=>{\n            const r = e.get(t);\n            if (r) try {\n                const e = JSON.parse(r.value);\n                return \"object\" == typeof e ? e : r.value;\n            } catch (e) {\n                return r.value;\n            }\n        },\n        setSessionItem: (t, r)=>e.set(t, \"object\" == typeof r ? JSON.stringify(r) : r),\n        removeSessionItem: (t)=>e.delete(t),\n        destroySession: ()=>{\n            [\n                \"id_token_payload\",\n                \"id_token\",\n                \"access_token_payload\",\n                \"access_token\",\n                \"user\",\n                \"refresh_token\"\n            ].forEach((t)=>e.delete(t));\n        }\n    }), N = (e, t)=>({\n        getSessionItem: (t)=>{\n            const r = e.cookies[t];\n            if (r) try {\n                const e = JSON.parse(r);\n                return \"object\" == typeof e ? e : r;\n            } catch (e) {\n                return r;\n            }\n        },\n        setSessionItem: (e, r)=>{\n            let o = t.getHeader(\"Set-Cookie\") || [];\n            Array.isArray(o) || (o = [\n                o\n            ]), t.setHeader(\"Set-Cookie\", [\n                ...o.filter((t)=>!t.startsWith(`${e}=`)),\n                P.serialize(e, \"object\" == typeof r ? JSON.stringify(r) : r, {\n                    path: \"/\"\n                })\n            ]);\n        },\n        removeSessionItem: (e)=>{\n            t.setHeader(\"Set-Cookie\", P.serialize(e, \"\", {\n                path: \"/\",\n                maxAge: -1\n            }));\n        },\n        destroySession: ()=>{\n            t.setHeader(\"Set-Cookie\", [\n                \"id_token_payload\",\n                \"id_token\",\n                \"access_token_payload\",\n                \"access_token\",\n                \"user\",\n                \"refresh_token\"\n            ].map((e)=>P.serialize(e, \"\", {\n                    path: \"/\",\n                    maxAge: -1\n                })));\n        }\n    });\nexports.CreateOrgLink = function({ children: e, orgName: t, ...r }) {\n    return l.default.createElement(\"a\", O({\n        href: `${g.apiPath}/create_org${t ? `?org_name=${t}` : \"\"}`\n    }, r), e);\n}, exports.LoginLink = function({ children: e, postLoginRedirectURL: t, orgCode: r, ...o }) {\n    let n = new URLSearchParams;\n    return null != r && n.append(\"org_code\", r), null != t && n.append(\"post_login_redirect_url\", t), l.default.createElement(\"a\", O({\n        href: `${g.apiPath}/login${n ? `?${n.toString()}` : \"\"}`\n    }, o), e);\n}, exports.LogoutLink = function({ children: e, ...t }) {\n    return l.default.createElement(\"a\", O({\n        href: `${g.apiPath}/logout`\n    }, t), e);\n}, exports.RegisterLink = function({ children: e, orgCode: t, postLoginRedirectURL: r, ...o }) {\n    let n = new URLSearchParams;\n    return null != t && n.append(\"org_code\", t), null != r && n.append(\"post_login_redirect_url\", r), l.default.createElement(\"a\", O({\n        href: `${g.apiPath}/register${n ? `?${n.toString()}` : \"\"}`\n    }, o), e);\n}, exports.authMiddleware = function(e) {\n    let t = !1;\n    const r = E(e.nextUrl.href), o = E(g.postLogoutRedirectURL), s = e.cookies.get(\"kinde_token\"), i = r === o;\n    return s && (c.default(JSON.parse(s.value).access_token), t = !0), t || i ? t && i ? NextResponse.redirect(new URL(g.postLoginRedirectURL)) : NextResponse.next() : NextResponse.redirect(new URL(g.postLogoutRedirectURL, e.url));\n}, exports.createKindeManagementAPIClient = async (e, t)=>{\n    let r = null;\n    const o = b(e, t), n = o.getSessionItem(\"kinde_api_access_token\");\n    if (((e)=>{\n        const t = e && e.access_token || e;\n        if (!t) return !1;\n        const r = c.default(t, {\n            header: !0\n        }), o = c.default(t);\n        let n = !0;\n        return g.audience && (n = o.aud && o.aud.includes(g.audience)), !!(o.iss == g.issuerURL && \"RS256\" == r.alg && o.exp > Math.floor(Date.now() / 1e3) && n);\n    })(n)) r = n;\n    else {\n        const e = await fetch(`${g.issuerURL}/oauth2/token`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/x-www-form-urlencoded\"\n            },\n            body: new URLSearchParams({\n                grant_type: \"client_credentials\",\n                client_id: g.clientID,\n                client_secret: g.clientSecret,\n                audience: g.audience\n            })\n        });\n        r = (await e.json()).access_token, o.setSessionItem(\"kinde_api_access_token\", r);\n    }\n    const s = new i.Configuration({\n        basePath: g.issuerURL,\n        accessToken: r,\n        headers: {\n            Accept: \"application/json\"\n        }\n    });\n    return {\n        usersApi: new i.UsersApi(s),\n        oauthApi: new i.OAuthApi(s),\n        subscribersApi: new i.SubscribersApi(s),\n        organizationsApi: new i.OrganizationsApi(s),\n        connectedAppsApi: new i.ConnectedAppsApi(s),\n        featureFlagsApi: new i.FeatureFlagsApi(s),\n        environmentsApi: new i.EnvironmentsApi(s),\n        permissionsApi: new i.PermissionsApi(s),\n        rolesApi: new i.RolesApi(s),\n        businessApi: new i.BusinessApi(s),\n        industriesApi: new i.IndustriesApi(s),\n        timezonesApi: new i.TimezonesApi(s),\n        applicationsApi: new i.ApplicationsApi(s),\n        callbacksApi: new i.CallbacksApi(s),\n        apisApi: new i.APIsApi(s)\n    };\n}, exports.getKindeServerSession = ()=>I, exports.handleAuth = async function(e, t) {\n    const r = ((e)=>S[e])(t);\n    return r ? await r(e) : new Response(\"This page could not be found.\", {\n        status: 404\n    });\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-auth-nextjs/dist/server/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/APIsApi.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/APIsApi.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.APIsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var APIsApi = /** @class */ function(_super) {\n    __extends(APIsApi, _super);\n    function APIsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add APIs.\n     * Add APIs\n     */ APIsApi.prototype.addAPIsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.addAPIsRequest === null || requestParameters.addAPIsRequest === undefined) {\n                            throw new runtime.RequiredError(\"addAPIsRequest\", \"Required parameter requestParameters.addAPIsRequest was null or undefined when calling addAPIs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/apis\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.AddAPIsRequestToJSON)(requestParameters.addAPIsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add APIs.\n     * Add APIs\n     */ APIsApi.prototype.addAPIs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.addAPIsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Deletes API.\n     * Delete API\n     */ APIsApi.prototype.deleteAPIRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.apiId === null || requestParameters.apiId === undefined) {\n                            throw new runtime.RequiredError(\"apiId\", \"Required parameter requestParameters.apiId was null or undefined when calling deleteAPI.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/apis/{api_id}\".replace(\"{\".concat(\"api_id\", \"}\"), encodeURIComponent(String(requestParameters.apiId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Deletes API.\n     * Delete API\n     */ APIsApi.prototype.deleteAPI = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteAPIRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the details of the API.\n     * List API details\n     */ APIsApi.prototype.getAPIRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.apiId === null || requestParameters.apiId === undefined) {\n                            throw new runtime.RequiredError(\"apiId\", \"Required parameter requestParameters.apiId was null or undefined when calling getAPI.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/apis/{api_id}\".replace(\"{\".concat(\"api_id\", \"}\"), encodeURIComponent(String(requestParameters.apiId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.ApiFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the details of the API.\n     * List API details\n     */ APIsApi.prototype.getAPI = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getAPIRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of APIs.\n     * List APIs\n     */ APIsApi.prototype.getAPIsRaw = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/apis\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.ApisFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of APIs.\n     * List APIs\n     */ APIsApi.prototype.getAPIs = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getAPIsRaw(initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update the applications under that API.\n     * Update API Applications\n     */ APIsApi.prototype.updateAPIApplicationsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.apiId === null || requestParameters.apiId === undefined) {\n                            throw new runtime.RequiredError(\"apiId\", \"Required parameter requestParameters.apiId was null or undefined when calling updateAPIApplications.\");\n                        }\n                        if (requestParameters.updateAPIApplicationsRequest === null || requestParameters.updateAPIApplicationsRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateAPIApplicationsRequest\", \"Required parameter requestParameters.updateAPIApplicationsRequest was null or undefined when calling updateAPIApplications.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/apis/{api_id}/applications\".replace(\"{\".concat(\"api_id\", \"}\"), encodeURIComponent(String(requestParameters.apiId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateAPIApplicationsRequestToJSON)(requestParameters.updateAPIApplicationsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update the applications under that API.\n     * Update API Applications\n     */ APIsApi.prototype.updateAPIApplications = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateAPIApplicationsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return APIsApi;\n}(runtime.BaseAPI);\nexports.APIsApi = APIsApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/APIsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ApplicationsApi.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ApplicationsApi.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetApplicationsSortEnum = exports.ApplicationsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var ApplicationsApi = /** @class */ function(_super) {\n    __extends(ApplicationsApi, _super);\n    function ApplicationsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create an application.\n     * Create Application\n     */ ApplicationsApi.prototype.createApplicationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateApplicationRequestToJSON)(requestParameters.createApplicationRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreateApplicationResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create an application.\n     * Create Application\n     */ ApplicationsApi.prototype.createApplication = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createApplicationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete application.\n     * Delete Application\n     */ ApplicationsApi.prototype.deleteApplicationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.applicationId === null || requestParameters.applicationId === undefined) {\n                            throw new runtime.RequiredError(\"applicationId\", \"Required parameter requestParameters.applicationId was null or undefined when calling deleteApplication.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{application_id}\".replace(\"{\".concat(\"application_id\", \"}\"), encodeURIComponent(String(requestParameters.applicationId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete application.\n     * Delete Application\n     */ ApplicationsApi.prototype.deleteApplication = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteApplicationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets an application given the application\\'s id.\n     * Get Application\n     */ ApplicationsApi.prototype.getApplicationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.applicationId === null || requestParameters.applicationId === undefined) {\n                            throw new runtime.RequiredError(\"applicationId\", \"Required parameter requestParameters.applicationId was null or undefined when calling getApplication.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{application_id}\".replace(\"{\".concat(\"application_id\", \"}\"), encodeURIComponent(String(requestParameters.applicationId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetApplicationResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets an application given the application\\'s id.\n     * Get Application\n     */ ApplicationsApi.prototype.getApplication = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getApplicationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of applications.\n     * List Applications\n     */ ApplicationsApi.prototype.getApplicationsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetApplicationsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of applications.\n     * List Applications\n     */ ApplicationsApi.prototype.getApplications = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getApplicationsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update an application.\n     * Update Application\n     */ ApplicationsApi.prototype.updateApplicationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.applicationId === null || requestParameters.applicationId === undefined) {\n                            throw new runtime.RequiredError(\"applicationId\", \"Required parameter requestParameters.applicationId was null or undefined when calling updateApplication.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{application_id}\".replace(\"{\".concat(\"application_id\", \"}\"), encodeURIComponent(String(requestParameters.applicationId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateApplicationRequestToJSON)(requestParameters.updateApplicationRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.VoidApiResponse(response)\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update an application.\n     * Update Application\n     */ ApplicationsApi.prototype.updateApplication = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateApplicationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    return ApplicationsApi;\n}(runtime.BaseAPI);\nexports.ApplicationsApi = ApplicationsApi;\n/**\n * @export\n */ exports.GetApplicationsSortEnum = {\n    Asc: \"name_asc\",\n    Desc: \"name_desc\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ApplicationsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/BusinessApi.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/BusinessApi.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BusinessApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var BusinessApi = /** @class */ function(_super) {\n    __extends(BusinessApi, _super);\n    function BusinessApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get your business details.\n     * List business details\n     */ BusinessApi.prototype.getBusinessRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.code === null || requestParameters.code === undefined) {\n                            throw new runtime.RequiredError(\"code\", \"Required parameter requestParameters.code was null or undefined when calling getBusiness.\");\n                        }\n                        if (requestParameters.name === null || requestParameters.name === undefined) {\n                            throw new runtime.RequiredError(\"name\", \"Required parameter requestParameters.name was null or undefined when calling getBusiness.\");\n                        }\n                        if (requestParameters.email === null || requestParameters.email === undefined) {\n                            throw new runtime.RequiredError(\"email\", \"Required parameter requestParameters.email was null or undefined when calling getBusiness.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.code !== undefined) {\n                            queryParameters[\"code\"] = requestParameters.code;\n                        }\n                        if (requestParameters.name !== undefined) {\n                            queryParameters[\"name\"] = requestParameters.name;\n                        }\n                        if (requestParameters.email !== undefined) {\n                            queryParameters[\"email\"] = requestParameters.email;\n                        }\n                        if (requestParameters.phone !== undefined) {\n                            queryParameters[\"phone\"] = requestParameters.phone;\n                        }\n                        if (requestParameters.industry !== undefined) {\n                            queryParameters[\"industry\"] = requestParameters.industry;\n                        }\n                        if (requestParameters.timezone !== undefined) {\n                            queryParameters[\"timezone\"] = requestParameters.timezone;\n                        }\n                        if (requestParameters.privacyUrl !== undefined) {\n                            queryParameters[\"privacy_url\"] = requestParameters.privacyUrl;\n                        }\n                        if (requestParameters.termsUrl !== undefined) {\n                            queryParameters[\"terms_url\"] = requestParameters.termsUrl;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/business\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get your business details.\n     * List business details\n     */ BusinessApi.prototype.getBusiness = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getBusinessRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update business details.\n     * Update business details\n     */ BusinessApi.prototype.updateBusinessRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.businessName === null || requestParameters.businessName === undefined) {\n                            throw new runtime.RequiredError(\"businessName\", \"Required parameter requestParameters.businessName was null or undefined when calling updateBusiness.\");\n                        }\n                        if (requestParameters.primaryEmail === null || requestParameters.primaryEmail === undefined) {\n                            throw new runtime.RequiredError(\"primaryEmail\", \"Required parameter requestParameters.primaryEmail was null or undefined when calling updateBusiness.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.businessName !== undefined) {\n                            queryParameters[\"business_name\"] = requestParameters.businessName;\n                        }\n                        if (requestParameters.primaryEmail !== undefined) {\n                            queryParameters[\"primary_email\"] = requestParameters.primaryEmail;\n                        }\n                        if (requestParameters.primaryPhone !== undefined) {\n                            queryParameters[\"primary_phone\"] = requestParameters.primaryPhone;\n                        }\n                        if (requestParameters.industryKey !== undefined) {\n                            queryParameters[\"industry_key\"] = requestParameters.industryKey;\n                        }\n                        if (requestParameters.timezoneId !== undefined) {\n                            queryParameters[\"timezone_id\"] = requestParameters.timezoneId;\n                        }\n                        if (requestParameters.privacyUrl !== undefined) {\n                            queryParameters[\"privacy_url\"] = requestParameters.privacyUrl;\n                        }\n                        if (requestParameters.termsUrl !== undefined) {\n                            queryParameters[\"terms_url\"] = requestParameters.termsUrl;\n                        }\n                        if (requestParameters.isShowKindeBranding !== undefined) {\n                            queryParameters[\"is_show_kinde_branding\"] = requestParameters.isShowKindeBranding;\n                        }\n                        if (requestParameters.isClickWrap !== undefined) {\n                            queryParameters[\"is_click_wrap\"] = requestParameters.isClickWrap;\n                        }\n                        if (requestParameters.partnerCode !== undefined) {\n                            queryParameters[\"partner_code\"] = requestParameters.partnerCode;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/business\",\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update business details.\n     * Update business details\n     */ BusinessApi.prototype.updateBusiness = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateBusinessRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return BusinessApi;\n}(runtime.BaseAPI);\nexports.BusinessApi = BusinessApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/BusinessApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/CallbacksApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/CallbacksApi.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CallbacksApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var CallbacksApi = /** @class */ function(_super) {\n    __extends(CallbacksApi, _super);\n    function CallbacksApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add additional logout redirect URLs.\n     * Add Logout Redirect URLs\n     */ CallbacksApi.prototype.addLogoutRedirectURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling addLogoutRedirectURLs.\");\n                        }\n                        if (requestParameters.replaceLogoutRedirectURLsRequest === null || requestParameters.replaceLogoutRedirectURLsRequest === undefined) {\n                            throw new runtime.RequiredError(\"replaceLogoutRedirectURLsRequest\", \"Required parameter requestParameters.replaceLogoutRedirectURLsRequest was null or undefined when calling addLogoutRedirectURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_logout_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.ReplaceLogoutRedirectURLsRequestToJSON)(requestParameters.replaceLogoutRedirectURLsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add additional logout redirect URLs.\n     * Add Logout Redirect URLs\n     */ CallbacksApi.prototype.addLogoutRedirectURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.addLogoutRedirectURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add additional redirect callback URLs.\n     * Add Redirect Callback URLs\n     */ CallbacksApi.prototype.addRedirectCallbackURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling addRedirectCallbackURLs.\");\n                        }\n                        if (requestParameters.replaceRedirectCallbackURLsRequest === null || requestParameters.replaceRedirectCallbackURLsRequest === undefined) {\n                            throw new runtime.RequiredError(\"replaceRedirectCallbackURLsRequest\", \"Required parameter requestParameters.replaceRedirectCallbackURLsRequest was null or undefined when calling addRedirectCallbackURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_redirect_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.ReplaceRedirectCallbackURLsRequestToJSON)(requestParameters.replaceRedirectCallbackURLsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add additional redirect callback URLs.\n     * Add Redirect Callback URLs\n     */ CallbacksApi.prototype.addRedirectCallbackURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.addRedirectCallbackURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete callback URLs.\n     * Delete Callback URLs\n     */ CallbacksApi.prototype.deleteCallbackURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling deleteCallbackURLs.\");\n                        }\n                        if (requestParameters.urls === null || requestParameters.urls === undefined) {\n                            throw new runtime.RequiredError(\"urls\", \"Required parameter requestParameters.urls was null or undefined when calling deleteCallbackURLs.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.urls !== undefined) {\n                            queryParameters[\"urls\"] = requestParameters.urls;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_redirect_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete callback URLs.\n     * Delete Callback URLs\n     */ CallbacksApi.prototype.deleteCallbackURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteCallbackURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete logout URLs.\n     * Delete Logout URLs\n     */ CallbacksApi.prototype.deleteLogoutURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling deleteLogoutURLs.\");\n                        }\n                        if (requestParameters.urls === null || requestParameters.urls === undefined) {\n                            throw new runtime.RequiredError(\"urls\", \"Required parameter requestParameters.urls was null or undefined when calling deleteLogoutURLs.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.urls !== undefined) {\n                            queryParameters[\"urls\"] = requestParameters.urls;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_logout_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete logout URLs.\n     * Delete Logout URLs\n     */ CallbacksApi.prototype.deleteLogoutURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteLogoutURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns an application\\'s redirect callback URLs.\n     * List Callback URLs\n     */ CallbacksApi.prototype.getCallbackURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling getCallbackURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_redirect_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.RedirectCallbackUrlsFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns an application\\'s redirect callback URLs.\n     * List Callback URLs\n     */ CallbacksApi.prototype.getCallbackURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getCallbackURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns an application\\'s logout redirect URLs.\n     * List Logout URLs\n     */ CallbacksApi.prototype.getLogoutURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling getLogoutURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_logout_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.LogoutRedirectUrlsFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns an application\\'s logout redirect URLs.\n     * List Logout URLs\n     */ CallbacksApi.prototype.getLogoutURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getLogoutURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Replace all logout redirect URLs.\n     * Replace Logout Redirect URLs\n     */ CallbacksApi.prototype.replaceLogoutRedirectURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling replaceLogoutRedirectURLs.\");\n                        }\n                        if (requestParameters.replaceLogoutRedirectURLsRequest === null || requestParameters.replaceLogoutRedirectURLsRequest === undefined) {\n                            throw new runtime.RequiredError(\"replaceLogoutRedirectURLsRequest\", \"Required parameter requestParameters.replaceLogoutRedirectURLsRequest was null or undefined when calling replaceLogoutRedirectURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_logout_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.ReplaceLogoutRedirectURLsRequestToJSON)(requestParameters.replaceLogoutRedirectURLsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Replace all logout redirect URLs.\n     * Replace Logout Redirect URLs\n     */ CallbacksApi.prototype.replaceLogoutRedirectURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.replaceLogoutRedirectURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Replace all redirect callback URLs.\n     * Replace Redirect Callback URLs\n     */ CallbacksApi.prototype.replaceRedirectCallbackURLsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.appId === null || requestParameters.appId === undefined) {\n                            throw new runtime.RequiredError(\"appId\", \"Required parameter requestParameters.appId was null or undefined when calling replaceRedirectCallbackURLs.\");\n                        }\n                        if (requestParameters.replaceRedirectCallbackURLsRequest === null || requestParameters.replaceRedirectCallbackURLsRequest === undefined) {\n                            throw new runtime.RequiredError(\"replaceRedirectCallbackURLsRequest\", \"Required parameter requestParameters.replaceRedirectCallbackURLsRequest was null or undefined when calling replaceRedirectCallbackURLs.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/applications/{app_id}/auth_redirect_urls\".replace(\"{\".concat(\"app_id\", \"}\"), encodeURIComponent(String(requestParameters.appId))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.ReplaceRedirectCallbackURLsRequestToJSON)(requestParameters.replaceRedirectCallbackURLsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Replace all redirect callback URLs.\n     * Replace Redirect Callback URLs\n     */ CallbacksApi.prototype.replaceRedirectCallbackURLs = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.replaceRedirectCallbackURLsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return CallbacksApi;\n}(runtime.BaseAPI);\nexports.CallbacksApi = CallbacksApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9hcGlzL0NhbGxiYWNrc0FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNELElBQUlBLFlBQVksQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxTQUFTLElBQUs7SUFDeEMsSUFBSUMsZ0JBQWdCLFNBQVVDLENBQUMsRUFBRUMsQ0FBQztRQUM5QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1lBQUVDLFdBQVcsRUFBRTtRQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1lBQUlELEVBQUVJLFNBQVMsR0FBR0g7UUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7WUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUMsT0FBT0ssU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUFFO1FBQ3BHLE9BQU9QLGNBQWNDLEdBQUdDO0lBQzVCO0lBQ0EsT0FBTyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSSxPQUFPQSxNQUFNLGNBQWNBLE1BQU0sTUFDakMsTUFBTSxJQUFJUyxVQUFVLHlCQUF5QkMsT0FBT1YsS0FBSztRQUM3REYsY0FBY0MsR0FBR0M7UUFDakIsU0FBU1c7WUFBTyxJQUFJLENBQUNDLFdBQVcsR0FBR2I7UUFBRztRQUN0Q0EsRUFBRU8sU0FBUyxHQUFHTixNQUFNLE9BQU9DLE9BQU9ZLE1BQU0sQ0FBQ2IsS0FBTVcsQ0FBQUEsR0FBR0wsU0FBUyxHQUFHTixFQUFFTSxTQUFTLEVBQUUsSUFBSUssSUFBRztJQUN0RjtBQUNKO0FBQ0EsSUFBSUcsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNYixDQUFBQSxPQUFPWSxNQUFNLEdBQUksU0FBU0UsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPbkIsT0FBT29CLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FoQixPQUFPMEIsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNM0IsQ0FBQUEsT0FBT1ksTUFBTSxHQUFJLFNBQVNFLENBQUMsRUFBRWMsQ0FBQztJQUN6RjVCLE9BQU8wQixjQUFjLENBQUNaLEdBQUcsV0FBVztRQUFFVSxZQUFZO1FBQU1LLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTZCxDQUFDLEVBQUVjLENBQUM7SUFDZGQsQ0FBQyxDQUFDLFVBQVUsR0FBR2M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSVYsVUFBVSxFQUFFLE9BQU9VO0lBQ2xDLElBQUlDLFNBQVMsQ0FBQztJQUNkLElBQUlELE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSWYsS0FBS2UsSUFBSyxJQUFJZixNQUFNLGFBQWFoQixPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDd0IsS0FBS2YsSUFBSUgsZ0JBQWdCbUIsUUFBUUQsS0FBS2Y7SUFBRTtJQUN4SVcsbUJBQW1CSyxRQUFRRDtJQUMzQixPQUFPQztBQUNYO0FBQ0EsSUFBSUMsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1ULEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJPLElBQUlQLFFBQVEsSUFBSU8sRUFBRSxTQUFVRyxPQUFPO1lBQUlBLFFBQVFWO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtPLENBQUFBLEtBQU1BLENBQUFBLElBQUlJLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVYixLQUFLO1lBQUksSUFBSTtnQkFBRWMsS0FBS04sVUFBVU8sSUFBSSxDQUFDZjtZQUFTLEVBQUUsT0FBT2dCLEdBQUc7Z0JBQUVKLE9BQU9JO1lBQUk7UUFBRTtRQUMxRixTQUFTQyxTQUFTakIsS0FBSztZQUFJLElBQUk7Z0JBQUVjLEtBQUtOLFNBQVMsQ0FBQyxRQUFRLENBQUNSO1lBQVMsRUFBRSxPQUFPZ0IsR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtYLE1BQU07WUFBSUEsT0FBT2UsSUFBSSxHQUFHUixRQUFRUCxPQUFPSCxLQUFLLElBQUlTLE1BQU1OLE9BQU9ILEtBQUssRUFBRW1CLElBQUksQ0FBQ04sV0FBV0k7UUFBVztRQUM3R0gsS0FBSyxDQUFDTixZQUFZQSxVQUFVWSxLQUFLLENBQUNmLFNBQVNDLGNBQWMsRUFBRSxHQUFHUyxJQUFJO0lBQ3RFO0FBQ0o7QUFDQSxJQUFJTSxjQUFjLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsV0FBVyxJQUFLLFNBQVVoQixPQUFPLEVBQUVpQixJQUFJO0lBQ25FLElBQUlDLElBQUk7UUFBRUMsT0FBTztRQUFHQyxNQUFNO1lBQWEsSUFBSUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxHQUFHLE1BQU1BLENBQUMsQ0FBQyxFQUFFO1lBQUUsT0FBT0EsQ0FBQyxDQUFDLEVBQUU7UUFBRTtRQUFHQyxNQUFNLEVBQUU7UUFBRUMsS0FBSyxFQUFFO0lBQUMsR0FBR0MsR0FBR0MsR0FBR0osR0FBR0s7SUFDL0csT0FBT0EsSUFBSTtRQUFFaEIsTUFBTWlCLEtBQUs7UUFBSSxTQUFTQSxLQUFLO1FBQUksVUFBVUEsS0FBSztJQUFHLEdBQUcsT0FBT0MsV0FBVyxjQUFlRixDQUFBQSxDQUFDLENBQUNFLE9BQU9DLFFBQVEsQ0FBQyxHQUFHO1FBQWEsT0FBTyxJQUFJO0lBQUUsSUFBSUg7SUFDdkosU0FBU0MsS0FBS0csQ0FBQztRQUFJLE9BQU8sU0FBVXBDLENBQUM7WUFBSSxPQUFPZSxLQUFLO2dCQUFDcUI7Z0JBQUdwQzthQUFFO1FBQUc7SUFBRztJQUNqRSxTQUFTZSxLQUFLc0IsRUFBRTtRQUNaLElBQUlQLEdBQUcsTUFBTSxJQUFJbEQsVUFBVTtRQUMzQixNQUFPb0QsS0FBTUEsQ0FBQUEsSUFBSSxHQUFHSyxFQUFFLENBQUMsRUFBRSxJQUFLYixDQUFBQSxJQUFJLEVBQUMsR0FBSUEsRUFBRyxJQUFJO1lBQzFDLElBQUlNLElBQUksR0FBR0MsS0FBTUosQ0FBQUEsSUFBSVUsRUFBRSxDQUFDLEVBQUUsR0FBRyxJQUFJTixDQUFDLENBQUMsU0FBUyxHQUFHTSxFQUFFLENBQUMsRUFBRSxHQUFHTixDQUFDLENBQUMsUUFBUSxJQUFLLEVBQUNKLElBQUlJLENBQUMsQ0FBQyxTQUFTLEtBQUtKLEVBQUVoRCxJQUFJLENBQUNvRCxJQUFJLEtBQUtBLEVBQUVmLElBQUksS0FBSyxDQUFDLENBQUNXLElBQUlBLEVBQUVoRCxJQUFJLENBQUNvRCxHQUFHTSxFQUFFLENBQUMsRUFBRSxHQUFHbEIsSUFBSSxFQUFFLE9BQU9RO1lBQzNKLElBQUlJLElBQUksR0FBR0osR0FBR1UsS0FBSztnQkFBQ0EsRUFBRSxDQUFDLEVBQUUsR0FBRztnQkFBR1YsRUFBRTFCLEtBQUs7YUFBQztZQUN2QyxPQUFRb0MsRUFBRSxDQUFDLEVBQUU7Z0JBQ1QsS0FBSztnQkFBRyxLQUFLO29CQUFHVixJQUFJVTtvQkFBSTtnQkFDeEIsS0FBSztvQkFBR2IsRUFBRUMsS0FBSztvQkFBSSxPQUFPO3dCQUFFeEIsT0FBT29DLEVBQUUsQ0FBQyxFQUFFO3dCQUFFbEIsTUFBTTtvQkFBTTtnQkFDdEQsS0FBSztvQkFBR0ssRUFBRUMsS0FBSztvQkFBSU0sSUFBSU0sRUFBRSxDQUFDLEVBQUU7b0JBQUVBLEtBQUs7d0JBQUM7cUJBQUU7b0JBQUU7Z0JBQ3hDLEtBQUs7b0JBQUdBLEtBQUtiLEVBQUVLLEdBQUcsQ0FBQ1MsR0FBRztvQkFBSWQsRUFBRUksSUFBSSxDQUFDVSxHQUFHO29CQUFJO2dCQUN4QztvQkFDSSxJQUFJLENBQUVYLENBQUFBLElBQUlILEVBQUVJLElBQUksRUFBRUQsSUFBSUEsRUFBRVksTUFBTSxHQUFHLEtBQUtaLENBQUMsQ0FBQ0EsRUFBRVksTUFBTSxHQUFHLEVBQUUsS0FBTUYsQ0FBQUEsRUFBRSxDQUFDLEVBQUUsS0FBSyxLQUFLQSxFQUFFLENBQUMsRUFBRSxLQUFLLElBQUk7d0JBQUViLElBQUk7d0JBQUc7b0JBQVU7b0JBQzNHLElBQUlhLEVBQUUsQ0FBQyxFQUFFLEtBQUssS0FBTSxFQUFDVixLQUFNVSxFQUFFLENBQUMsRUFBRSxHQUFHVixDQUFDLENBQUMsRUFBRSxJQUFJVSxFQUFFLENBQUMsRUFBRSxHQUFHVixDQUFDLENBQUMsRUFBRSxHQUFJO3dCQUFFSCxFQUFFQyxLQUFLLEdBQUdZLEVBQUUsQ0FBQyxFQUFFO3dCQUFFO29CQUFPO29CQUNyRixJQUFJQSxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUtiLEVBQUVDLEtBQUssR0FBR0UsQ0FBQyxDQUFDLEVBQUUsRUFBRTt3QkFBRUgsRUFBRUMsS0FBSyxHQUFHRSxDQUFDLENBQUMsRUFBRTt3QkFBRUEsSUFBSVU7d0JBQUk7b0JBQU87b0JBQ3BFLElBQUlWLEtBQUtILEVBQUVDLEtBQUssR0FBR0UsQ0FBQyxDQUFDLEVBQUUsRUFBRTt3QkFBRUgsRUFBRUMsS0FBSyxHQUFHRSxDQUFDLENBQUMsRUFBRTt3QkFBRUgsRUFBRUssR0FBRyxDQUFDVyxJQUFJLENBQUNIO3dCQUFLO29CQUFPO29CQUNsRSxJQUFJVixDQUFDLENBQUMsRUFBRSxFQUFFSCxFQUFFSyxHQUFHLENBQUNTLEdBQUc7b0JBQ25CZCxFQUFFSSxJQUFJLENBQUNVLEdBQUc7b0JBQUk7WUFDdEI7WUFDQUQsS0FBS2QsS0FBSzVDLElBQUksQ0FBQzJCLFNBQVNrQjtRQUM1QixFQUFFLE9BQU9QLEdBQUc7WUFBRW9CLEtBQUs7Z0JBQUM7Z0JBQUdwQjthQUFFO1lBQUVjLElBQUk7UUFBRyxTQUFVO1lBQUVELElBQUlILElBQUk7UUFBRztRQUN6RCxJQUFJVSxFQUFFLENBQUMsRUFBRSxHQUFHLEdBQUcsTUFBTUEsRUFBRSxDQUFDLEVBQUU7UUFBRSxPQUFPO1lBQUVwQyxPQUFPb0MsRUFBRSxDQUFDLEVBQUUsR0FBR0EsRUFBRSxDQUFDLEVBQUUsR0FBRyxLQUFLO1lBQUdsQixNQUFNO1FBQUs7SUFDbkY7QUFDSjtBQUNBL0MsOENBQTZDO0lBQUU2QixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdEd0Msb0JBQW9CLEdBQUcsS0FBSztBQUM1QixJQUFJRSxVQUFVekMsYUFBYTBDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQ2xELElBQUlDLGFBQWFELG1CQUFPQSxDQUFDLHlHQUFvQjtBQUM3Qzs7Q0FFQyxHQUNELElBQUlGLGVBQWUsV0FBVyxHQUFJLFNBQVVJLE1BQU07SUFDOUM5RSxVQUFVMEUsY0FBY0k7SUFDeEIsU0FBU0o7UUFDTCxPQUFPSSxXQUFXLFFBQVFBLE9BQU96QixLQUFLLENBQUMsSUFBSSxFQUFFMEIsY0FBYyxJQUFJO0lBQ25FO0lBQ0E7OztLQUdDLEdBQ0RMLGFBQWFqRSxTQUFTLENBQUN1RSx3QkFBd0IsR0FBRyxTQUFVQyxpQkFBaUIsRUFBRUMsYUFBYTtRQUN4RixPQUFPN0MsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxJQUFJOEMsaUJBQWlCQyxrQkFBa0JDLE9BQU9DLGFBQWFDO1lBQzNELE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFDRCxJQUFJd0Isa0JBQWtCUSxLQUFLLEtBQUssUUFBUVIsa0JBQWtCUSxLQUFLLEtBQUtuRSxXQUFXOzRCQUMzRSxNQUFNLElBQUlxRCxRQUFRZSxhQUFhLENBQUMsU0FBUzt3QkFDN0M7d0JBQ0EsSUFBSVQsa0JBQWtCVSxnQ0FBZ0MsS0FBSyxRQUFRVixrQkFBa0JVLGdDQUFnQyxLQUFLckUsV0FBVzs0QkFDakksTUFBTSxJQUFJcUQsUUFBUWUsYUFBYSxDQUFDLG9DQUFvQzt3QkFDeEU7d0JBQ0FQLGtCQUFrQixDQUFDO3dCQUNuQkMsbUJBQW1CLENBQUM7d0JBQ3BCQSxnQkFBZ0IsQ0FBQyxlQUFlLEdBQUc7d0JBQ25DLElBQUksQ0FBRSxLQUFJLENBQUNRLGFBQWEsSUFBSSxJQUFJLENBQUNBLGFBQWEsQ0FBQ0MsV0FBVyxHQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJO3lCQUFFO3dCQUNwRlIsUUFBUSxJQUFJLENBQUNPLGFBQWEsQ0FBQ0MsV0FBVzt3QkFDdEMsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUlSLE1BQU0sbUJBQW1CLEVBQUU7eUJBQUU7b0JBQ3RELEtBQUs7d0JBQ0RDLGNBQWNFLEdBQUc5QixJQUFJO3dCQUNyQixJQUFJNEIsYUFBYTs0QkFDYkYsZ0JBQWdCLENBQUMsZ0JBQWdCLEdBQUcsVUFBVVUsTUFBTSxDQUFDUjt3QkFDekQ7d0JBQ0FFLEdBQUcvQixLQUFLLEdBQUc7b0JBQ2YsS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUNzQyxPQUFPLENBQUM7Z0NBQ2xDQyxNQUFNLGlEQUFpREMsT0FBTyxDQUFDLElBQUlILE1BQU0sQ0FBQyxVQUFVLE1BQU1JLG1CQUFtQnJGLE9BQU9vRSxrQkFBa0JRLEtBQUs7Z0NBQzNJVSxRQUFRO2dDQUNSQyxTQUFTaEI7Z0NBQ1RpQixPQUFPbEI7Z0NBQ1A1QixNQUFNLENBQUMsR0FBR3NCLFdBQVd5QixzQ0FBc0MsRUFBRXJCLGtCQUFrQlUsZ0NBQWdDOzRCQUNuSCxHQUFHVDt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVc0Qix1QkFBdUIsRUFBRUQ7NEJBQVk7eUJBQUc7Z0JBQ3pKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDaUcscUJBQXFCLEdBQUcsU0FBVXpCLGlCQUFpQixFQUFFQyxhQUFhO1FBQ3JGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUN1Qix3QkFBd0IsQ0FBQ0MsbUJBQW1CQzt5QkFBZTtvQkFDN0YsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJNkIsU0FBU3RELEtBQUs7eUJBQUc7b0JBQzFDLEtBQUs7d0JBQUcsT0FBTzs0QkFBQyxFQUFFLFFBQVE7NEJBQUl1RCxHQUFHOUIsSUFBSTt5QkFBRztnQkFDNUM7WUFDSjtRQUNKO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRGdCLGFBQWFqRSxTQUFTLENBQUNrRywwQkFBMEIsR0FBRyxTQUFVMUIsaUJBQWlCLEVBQUVDLGFBQWE7UUFDMUYsT0FBTzdDLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsSUFBSThDLGlCQUFpQkMsa0JBQWtCQyxPQUFPQyxhQUFhQztZQUMzRCxPQUFPakMsWUFBWSxJQUFJLEVBQUUsU0FBVWtDLEVBQUU7Z0JBQ2pDLE9BQVFBLEdBQUcvQixLQUFLO29CQUNaLEtBQUs7d0JBQ0QsSUFBSXdCLGtCQUFrQlEsS0FBSyxLQUFLLFFBQVFSLGtCQUFrQlEsS0FBSyxLQUFLbkUsV0FBVzs0QkFDM0UsTUFBTSxJQUFJcUQsUUFBUWUsYUFBYSxDQUFDLFNBQVM7d0JBQzdDO3dCQUNBLElBQUlULGtCQUFrQjJCLGtDQUFrQyxLQUFLLFFBQVEzQixrQkFBa0IyQixrQ0FBa0MsS0FBS3RGLFdBQVc7NEJBQ3JJLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxzQ0FBc0M7d0JBQzFFO3dCQUNBUCxrQkFBa0IsQ0FBQzt3QkFDbkJDLG1CQUFtQixDQUFDO3dCQUNwQkEsZ0JBQWdCLENBQUMsZUFBZSxHQUFHO3dCQUNuQyxJQUFJLENBQUUsS0FBSSxDQUFDUSxhQUFhLElBQUksSUFBSSxDQUFDQSxhQUFhLENBQUNDLFdBQVcsR0FBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTt5QkFBRTt3QkFDcEZSLFFBQVEsSUFBSSxDQUFDTyxhQUFhLENBQUNDLFdBQVc7d0JBQ3RDLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJUixNQUFNLG1CQUFtQixFQUFFO3lCQUFFO29CQUN0RCxLQUFLO3dCQUNEQyxjQUFjRSxHQUFHOUIsSUFBSTt3QkFDckIsSUFBSTRCLGFBQWE7NEJBQ2JGLGdCQUFnQixDQUFDLGdCQUFnQixHQUFHLFVBQVVVLE1BQU0sQ0FBQ1I7d0JBQ3pEO3dCQUNBRSxHQUFHL0IsS0FBSyxHQUFHO29CQUNmLEtBQUs7d0JBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUksSUFBSSxDQUFDc0MsT0FBTyxDQUFDO2dDQUNsQ0MsTUFBTSxtREFBbURDLE9BQU8sQ0FBQyxJQUFJSCxNQUFNLENBQUMsVUFBVSxNQUFNSSxtQkFBbUJyRixPQUFPb0Usa0JBQWtCUSxLQUFLO2dDQUM3SVUsUUFBUTtnQ0FDUkMsU0FBU2hCO2dDQUNUaUIsT0FBT2xCO2dDQUNQNUIsTUFBTSxDQUFDLEdBQUdzQixXQUFXZ0Msd0NBQXdDLEVBQUU1QixrQkFBa0IyQixrQ0FBa0M7NEJBQ3ZILEdBQUcxQjt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVc0Qix1QkFBdUIsRUFBRUQ7NEJBQVk7eUJBQUc7Z0JBQ3pKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDcUcsdUJBQXVCLEdBQUcsU0FBVTdCLGlCQUFpQixFQUFFQyxhQUFhO1FBQ3ZGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUNrRCwwQkFBMEIsQ0FBQzFCLG1CQUFtQkM7eUJBQWU7b0JBQy9GLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTZCLFNBQVN0RCxLQUFLO3lCQUFHO29CQUMxQyxLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJdUQsR0FBRzlCLElBQUk7eUJBQUc7Z0JBQzVDO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0RnQixhQUFhakUsU0FBUyxDQUFDc0cscUJBQXFCLEdBQUcsU0FBVTlCLGlCQUFpQixFQUFFQyxhQUFhO1FBQ3JGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk4QyxpQkFBaUJDLGtCQUFrQkMsT0FBT0MsYUFBYUM7WUFDM0QsT0FBT2pDLFlBQVksSUFBSSxFQUFFLFNBQVVrQyxFQUFFO2dCQUNqQyxPQUFRQSxHQUFHL0IsS0FBSztvQkFDWixLQUFLO3dCQUNELElBQUl3QixrQkFBa0JRLEtBQUssS0FBSyxRQUFRUixrQkFBa0JRLEtBQUssS0FBS25FLFdBQVc7NEJBQzNFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxTQUFTO3dCQUM3Qzt3QkFDQSxJQUFJVCxrQkFBa0IrQixJQUFJLEtBQUssUUFBUS9CLGtCQUFrQitCLElBQUksS0FBSzFGLFdBQVc7NEJBQ3pFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxRQUFRO3dCQUM1Qzt3QkFDQVAsa0JBQWtCLENBQUM7d0JBQ25CLElBQUlGLGtCQUFrQitCLElBQUksS0FBSzFGLFdBQVc7NEJBQ3RDNkQsZUFBZSxDQUFDLE9BQU8sR0FBR0Ysa0JBQWtCK0IsSUFBSTt3QkFDcEQ7d0JBQ0E1QixtQkFBbUIsQ0FBQzt3QkFDcEIsSUFBSSxDQUFFLEtBQUksQ0FBQ1EsYUFBYSxJQUFJLElBQUksQ0FBQ0EsYUFBYSxDQUFDQyxXQUFXLEdBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUk7eUJBQUU7d0JBQ3BGUixRQUFRLElBQUksQ0FBQ08sYUFBYSxDQUFDQyxXQUFXO3dCQUN0QyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSVIsTUFBTSxtQkFBbUIsRUFBRTt5QkFBRTtvQkFDdEQsS0FBSzt3QkFDREMsY0FBY0UsR0FBRzlCLElBQUk7d0JBQ3JCLElBQUk0QixhQUFhOzRCQUNiRixnQkFBZ0IsQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVVSxNQUFNLENBQUNSO3dCQUN6RDt3QkFDQUUsR0FBRy9CLEtBQUssR0FBRztvQkFDZixLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJLElBQUksQ0FBQ3NDLE9BQU8sQ0FBQztnQ0FDbENDLE1BQU0sbURBQW1EQyxPQUFPLENBQUMsSUFBSUgsTUFBTSxDQUFDLFVBQVUsTUFBTUksbUJBQW1CckYsT0FBT29FLGtCQUFrQlEsS0FBSztnQ0FDN0lVLFFBQVE7Z0NBQ1JDLFNBQVNoQjtnQ0FDVGlCLE9BQU9sQjs0QkFDWCxHQUFHRDt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVc0Qix1QkFBdUIsRUFBRUQ7NEJBQVk7eUJBQUc7Z0JBQ3pKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDd0csa0JBQWtCLEdBQUcsU0FBVWhDLGlCQUFpQixFQUFFQyxhQUFhO1FBQ2xGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUNzRCxxQkFBcUIsQ0FBQzlCLG1CQUFtQkM7eUJBQWU7b0JBQzFGLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTZCLFNBQVN0RCxLQUFLO3lCQUFHO29CQUMxQyxLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJdUQsR0FBRzlCLElBQUk7eUJBQUc7Z0JBQzVDO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0RnQixhQUFhakUsU0FBUyxDQUFDeUcsbUJBQW1CLEdBQUcsU0FBVWpDLGlCQUFpQixFQUFFQyxhQUFhO1FBQ25GLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk4QyxpQkFBaUJDLGtCQUFrQkMsT0FBT0MsYUFBYUM7WUFDM0QsT0FBT2pDLFlBQVksSUFBSSxFQUFFLFNBQVVrQyxFQUFFO2dCQUNqQyxPQUFRQSxHQUFHL0IsS0FBSztvQkFDWixLQUFLO3dCQUNELElBQUl3QixrQkFBa0JRLEtBQUssS0FBSyxRQUFRUixrQkFBa0JRLEtBQUssS0FBS25FLFdBQVc7NEJBQzNFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxTQUFTO3dCQUM3Qzt3QkFDQSxJQUFJVCxrQkFBa0IrQixJQUFJLEtBQUssUUFBUS9CLGtCQUFrQitCLElBQUksS0FBSzFGLFdBQVc7NEJBQ3pFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxRQUFRO3dCQUM1Qzt3QkFDQVAsa0JBQWtCLENBQUM7d0JBQ25CLElBQUlGLGtCQUFrQitCLElBQUksS0FBSzFGLFdBQVc7NEJBQ3RDNkQsZUFBZSxDQUFDLE9BQU8sR0FBR0Ysa0JBQWtCK0IsSUFBSTt3QkFDcEQ7d0JBQ0E1QixtQkFBbUIsQ0FBQzt3QkFDcEIsSUFBSSxDQUFFLEtBQUksQ0FBQ1EsYUFBYSxJQUFJLElBQUksQ0FBQ0EsYUFBYSxDQUFDQyxXQUFXLEdBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUk7eUJBQUU7d0JBQ3BGUixRQUFRLElBQUksQ0FBQ08sYUFBYSxDQUFDQyxXQUFXO3dCQUN0QyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSVIsTUFBTSxtQkFBbUIsRUFBRTt5QkFBRTtvQkFDdEQsS0FBSzt3QkFDREMsY0FBY0UsR0FBRzlCLElBQUk7d0JBQ3JCLElBQUk0QixhQUFhOzRCQUNiRixnQkFBZ0IsQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVVSxNQUFNLENBQUNSO3dCQUN6RDt3QkFDQUUsR0FBRy9CLEtBQUssR0FBRztvQkFDZixLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJLElBQUksQ0FBQ3NDLE9BQU8sQ0FBQztnQ0FDbENDLE1BQU0saURBQWlEQyxPQUFPLENBQUMsSUFBSUgsTUFBTSxDQUFDLFVBQVUsTUFBTUksbUJBQW1CckYsT0FBT29FLGtCQUFrQlEsS0FBSztnQ0FDM0lVLFFBQVE7Z0NBQ1JDLFNBQVNoQjtnQ0FDVGlCLE9BQU9sQjs0QkFDWCxHQUFHRDt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVc0Qix1QkFBdUIsRUFBRUQ7NEJBQVk7eUJBQUc7Z0JBQ3pKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDMEcsZ0JBQWdCLEdBQUcsU0FBVWxDLGlCQUFpQixFQUFFQyxhQUFhO1FBQ2hGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUN5RCxtQkFBbUIsQ0FBQ2pDLG1CQUFtQkM7eUJBQWU7b0JBQ3hGLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTZCLFNBQVN0RCxLQUFLO3lCQUFHO29CQUMxQyxLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJdUQsR0FBRzlCLElBQUk7eUJBQUc7Z0JBQzVDO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0RnQixhQUFhakUsU0FBUyxDQUFDMkcsa0JBQWtCLEdBQUcsU0FBVW5DLGlCQUFpQixFQUFFQyxhQUFhO1FBQ2xGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk4QyxpQkFBaUJDLGtCQUFrQkMsT0FBT0MsYUFBYUM7WUFDM0QsT0FBT2pDLFlBQVksSUFBSSxFQUFFLFNBQVVrQyxFQUFFO2dCQUNqQyxPQUFRQSxHQUFHL0IsS0FBSztvQkFDWixLQUFLO3dCQUNELElBQUl3QixrQkFBa0JRLEtBQUssS0FBSyxRQUFRUixrQkFBa0JRLEtBQUssS0FBS25FLFdBQVc7NEJBQzNFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxTQUFTO3dCQUM3Qzt3QkFDQVAsa0JBQWtCLENBQUM7d0JBQ25CQyxtQkFBbUIsQ0FBQzt3QkFDcEIsSUFBSSxDQUFFLEtBQUksQ0FBQ1EsYUFBYSxJQUFJLElBQUksQ0FBQ0EsYUFBYSxDQUFDQyxXQUFXLEdBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUk7eUJBQUU7d0JBQ3BGUixRQUFRLElBQUksQ0FBQ08sYUFBYSxDQUFDQyxXQUFXO3dCQUN0QyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSVIsTUFBTSxtQkFBbUIsRUFBRTt5QkFBRTtvQkFDdEQsS0FBSzt3QkFDREMsY0FBY0UsR0FBRzlCLElBQUk7d0JBQ3JCLElBQUk0QixhQUFhOzRCQUNiRixnQkFBZ0IsQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVVSxNQUFNLENBQUNSO3dCQUN6RDt3QkFDQUUsR0FBRy9CLEtBQUssR0FBRztvQkFDZixLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJLElBQUksQ0FBQ3NDLE9BQU8sQ0FBQztnQ0FDbENDLE1BQU0sbURBQW1EQyxPQUFPLENBQUMsSUFBSUgsTUFBTSxDQUFDLFVBQVUsTUFBTUksbUJBQW1CckYsT0FBT29FLGtCQUFrQlEsS0FBSztnQ0FDN0lVLFFBQVE7Z0NBQ1JDLFNBQVNoQjtnQ0FDVGlCLE9BQU9sQjs0QkFDWCxHQUFHRDt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVd3Qyw0QkFBNEIsRUFBRWI7NEJBQVk7eUJBQUc7Z0JBQzlKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDNkcsZUFBZSxHQUFHLFNBQVVyQyxpQkFBaUIsRUFBRUMsYUFBYTtRQUMvRSxPQUFPN0MsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxJQUFJa0Q7WUFDSixPQUFPakMsWUFBWSxJQUFJLEVBQUUsU0FBVWtDLEVBQUU7Z0JBQ2pDLE9BQVFBLEdBQUcvQixLQUFLO29CQUNaLEtBQUs7d0JBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUksSUFBSSxDQUFDMkQsa0JBQWtCLENBQUNuQyxtQkFBbUJDO3lCQUFlO29CQUN2RixLQUFLO3dCQUNESyxXQUFXQyxHQUFHOUIsSUFBSTt3QkFDbEIsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUk2QixTQUFTdEQsS0FBSzt5QkFBRztvQkFDMUMsS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsUUFBUTs0QkFBSXVELEdBQUc5QixJQUFJO3lCQUFHO2dCQUM1QztZQUNKO1FBQ0o7SUFDSjtJQUNBOzs7S0FHQyxHQUNEZ0IsYUFBYWpFLFNBQVMsQ0FBQzhHLGdCQUFnQixHQUFHLFNBQVV0QyxpQkFBaUIsRUFBRUMsYUFBYTtRQUNoRixPQUFPN0MsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxJQUFJOEMsaUJBQWlCQyxrQkFBa0JDLE9BQU9DLGFBQWFDO1lBQzNELE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFDRCxJQUFJd0Isa0JBQWtCUSxLQUFLLEtBQUssUUFBUVIsa0JBQWtCUSxLQUFLLEtBQUtuRSxXQUFXOzRCQUMzRSxNQUFNLElBQUlxRCxRQUFRZSxhQUFhLENBQUMsU0FBUzt3QkFDN0M7d0JBQ0FQLGtCQUFrQixDQUFDO3dCQUNuQkMsbUJBQW1CLENBQUM7d0JBQ3BCLElBQUksQ0FBRSxLQUFJLENBQUNRLGFBQWEsSUFBSSxJQUFJLENBQUNBLGFBQWEsQ0FBQ0MsV0FBVyxHQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJO3lCQUFFO3dCQUNwRlIsUUFBUSxJQUFJLENBQUNPLGFBQWEsQ0FBQ0MsV0FBVzt3QkFDdEMsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUlSLE1BQU0sbUJBQW1CLEVBQUU7eUJBQUU7b0JBQ3RELEtBQUs7d0JBQ0RDLGNBQWNFLEdBQUc5QixJQUFJO3dCQUNyQixJQUFJNEIsYUFBYTs0QkFDYkYsZ0JBQWdCLENBQUMsZ0JBQWdCLEdBQUcsVUFBVVUsTUFBTSxDQUFDUjt3QkFDekQ7d0JBQ0FFLEdBQUcvQixLQUFLLEdBQUc7b0JBQ2YsS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUNzQyxPQUFPLENBQUM7Z0NBQ2xDQyxNQUFNLGlEQUFpREMsT0FBTyxDQUFDLElBQUlILE1BQU0sQ0FBQyxVQUFVLE1BQU1JLG1CQUFtQnJGLE9BQU9vRSxrQkFBa0JRLEtBQUs7Z0NBQzNJVSxRQUFRO2dDQUNSQyxTQUFTaEI7Z0NBQ1RpQixPQUFPbEI7NEJBQ1gsR0FBR0Q7eUJBQWU7b0JBQ3RCLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsUUFBUTs0QkFBSSxJQUFJaUIsUUFBUTRCLGVBQWUsQ0FBQ2hCLFVBQVUsU0FBVWlCLFNBQVM7Z0NBQUksT0FBTyxDQUFDLEdBQUczQixXQUFXMkMsMEJBQTBCLEVBQUVoQjs0QkFBWTt5QkFBRztnQkFDNUo7WUFDSjtRQUNKO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRDlCLGFBQWFqRSxTQUFTLENBQUNnSCxhQUFhLEdBQUcsU0FBVXhDLGlCQUFpQixFQUFFQyxhQUFhO1FBQzdFLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUM4RCxnQkFBZ0IsQ0FBQ3RDLG1CQUFtQkM7eUJBQWU7b0JBQ3JGLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTZCLFNBQVN0RCxLQUFLO3lCQUFHO29CQUMxQyxLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJdUQsR0FBRzlCLElBQUk7eUJBQUc7Z0JBQzVDO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0RnQixhQUFhakUsU0FBUyxDQUFDaUgsNEJBQTRCLEdBQUcsU0FBVXpDLGlCQUFpQixFQUFFQyxhQUFhO1FBQzVGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk4QyxpQkFBaUJDLGtCQUFrQkMsT0FBT0MsYUFBYUM7WUFDM0QsT0FBT2pDLFlBQVksSUFBSSxFQUFFLFNBQVVrQyxFQUFFO2dCQUNqQyxPQUFRQSxHQUFHL0IsS0FBSztvQkFDWixLQUFLO3dCQUNELElBQUl3QixrQkFBa0JRLEtBQUssS0FBSyxRQUFRUixrQkFBa0JRLEtBQUssS0FBS25FLFdBQVc7NEJBQzNFLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxTQUFTO3dCQUM3Qzt3QkFDQSxJQUFJVCxrQkFBa0JVLGdDQUFnQyxLQUFLLFFBQVFWLGtCQUFrQlUsZ0NBQWdDLEtBQUtyRSxXQUFXOzRCQUNqSSxNQUFNLElBQUlxRCxRQUFRZSxhQUFhLENBQUMsb0NBQW9DO3dCQUN4RTt3QkFDQVAsa0JBQWtCLENBQUM7d0JBQ25CQyxtQkFBbUIsQ0FBQzt3QkFDcEJBLGdCQUFnQixDQUFDLGVBQWUsR0FBRzt3QkFDbkMsSUFBSSxDQUFFLEtBQUksQ0FBQ1EsYUFBYSxJQUFJLElBQUksQ0FBQ0EsYUFBYSxDQUFDQyxXQUFXLEdBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUk7eUJBQUU7d0JBQ3BGUixRQUFRLElBQUksQ0FBQ08sYUFBYSxDQUFDQyxXQUFXO3dCQUN0QyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSVIsTUFBTSxtQkFBbUIsRUFBRTt5QkFBRTtvQkFDdEQsS0FBSzt3QkFDREMsY0FBY0UsR0FBRzlCLElBQUk7d0JBQ3JCLElBQUk0QixhQUFhOzRCQUNiRixnQkFBZ0IsQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVVSxNQUFNLENBQUNSO3dCQUN6RDt3QkFDQUUsR0FBRy9CLEtBQUssR0FBRztvQkFDZixLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJLElBQUksQ0FBQ3NDLE9BQU8sQ0FBQztnQ0FDbENDLE1BQU0saURBQWlEQyxPQUFPLENBQUMsSUFBSUgsTUFBTSxDQUFDLFVBQVUsTUFBTUksbUJBQW1CckYsT0FBT29FLGtCQUFrQlEsS0FBSztnQ0FDM0lVLFFBQVE7Z0NBQ1JDLFNBQVNoQjtnQ0FDVGlCLE9BQU9sQjtnQ0FDUDVCLE1BQU0sQ0FBQyxHQUFHc0IsV0FBV3lCLHNDQUFzQyxFQUFFckIsa0JBQWtCVSxnQ0FBZ0M7NEJBQ25ILEdBQUdUO3lCQUFlO29CQUN0QixLQUFLO3dCQUNESyxXQUFXQyxHQUFHOUIsSUFBSTt3QkFDbEIsT0FBTzs0QkFBQyxFQUFFLFFBQVE7NEJBQUksSUFBSWlCLFFBQVE0QixlQUFlLENBQUNoQixVQUFVLFNBQVVpQixTQUFTO2dDQUFJLE9BQU8sQ0FBQyxHQUFHM0IsV0FBVzRCLHVCQUF1QixFQUFFRDs0QkFBWTt5QkFBRztnQkFDeko7WUFDSjtRQUNKO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRDlCLGFBQWFqRSxTQUFTLENBQUNrSCx5QkFBeUIsR0FBRyxTQUFVMUMsaUJBQWlCLEVBQUVDLGFBQWE7UUFDekYsT0FBTzdDLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsSUFBSWtEO1lBQ0osT0FBT2pDLFlBQVksSUFBSSxFQUFFLFNBQVVrQyxFQUFFO2dCQUNqQyxPQUFRQSxHQUFHL0IsS0FBSztvQkFDWixLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJLElBQUksQ0FBQ2lFLDRCQUE0QixDQUFDekMsbUJBQW1CQzt5QkFBZTtvQkFDakcsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJNkIsU0FBU3RELEtBQUs7eUJBQUc7b0JBQzFDLEtBQUs7d0JBQUcsT0FBTzs0QkFBQyxFQUFFLFFBQVE7NEJBQUl1RCxHQUFHOUIsSUFBSTt5QkFBRztnQkFDNUM7WUFDSjtRQUNKO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRGdCLGFBQWFqRSxTQUFTLENBQUNtSCw4QkFBOEIsR0FBRyxTQUFVM0MsaUJBQWlCLEVBQUVDLGFBQWE7UUFDOUYsT0FBTzdDLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsSUFBSThDLGlCQUFpQkMsa0JBQWtCQyxPQUFPQyxhQUFhQztZQUMzRCxPQUFPakMsWUFBWSxJQUFJLEVBQUUsU0FBVWtDLEVBQUU7Z0JBQ2pDLE9BQVFBLEdBQUcvQixLQUFLO29CQUNaLEtBQUs7d0JBQ0QsSUFBSXdCLGtCQUFrQlEsS0FBSyxLQUFLLFFBQVFSLGtCQUFrQlEsS0FBSyxLQUFLbkUsV0FBVzs0QkFDM0UsTUFBTSxJQUFJcUQsUUFBUWUsYUFBYSxDQUFDLFNBQVM7d0JBQzdDO3dCQUNBLElBQUlULGtCQUFrQjJCLGtDQUFrQyxLQUFLLFFBQVEzQixrQkFBa0IyQixrQ0FBa0MsS0FBS3RGLFdBQVc7NEJBQ3JJLE1BQU0sSUFBSXFELFFBQVFlLGFBQWEsQ0FBQyxzQ0FBc0M7d0JBQzFFO3dCQUNBUCxrQkFBa0IsQ0FBQzt3QkFDbkJDLG1CQUFtQixDQUFDO3dCQUNwQkEsZ0JBQWdCLENBQUMsZUFBZSxHQUFHO3dCQUNuQyxJQUFJLENBQUUsS0FBSSxDQUFDUSxhQUFhLElBQUksSUFBSSxDQUFDQSxhQUFhLENBQUNDLFdBQVcsR0FBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTt5QkFBRTt3QkFDcEZSLFFBQVEsSUFBSSxDQUFDTyxhQUFhLENBQUNDLFdBQVc7d0JBQ3RDLE9BQU87NEJBQUMsRUFBRSxPQUFPOzRCQUFJUixNQUFNLG1CQUFtQixFQUFFO3lCQUFFO29CQUN0RCxLQUFLO3dCQUNEQyxjQUFjRSxHQUFHOUIsSUFBSTt3QkFDckIsSUFBSTRCLGFBQWE7NEJBQ2JGLGdCQUFnQixDQUFDLGdCQUFnQixHQUFHLFVBQVVVLE1BQU0sQ0FBQ1I7d0JBQ3pEO3dCQUNBRSxHQUFHL0IsS0FBSyxHQUFHO29CQUNmLEtBQUs7d0JBQUcsT0FBTzs0QkFBQyxFQUFFLE9BQU87NEJBQUksSUFBSSxDQUFDc0MsT0FBTyxDQUFDO2dDQUNsQ0MsTUFBTSxtREFBbURDLE9BQU8sQ0FBQyxJQUFJSCxNQUFNLENBQUMsVUFBVSxNQUFNSSxtQkFBbUJyRixPQUFPb0Usa0JBQWtCUSxLQUFLO2dDQUM3SVUsUUFBUTtnQ0FDUkMsU0FBU2hCO2dDQUNUaUIsT0FBT2xCO2dDQUNQNUIsTUFBTSxDQUFDLEdBQUdzQixXQUFXZ0Msd0NBQXdDLEVBQUU1QixrQkFBa0IyQixrQ0FBa0M7NEJBQ3ZILEdBQUcxQjt5QkFBZTtvQkFDdEIsS0FBSzt3QkFDREssV0FBV0MsR0FBRzlCLElBQUk7d0JBQ2xCLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJLElBQUlpQixRQUFRNEIsZUFBZSxDQUFDaEIsVUFBVSxTQUFVaUIsU0FBUztnQ0FBSSxPQUFPLENBQUMsR0FBRzNCLFdBQVc0Qix1QkFBdUIsRUFBRUQ7NEJBQVk7eUJBQUc7Z0JBQ3pKO1lBQ0o7UUFDSjtJQUNKO0lBQ0E7OztLQUdDLEdBQ0Q5QixhQUFhakUsU0FBUyxDQUFDb0gsMkJBQTJCLEdBQUcsU0FBVTVDLGlCQUFpQixFQUFFQyxhQUFhO1FBQzNGLE9BQU83QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUlrRDtZQUNKLE9BQU9qQyxZQUFZLElBQUksRUFBRSxTQUFVa0MsRUFBRTtnQkFDakMsT0FBUUEsR0FBRy9CLEtBQUs7b0JBQ1osS0FBSzt3QkFBRyxPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSSxJQUFJLENBQUNtRSw4QkFBOEIsQ0FBQzNDLG1CQUFtQkM7eUJBQWU7b0JBQ25HLEtBQUs7d0JBQ0RLLFdBQVdDLEdBQUc5QixJQUFJO3dCQUNsQixPQUFPOzRCQUFDLEVBQUUsT0FBTzs0QkFBSTZCLFNBQVN0RCxLQUFLO3lCQUFHO29CQUMxQyxLQUFLO3dCQUFHLE9BQU87NEJBQUMsRUFBRSxRQUFROzRCQUFJdUQsR0FBRzlCLElBQUk7eUJBQUc7Z0JBQzVDO1lBQ0o7UUFDSjtJQUNKO0lBQ0EsT0FBT2dCO0FBQ1gsRUFBRUMsUUFBUW1ELE9BQU87QUFDakJyRCxvQkFBb0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL2FwaXMvQ2FsbGJhY2tzQXBpLmpzP2MzYzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKGcgJiYgKGcgPSAwLCBvcFswXSAmJiAoXyA9IDApKSwgXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNhbGxiYWNrc0FwaSA9IHZvaWQgMDtcbnZhciBydW50aW1lID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpKTtcbnZhciBpbmRleF9qc18xID0gcmVxdWlyZShcIi4uL21vZGVscy9pbmRleC5qc1wiKTtcbi8qKlxuICpcbiAqL1xudmFyIENhbGxiYWNrc0FwaSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ2FsbGJhY2tzQXBpLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENhbGxiYWNrc0FwaSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGQgYWRkaXRpb25hbCBsb2dvdXQgcmVkaXJlY3QgVVJMcy5cbiAgICAgKiBBZGQgTG9nb3V0IFJlZGlyZWN0IFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLmFkZExvZ291dFJlZGlyZWN0VVJMc1JhdyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcXVlcnlQYXJhbWV0ZXJzLCBoZWFkZXJQYXJhbWV0ZXJzLCB0b2tlbiwgdG9rZW5TdHJpbmcsIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSBudWxsIHx8IHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCdhcHBJZCcsICdSZXF1aXJlZCBwYXJhbWV0ZXIgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgd2FzIG51bGwgb3IgdW5kZWZpbmVkIHdoZW4gY2FsbGluZyBhZGRMb2dvdXRSZWRpcmVjdFVSTHMuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QgPT09IG51bGwgfHwgcmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBydW50aW1lLlJlcXVpcmVkRXJyb3IoJ3JlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0JywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdCB3YXMgbnVsbCBvciB1bmRlZmluZWQgd2hlbiBjYWxsaW5nIGFkZExvZ291dFJlZGlyZWN0VVJMcy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVycyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVycyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0aGlzLmNvbmZpZ3VyYXRpb24gJiYgdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiA9IHRoaXMuY29uZmlndXJhdGlvbi5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRva2VuKFwia2luZGVCZWFyZXJBdXRoXCIsIFtdKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuU3RyaW5nID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1tcIkF1dGhvcml6YXRpb25cIl0gPSBcIkJlYXJlciBcIi5jb25jYXQodG9rZW5TdHJpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAyO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYXBpL3YxL2FwcGxpY2F0aW9ucy97YXBwX2lkfS9hdXRoX2xvZ291dF91cmxzXCIucmVwbGFjZShcIntcIi5jb25jYXQoXCJhcHBfaWRcIiwgXCJ9XCIpLCBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlclBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5UGFyYW1ldGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiAoMCwgaW5kZXhfanNfMS5SZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdFRvSlNPTikocmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgaW5pdE92ZXJyaWRlcyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBuZXcgcnVudGltZS5KU09OQXBpUmVzcG9uc2UocmVzcG9uc2UsIGZ1bmN0aW9uIChqc29uVmFsdWUpIHsgcmV0dXJuICgwLCBpbmRleF9qc18xLlN1Y2Nlc3NSZXNwb25zZUZyb21KU09OKShqc29uVmFsdWUpOyB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQWRkIGFkZGl0aW9uYWwgbG9nb3V0IHJlZGlyZWN0IFVSTHMuXG4gICAgICogQWRkIExvZ291dCBSZWRpcmVjdCBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5hZGRMb2dvdXRSZWRpcmVjdFVSTHMgPSBmdW5jdGlvbiAocmVxdWVzdFBhcmFtZXRlcnMsIGluaXRPdmVycmlkZXMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLmFkZExvZ291dFJlZGlyZWN0VVJMc1JhdyhyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlc3BvbnNlLnZhbHVlKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEFkZCBhZGRpdGlvbmFsIHJlZGlyZWN0IGNhbGxiYWNrIFVSTHMuXG4gICAgICogQWRkIFJlZGlyZWN0IENhbGxiYWNrIFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLmFkZFJlZGlyZWN0Q2FsbGJhY2tVUkxzUmF3ID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeVBhcmFtZXRlcnMsIGhlYWRlclBhcmFtZXRlcnMsIHRva2VuLCB0b2tlblN0cmluZywgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IG51bGwgfHwgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBydW50aW1lLlJlcXVpcmVkRXJyb3IoJ2FwcElkJywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCB3YXMgbnVsbCBvciB1bmRlZmluZWQgd2hlbiBjYWxsaW5nIGFkZFJlZGlyZWN0Q2FsbGJhY2tVUkxzLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLnJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3QgPT09IG51bGwgfHwgcmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IHJ1bnRpbWUuUmVxdWlyZWRFcnJvcigncmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCcsICdSZXF1aXJlZCBwYXJhbWV0ZXIgcmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCB3YXMgbnVsbCBvciB1bmRlZmluZWQgd2hlbiBjYWxsaW5nIGFkZFJlZGlyZWN0Q2FsbGJhY2tVUkxzLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHRoaXMuY29uZmlndXJhdGlvbiAmJiB0aGlzLmNvbmZpZ3VyYXRpb24uYWNjZXNzVG9rZW4pKSByZXR1cm4gWzMgLypicmVhayovLCAyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0gdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdG9rZW4oXCJraW5kZUJlYXJlckF1dGhcIiwgW10pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5TdHJpbmcgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5TdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiLmNvbmNhdCh0b2tlblN0cmluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9hcGkvdjEvYXBwbGljYXRpb25zL3thcHBfaWR9L2F1dGhfcmVkaXJlY3RfdXJsc1wiLnJlcGxhY2UoXCJ7XCIuY29uY2F0KFwiYXBwX2lkXCIsIFwifVwiKSwgZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhyZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCkpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeVBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9keTogKDAsIGluZGV4X2pzXzEuUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdFRvSlNPTikocmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5ldyBydW50aW1lLkpTT05BcGlSZXNwb25zZShyZXNwb25zZSwgZnVuY3Rpb24gKGpzb25WYWx1ZSkgeyByZXR1cm4gKDAsIGluZGV4X2pzXzEuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04pKGpzb25WYWx1ZSk7IH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBBZGQgYWRkaXRpb25hbCByZWRpcmVjdCBjYWxsYmFjayBVUkxzLlxuICAgICAqIEFkZCBSZWRpcmVjdCBDYWxsYmFjayBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5hZGRSZWRpcmVjdENhbGxiYWNrVVJMcyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuYWRkUmVkaXJlY3RDYWxsYmFja1VSTHNSYXcocmVxdWVzdFBhcmFtZXRlcnMsIGluaXRPdmVycmlkZXMpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXNwb25zZS52YWx1ZSgpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gWzIgLypyZXR1cm4qLywgX2Euc2VudCgpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZWxldGUgY2FsbGJhY2sgVVJMcy5cbiAgICAgKiBEZWxldGUgQ2FsbGJhY2sgVVJMc1xuICAgICAqL1xuICAgIENhbGxiYWNrc0FwaS5wcm90b3R5cGUuZGVsZXRlQ2FsbGJhY2tVUkxzUmF3ID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeVBhcmFtZXRlcnMsIGhlYWRlclBhcmFtZXRlcnMsIHRva2VuLCB0b2tlblN0cmluZywgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IG51bGwgfHwgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBydW50aW1lLlJlcXVpcmVkRXJyb3IoJ2FwcElkJywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCB3YXMgbnVsbCBvciB1bmRlZmluZWQgd2hlbiBjYWxsaW5nIGRlbGV0ZUNhbGxiYWNrVVJMcy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1ldGVycy51cmxzID09PSBudWxsIHx8IHJlcXVlc3RQYXJhbWV0ZXJzLnVybHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBydW50aW1lLlJlcXVpcmVkRXJyb3IoJ3VybHMnLCAnUmVxdWlyZWQgcGFyYW1ldGVyIHJlcXVlc3RQYXJhbWV0ZXJzLnVybHMgd2FzIG51bGwgb3IgdW5kZWZpbmVkIHdoZW4gY2FsbGluZyBkZWxldGVDYWxsYmFja1VSTHMuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1ldGVycy51cmxzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVBhcmFtZXRlcnNbJ3VybHMnXSA9IHJlcXVlc3RQYXJhbWV0ZXJzLnVybHM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0aGlzLmNvbmZpZ3VyYXRpb24gJiYgdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiA9IHRoaXMuY29uZmlndXJhdGlvbi5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRva2VuKFwia2luZGVCZWFyZXJBdXRoXCIsIFtdKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuU3RyaW5nID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1tcIkF1dGhvcml6YXRpb25cIl0gPSBcIkJlYXJlciBcIi5jb25jYXQodG9rZW5TdHJpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAyO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYXBpL3YxL2FwcGxpY2F0aW9ucy97YXBwX2lkfS9hdXRoX3JlZGlyZWN0X3VybHNcIi5yZXBsYWNlKFwie1wiLmNvbmNhdChcImFwcF9pZFwiLCBcIn1cIiksIGVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcocmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeVBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5ldyBydW50aW1lLkpTT05BcGlSZXNwb25zZShyZXNwb25zZSwgZnVuY3Rpb24gKGpzb25WYWx1ZSkgeyByZXR1cm4gKDAsIGluZGV4X2pzXzEuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04pKGpzb25WYWx1ZSk7IH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZWxldGUgY2FsbGJhY2sgVVJMcy5cbiAgICAgKiBEZWxldGUgQ2FsbGJhY2sgVVJMc1xuICAgICAqL1xuICAgIENhbGxiYWNrc0FwaS5wcm90b3R5cGUuZGVsZXRlQ2FsbGJhY2tVUkxzID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5kZWxldGVDYWxsYmFja1VSTHNSYXcocmVxdWVzdFBhcmFtZXRlcnMsIGluaXRPdmVycmlkZXMpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXNwb25zZS52YWx1ZSgpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gWzIgLypyZXR1cm4qLywgX2Euc2VudCgpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZWxldGUgbG9nb3V0IFVSTHMuXG4gICAgICogRGVsZXRlIExvZ291dCBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5kZWxldGVMb2dvdXRVUkxzUmF3ID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeVBhcmFtZXRlcnMsIGhlYWRlclBhcmFtZXRlcnMsIHRva2VuLCB0b2tlblN0cmluZywgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IG51bGwgfHwgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBydW50aW1lLlJlcXVpcmVkRXJyb3IoJ2FwcElkJywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCB3YXMgbnVsbCBvciB1bmRlZmluZWQgd2hlbiBjYWxsaW5nIGRlbGV0ZUxvZ291dFVSTHMuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMudXJscyA9PT0gbnVsbCB8fCByZXF1ZXN0UGFyYW1ldGVycy51cmxzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCd1cmxzJywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy51cmxzIHdhcyBudWxsIG9yIHVuZGVmaW5lZCB3aGVuIGNhbGxpbmcgZGVsZXRlTG9nb3V0VVJMcy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVycyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLnVybHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVyc1sndXJscyddID0gcmVxdWVzdFBhcmFtZXRlcnMudXJscztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlclBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHRoaXMuY29uZmlndXJhdGlvbiAmJiB0aGlzLmNvbmZpZ3VyYXRpb24uYWNjZXNzVG9rZW4pKSByZXR1cm4gWzMgLypicmVhayovLCAyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0gdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdG9rZW4oXCJraW5kZUJlYXJlckF1dGhcIiwgW10pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5TdHJpbmcgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5TdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiLmNvbmNhdCh0b2tlblN0cmluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9hcGkvdjEvYXBwbGljYXRpb25zL3thcHBfaWR9L2F1dGhfbG9nb3V0X3VybHNcIi5yZXBsYWNlKFwie1wiLmNvbmNhdChcImFwcF9pZFwiLCBcIn1cIiksIGVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcocmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeVBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5ldyBydW50aW1lLkpTT05BcGlSZXNwb25zZShyZXNwb25zZSwgZnVuY3Rpb24gKGpzb25WYWx1ZSkgeyByZXR1cm4gKDAsIGluZGV4X2pzXzEuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04pKGpzb25WYWx1ZSk7IH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZWxldGUgbG9nb3V0IFVSTHMuXG4gICAgICogRGVsZXRlIExvZ291dCBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5kZWxldGVMb2dvdXRVUkxzID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5kZWxldGVMb2dvdXRVUkxzUmF3KHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVzcG9uc2UudmFsdWUoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcHBsaWNhdGlvblxcJ3MgcmVkaXJlY3QgY2FsbGJhY2sgVVJMcy5cbiAgICAgKiBMaXN0IENhbGxiYWNrIFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLmdldENhbGxiYWNrVVJMc1JhdyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcXVlcnlQYXJhbWV0ZXJzLCBoZWFkZXJQYXJhbWV0ZXJzLCB0b2tlbiwgdG9rZW5TdHJpbmcsIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSBudWxsIHx8IHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCdhcHBJZCcsICdSZXF1aXJlZCBwYXJhbWV0ZXIgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgd2FzIG51bGwgb3IgdW5kZWZpbmVkIHdoZW4gY2FsbGluZyBnZXRDYWxsYmFja1VSTHMuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlclBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHRoaXMuY29uZmlndXJhdGlvbiAmJiB0aGlzLmNvbmZpZ3VyYXRpb24uYWNjZXNzVG9rZW4pKSByZXR1cm4gWzMgLypicmVhayovLCAyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0gdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdG9rZW4oXCJraW5kZUJlYXJlckF1dGhcIiwgW10pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5TdHJpbmcgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5TdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiLmNvbmNhdCh0b2tlblN0cmluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9hcGkvdjEvYXBwbGljYXRpb25zL3thcHBfaWR9L2F1dGhfcmVkaXJlY3RfdXJsc1wiLnJlcGxhY2UoXCJ7XCIuY29uY2F0KFwiYXBwX2lkXCIsIFwifVwiKSwgZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhyZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCkpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlclBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5UGFyYW1ldGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGluaXRPdmVycmlkZXMpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbmV3IHJ1bnRpbWUuSlNPTkFwaVJlc3BvbnNlKHJlc3BvbnNlLCBmdW5jdGlvbiAoanNvblZhbHVlKSB7IHJldHVybiAoMCwgaW5kZXhfanNfMS5SZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OKShqc29uVmFsdWUpOyB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcHBsaWNhdGlvblxcJ3MgcmVkaXJlY3QgY2FsbGJhY2sgVVJMcy5cbiAgICAgKiBMaXN0IENhbGxiYWNrIFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLmdldENhbGxiYWNrVVJMcyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuZ2V0Q2FsbGJhY2tVUkxzUmF3KHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVzcG9uc2UudmFsdWUoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcHBsaWNhdGlvblxcJ3MgbG9nb3V0IHJlZGlyZWN0IFVSTHMuXG4gICAgICogTGlzdCBMb2dvdXQgVVJMc1xuICAgICAqL1xuICAgIENhbGxiYWNrc0FwaS5wcm90b3R5cGUuZ2V0TG9nb3V0VVJMc1JhdyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcXVlcnlQYXJhbWV0ZXJzLCBoZWFkZXJQYXJhbWV0ZXJzLCB0b2tlbiwgdG9rZW5TdHJpbmcsIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSBudWxsIHx8IHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCdhcHBJZCcsICdSZXF1aXJlZCBwYXJhbWV0ZXIgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgd2FzIG51bGwgb3IgdW5kZWZpbmVkIHdoZW4gY2FsbGluZyBnZXRMb2dvdXRVUkxzLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0aGlzLmNvbmZpZ3VyYXRpb24gJiYgdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiA9IHRoaXMuY29uZmlndXJhdGlvbi5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRva2VuKFwia2luZGVCZWFyZXJBdXRoXCIsIFtdKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuU3RyaW5nID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1tcIkF1dGhvcml6YXRpb25cIl0gPSBcIkJlYXJlciBcIi5jb25jYXQodG9rZW5TdHJpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAyO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYXBpL3YxL2FwcGxpY2F0aW9ucy97YXBwX2lkfS9hdXRoX2xvZ291dF91cmxzXCIucmVwbGFjZShcIntcIi5jb25jYXQoXCJhcHBfaWRcIiwgXCJ9XCIpLCBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVyUGFyYW1ldGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnlQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgaW5pdE92ZXJyaWRlcyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBuZXcgcnVudGltZS5KU09OQXBpUmVzcG9uc2UocmVzcG9uc2UsIGZ1bmN0aW9uIChqc29uVmFsdWUpIHsgcmV0dXJuICgwLCBpbmRleF9qc18xLkxvZ291dFJlZGlyZWN0VXJsc0Zyb21KU09OKShqc29uVmFsdWUpOyB9KV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcHBsaWNhdGlvblxcJ3MgbG9nb3V0IHJlZGlyZWN0IFVSTHMuXG4gICAgICogTGlzdCBMb2dvdXQgVVJMc1xuICAgICAqL1xuICAgIENhbGxiYWNrc0FwaS5wcm90b3R5cGUuZ2V0TG9nb3V0VVJMcyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmVzcG9uc2U7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuZ2V0TG9nb3V0VVJMc1JhdyhyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlc3BvbnNlLnZhbHVlKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcGxhY2UgYWxsIGxvZ291dCByZWRpcmVjdCBVUkxzLlxuICAgICAqIFJlcGxhY2UgTG9nb3V0IFJlZGlyZWN0IFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLnJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSYXcgPSBmdW5jdGlvbiAocmVxdWVzdFBhcmFtZXRlcnMsIGluaXRPdmVycmlkZXMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHF1ZXJ5UGFyYW1ldGVycywgaGVhZGVyUGFyYW1ldGVycywgdG9rZW4sIHRva2VuU3RyaW5nLCByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCA9PT0gbnVsbCB8fCByZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IHJ1bnRpbWUuUmVxdWlyZWRFcnJvcignYXBwSWQnLCAnUmVxdWlyZWQgcGFyYW1ldGVyIHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkIHdhcyBudWxsIG9yIHVuZGVmaW5lZCB3aGVuIGNhbGxpbmcgcmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMcy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdCA9PT0gbnVsbCB8fCByZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IHJ1bnRpbWUuUmVxdWlyZWRFcnJvcigncmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QnLCAnUmVxdWlyZWQgcGFyYW1ldGVyIHJlcXVlc3RQYXJhbWV0ZXJzLnJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0IHdhcyBudWxsIG9yIHVuZGVmaW5lZCB3aGVuIGNhbGxpbmcgcmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMcy4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVycyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVycyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1snQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoISh0aGlzLmNvbmZpZ3VyYXRpb24gJiYgdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiA9IHRoaXMuY29uZmlndXJhdGlvbi5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRva2VuKFwia2luZGVCZWFyZXJBdXRoXCIsIFtdKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuU3RyaW5nID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyUGFyYW1ldGVyc1tcIkF1dGhvcml6YXRpb25cIl0gPSBcIkJlYXJlciBcIi5jb25jYXQodG9rZW5TdHJpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX2EubGFiZWwgPSAyO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogXCIvYXBpL3YxL2FwcGxpY2F0aW9ucy97YXBwX2lkfS9hdXRoX2xvZ291dF91cmxzXCIucmVwbGFjZShcIntcIi5jb25jYXQoXCJhcHBfaWRcIiwgXCJ9XCIpLCBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVyUGFyYW1ldGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnlQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk6ICgwLCBpbmRleF9qc18xLlJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0VG9KU09OKShyZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdCksXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5ldyBydW50aW1lLkpTT05BcGlSZXNwb25zZShyZXNwb25zZSwgZnVuY3Rpb24gKGpzb25WYWx1ZSkgeyByZXR1cm4gKDAsIGluZGV4X2pzXzEuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04pKGpzb25WYWx1ZSk7IH0pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXBsYWNlIGFsbCBsb2dvdXQgcmVkaXJlY3QgVVJMcy5cbiAgICAgKiBSZXBsYWNlIExvZ291dCBSZWRpcmVjdCBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzID0gZnVuY3Rpb24gKHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmF3KHJlcXVlc3RQYXJhbWV0ZXJzLCBpbml0T3ZlcnJpZGVzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVzcG9uc2UudmFsdWUoKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmVwbGFjZSBhbGwgcmVkaXJlY3QgY2FsbGJhY2sgVVJMcy5cbiAgICAgKiBSZXBsYWNlIFJlZGlyZWN0IENhbGxiYWNrIFVSTHNcbiAgICAgKi9cbiAgICBDYWxsYmFja3NBcGkucHJvdG90eXBlLnJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JhdyA9IGZ1bmN0aW9uIChyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcXVlcnlQYXJhbWV0ZXJzLCBoZWFkZXJQYXJhbWV0ZXJzLCB0b2tlbiwgdG9rZW5TdHJpbmcsIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSBudWxsIHx8IHJlcXVlc3RQYXJhbWV0ZXJzLmFwcElkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCdhcHBJZCcsICdSZXF1aXJlZCBwYXJhbWV0ZXIgcmVxdWVzdFBhcmFtZXRlcnMuYXBwSWQgd2FzIG51bGwgb3IgdW5kZWZpbmVkIHdoZW4gY2FsbGluZyByZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHMuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMucmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCA9PT0gbnVsbCB8fCByZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgcnVudGltZS5SZXF1aXJlZEVycm9yKCdyZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0JywgJ1JlcXVpcmVkIHBhcmFtZXRlciByZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0IHdhcyBudWxsIG9yIHVuZGVmaW5lZCB3aGVuIGNhbGxpbmcgcmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKHRoaXMuY29uZmlndXJhdGlvbiAmJiB0aGlzLmNvbmZpZ3VyYXRpb24uYWNjZXNzVG9rZW4pKSByZXR1cm4gWzMgLypicmVhayovLCAyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuID0gdGhpcy5jb25maWd1cmF0aW9uLmFjY2Vzc1Rva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdG9rZW4oXCJraW5kZUJlYXJlckF1dGhcIiwgW10pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5TdHJpbmcgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9rZW5TdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYXJhbWV0ZXJzW1wiQXV0aG9yaXphdGlvblwiXSA9IFwiQmVhcmVyIFwiLmNvbmNhdCh0b2tlblN0cmluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBcIi9hcGkvdjEvYXBwbGljYXRpb25zL3thcHBfaWR9L2F1dGhfcmVkaXJlY3RfdXJsc1wiLnJlcGxhY2UoXCJ7XCIuY29uY2F0KFwiYXBwX2lkXCIsIFwifVwiKSwgZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhyZXF1ZXN0UGFyYW1ldGVycy5hcHBJZCkpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlclBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5UGFyYW1ldGVycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiAoMCwgaW5kZXhfanNfMS5SZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0VG9KU09OKShyZXF1ZXN0UGFyYW1ldGVycy5yZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGluaXRPdmVycmlkZXMpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbmV3IHJ1bnRpbWUuSlNPTkFwaVJlc3BvbnNlKHJlc3BvbnNlLCBmdW5jdGlvbiAoanNvblZhbHVlKSB7IHJldHVybiAoMCwgaW5kZXhfanNfMS5TdWNjZXNzUmVzcG9uc2VGcm9tSlNPTikoanNvblZhbHVlKTsgfSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcGxhY2UgYWxsIHJlZGlyZWN0IGNhbGxiYWNrIFVSTHMuXG4gICAgICogUmVwbGFjZSBSZWRpcmVjdCBDYWxsYmFjayBVUkxzXG4gICAgICovXG4gICAgQ2FsbGJhY2tzQXBpLnByb3RvdHlwZS5yZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHMgPSBmdW5jdGlvbiAocmVxdWVzdFBhcmFtZXRlcnMsIGluaXRPdmVycmlkZXMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JhdyhyZXF1ZXN0UGFyYW1ldGVycywgaW5pdE92ZXJyaWRlcyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHJlc3BvbnNlLnZhbHVlKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBDYWxsYmFja3NBcGk7XG59KHJ1bnRpbWUuQmFzZUFQSSkpO1xuZXhwb3J0cy5DYWxsYmFja3NBcGkgPSBDYWxsYmFja3NBcGk7XG4iXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiX19jcmVhdGVCaW5kaW5nIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwicmVzdWx0IiwiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIl9fZ2VuZXJhdG9yIiwiYm9keSIsIl8iLCJsYWJlbCIsInNlbnQiLCJ0IiwidHJ5cyIsIm9wcyIsImYiLCJ5IiwiZyIsInZlcmIiLCJTeW1ib2wiLCJpdGVyYXRvciIsIm4iLCJvcCIsInBvcCIsImxlbmd0aCIsInB1c2giLCJleHBvcnRzIiwiQ2FsbGJhY2tzQXBpIiwicnVudGltZSIsInJlcXVpcmUiLCJpbmRleF9qc18xIiwiX3N1cGVyIiwiYXJndW1lbnRzIiwiYWRkTG9nb3V0UmVkaXJlY3RVUkxzUmF3IiwicmVxdWVzdFBhcmFtZXRlcnMiLCJpbml0T3ZlcnJpZGVzIiwicXVlcnlQYXJhbWV0ZXJzIiwiaGVhZGVyUGFyYW1ldGVycyIsInRva2VuIiwidG9rZW5TdHJpbmciLCJyZXNwb25zZSIsIl9hIiwiYXBwSWQiLCJSZXF1aXJlZEVycm9yIiwicmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QiLCJjb25maWd1cmF0aW9uIiwiYWNjZXNzVG9rZW4iLCJjb25jYXQiLCJyZXF1ZXN0IiwicGF0aCIsInJlcGxhY2UiLCJlbmNvZGVVUklDb21wb25lbnQiLCJtZXRob2QiLCJoZWFkZXJzIiwicXVlcnkiLCJSZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdFRvSlNPTiIsIkpTT05BcGlSZXNwb25zZSIsImpzb25WYWx1ZSIsIlN1Y2Nlc3NSZXNwb25zZUZyb21KU09OIiwiYWRkTG9nb3V0UmVkaXJlY3RVUkxzIiwiYWRkUmVkaXJlY3RDYWxsYmFja1VSTHNSYXciLCJyZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0IiwiUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdFRvSlNPTiIsImFkZFJlZGlyZWN0Q2FsbGJhY2tVUkxzIiwiZGVsZXRlQ2FsbGJhY2tVUkxzUmF3IiwidXJscyIsImRlbGV0ZUNhbGxiYWNrVVJMcyIsImRlbGV0ZUxvZ291dFVSTHNSYXciLCJkZWxldGVMb2dvdXRVUkxzIiwiZ2V0Q2FsbGJhY2tVUkxzUmF3IiwiUmVkaXJlY3RDYWxsYmFja1VybHNGcm9tSlNPTiIsImdldENhbGxiYWNrVVJMcyIsImdldExvZ291dFVSTHNSYXciLCJMb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTiIsImdldExvZ291dFVSTHMiLCJyZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmF3IiwicmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMcyIsInJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JhdyIsInJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMcyIsIkJhc2VBUEkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/CallbacksApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ConnectedAppsApi.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ConnectedAppsApi.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ConnectedAppsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var ConnectedAppsApi = /** @class */ function(_super) {\n    __extends(ConnectedAppsApi, _super);\n    function ConnectedAppsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a URL that authenticates and authorizes a user to a third-party connected app.\n     * Get Connected App URL\n     */ ConnectedAppsApi.prototype.getConnectedAppAuthUrlRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.keyCodeRef === null || requestParameters.keyCodeRef === undefined) {\n                            throw new runtime.RequiredError(\"keyCodeRef\", \"Required parameter requestParameters.keyCodeRef was null or undefined when calling getConnectedAppAuthUrl.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.keyCodeRef !== undefined) {\n                            queryParameters[\"key_code_ref\"] = requestParameters.keyCodeRef;\n                        }\n                        if (requestParameters.userId !== undefined) {\n                            queryParameters[\"user_id\"] = requestParameters.userId;\n                        }\n                        if (requestParameters.orgCode !== undefined) {\n                            queryParameters[\"org_code\"] = requestParameters.orgCode;\n                        }\n                        if (requestParameters.overrideCallbackUrl !== undefined) {\n                            queryParameters[\"override_callback_url\"] = requestParameters.overrideCallbackUrl;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/connected_apps/auth_url\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.ConnectedAppsAuthUrlFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a URL that authenticates and authorizes a user to a third-party connected app.\n     * Get Connected App URL\n     */ ConnectedAppsApi.prototype.getConnectedAppAuthUrl = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getConnectedAppAuthUrlRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get an access token that can be used to call the third-party provider linked to the connected app.\n     * Get Connected App Token\n     */ ConnectedAppsApi.prototype.getConnectedAppTokenRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.sessionId === null || requestParameters.sessionId === undefined) {\n                            throw new runtime.RequiredError(\"sessionId\", \"Required parameter requestParameters.sessionId was null or undefined when calling getConnectedAppToken.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.sessionId !== undefined) {\n                            queryParameters[\"session_id\"] = requestParameters.sessionId;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/connected_apps/token\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.ConnectedAppsAccessTokenFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get an access token that can be used to call the third-party provider linked to the connected app.\n     * Get Connected App Token\n     */ ConnectedAppsApi.prototype.getConnectedAppToken = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getConnectedAppTokenRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Revoke the tokens linked to the connected app session.\n     * Revoke Connected App Token\n     */ ConnectedAppsApi.prototype.revokeConnectedAppTokenRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.sessionId === null || requestParameters.sessionId === undefined) {\n                            throw new runtime.RequiredError(\"sessionId\", \"Required parameter requestParameters.sessionId was null or undefined when calling revokeConnectedAppToken.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.sessionId !== undefined) {\n                            queryParameters[\"session_id\"] = requestParameters.sessionId;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/connected_apps/revoke\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Revoke the tokens linked to the connected app session.\n     * Revoke Connected App Token\n     */ ConnectedAppsApi.prototype.revokeConnectedAppToken = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.revokeConnectedAppTokenRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return ConnectedAppsApi;\n}(runtime.BaseAPI);\nexports.ConnectedAppsApi = ConnectedAppsApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ConnectedAppsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/EnvironmentsApi.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/EnvironmentsApi.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EnvironmentsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var EnvironmentsApi = /** @class */ function(_super) {\n    __extends(EnvironmentsApi, _super);\n    function EnvironmentsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Delete environment feature flag override.\n     * Delete Environment Feature Flag Override\n     */ EnvironmentsApi.prototype.deleteEnvironementFeatureFlagOverrideRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling deleteEnvironementFeatureFlagOverride.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/environment/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete environment feature flag override.\n     * Delete Environment Feature Flag Override\n     */ EnvironmentsApi.prototype.deleteEnvironementFeatureFlagOverride = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteEnvironementFeatureFlagOverrideRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete all environment feature flag overrides.\n     * Delete Environment Feature Flag Overrides\n     */ EnvironmentsApi.prototype.deleteEnvironementFeatureFlagOverridesRaw = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/environment/feature_flags\",\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete all environment feature flag overrides.\n     * Delete Environment Feature Flag Overrides\n     */ EnvironmentsApi.prototype.deleteEnvironementFeatureFlagOverrides = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteEnvironementFeatureFlagOverridesRaw(initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get environment feature flags.\n     * List Environment Feature Flags\n     */ EnvironmentsApi.prototype.getEnvironementFeatureFlagsRaw = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/environment/feature_flags\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetEnvironmentFeatureFlagsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get environment feature flags.\n     * List Environment Feature Flags\n     */ EnvironmentsApi.prototype.getEnvironementFeatureFlags = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getEnvironementFeatureFlagsRaw(initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update environment feature flag override.\n     * Update Environment Feature Flag Override\n     */ EnvironmentsApi.prototype.updateEnvironementFeatureFlagOverrideRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling updateEnvironementFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.updateEnvironementFeatureFlagOverrideRequest === null || requestParameters.updateEnvironementFeatureFlagOverrideRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateEnvironementFeatureFlagOverrideRequest\", \"Required parameter requestParameters.updateEnvironementFeatureFlagOverrideRequest was null or undefined when calling updateEnvironementFeatureFlagOverride.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/environment/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateEnvironementFeatureFlagOverrideRequestToJSON)(requestParameters.updateEnvironementFeatureFlagOverrideRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update environment feature flag override.\n     * Update Environment Feature Flag Override\n     */ EnvironmentsApi.prototype.updateEnvironementFeatureFlagOverride = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateEnvironementFeatureFlagOverrideRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return EnvironmentsApi;\n}(runtime.BaseAPI);\nexports.EnvironmentsApi = EnvironmentsApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/EnvironmentsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/FeatureFlagsApi.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/FeatureFlagsApi.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateFeatureFlagAllowOverrideLevelEnum = exports.UpdateFeatureFlagTypeEnum = exports.FeatureFlagsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var FeatureFlagsApi = /** @class */ function(_super) {\n    __extends(FeatureFlagsApi, _super);\n    function FeatureFlagsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create feature flag.\n     * Create Feature Flag\n     */ FeatureFlagsApi.prototype.createFeatureFlagRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.createFeatureFlagRequest === null || requestParameters.createFeatureFlagRequest === undefined) {\n                            throw new runtime.RequiredError(\"createFeatureFlagRequest\", \"Required parameter requestParameters.createFeatureFlagRequest was null or undefined when calling createFeatureFlag.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/feature_flags\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateFeatureFlagRequestToJSON)(requestParameters.createFeatureFlagRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create feature flag.\n     * Create Feature Flag\n     */ FeatureFlagsApi.prototype.createFeatureFlag = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createFeatureFlagRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete feature flag\n     * Delete Feature Flag\n     */ FeatureFlagsApi.prototype.deleteFeatureFlagRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling deleteFeatureFlag.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete feature flag\n     * Delete Feature Flag\n     */ FeatureFlagsApi.prototype.deleteFeatureFlag = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteFeatureFlagRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update feature flag.\n     * Replace Feature Flag\n     */ FeatureFlagsApi.prototype.updateFeatureFlagRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        if (requestParameters.name === null || requestParameters.name === undefined) {\n                            throw new runtime.RequiredError(\"name\", \"Required parameter requestParameters.name was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        if (requestParameters.description === null || requestParameters.description === undefined) {\n                            throw new runtime.RequiredError(\"description\", \"Required parameter requestParameters.description was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        if (requestParameters.type === null || requestParameters.type === undefined) {\n                            throw new runtime.RequiredError(\"type\", \"Required parameter requestParameters.type was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        if (requestParameters.allowOverrideLevel === null || requestParameters.allowOverrideLevel === undefined) {\n                            throw new runtime.RequiredError(\"allowOverrideLevel\", \"Required parameter requestParameters.allowOverrideLevel was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        if (requestParameters.defaultValue === null || requestParameters.defaultValue === undefined) {\n                            throw new runtime.RequiredError(\"defaultValue\", \"Required parameter requestParameters.defaultValue was null or undefined when calling updateFeatureFlag.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.name !== undefined) {\n                            queryParameters[\"name\"] = requestParameters.name;\n                        }\n                        if (requestParameters.description !== undefined) {\n                            queryParameters[\"description\"] = requestParameters.description;\n                        }\n                        if (requestParameters.type !== undefined) {\n                            queryParameters[\"type\"] = requestParameters.type;\n                        }\n                        if (requestParameters.allowOverrideLevel !== undefined) {\n                            queryParameters[\"allow_override_level\"] = requestParameters.allowOverrideLevel;\n                        }\n                        if (requestParameters.defaultValue !== undefined) {\n                            queryParameters[\"default_value\"] = requestParameters.defaultValue;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update feature flag.\n     * Replace Feature Flag\n     */ FeatureFlagsApi.prototype.updateFeatureFlag = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateFeatureFlagRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return FeatureFlagsApi;\n}(runtime.BaseAPI);\nexports.FeatureFlagsApi = FeatureFlagsApi;\n/**\n * @export\n */ exports.UpdateFeatureFlagTypeEnum = {\n    Str: \"str\",\n    Int: \"int\",\n    Bool: \"bool\"\n};\n/**\n * @export\n */ exports.UpdateFeatureFlagAllowOverrideLevelEnum = {\n    Env: \"env\",\n    Org: \"org\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/FeatureFlagsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/IndustriesApi.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/IndustriesApi.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IndustriesApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var IndustriesApi = /** @class */ function(_super) {\n    __extends(IndustriesApi, _super);\n    function IndustriesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of industries and associated industry keys.\n     * List industries and industry keys.\n     */ IndustriesApi.prototype.getIndustriesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.industryKey !== undefined) {\n                            queryParameters[\"industry_key\"] = requestParameters.industryKey;\n                        }\n                        if (requestParameters.name !== undefined) {\n                            queryParameters[\"name\"] = requestParameters.name;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/industries\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of industries and associated industry keys.\n     * List industries and industry keys.\n     */ IndustriesApi.prototype.getIndustries = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getIndustriesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return IndustriesApi;\n}(runtime.BaseAPI);\nexports.IndustriesApi = IndustriesApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/IndustriesApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OAuthApi.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OAuthApi.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OAuthApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var OAuthApi = /** @class */ function(_super) {\n    __extends(OAuthApi, _super);\n    function OAuthApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Contains the id, names and email of the currently logged in user.\n     * Get User Profile\n     */ OAuthApi.prototype.getUserRaw = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/oauth2/user_profile\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UserProfileFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Contains the id, names and email of the currently logged in user.\n     * Get User Profile\n     */ OAuthApi.prototype.getUser = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getUserRaw(initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Contains the id, names, profile picture URL and email of the currently logged in user.\n     * Returns the details of the currently logged in user\n     */ OAuthApi.prototype.getUserProfileV2Raw = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/oauth2/v2/user_profile\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UserProfileV2FromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Contains the id, names, profile picture URL and email of the currently logged in user.\n     * Returns the details of the currently logged in user\n     */ OAuthApi.prototype.getUserProfileV2 = function(initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getUserProfileV2Raw(initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve information about the provided token.\n     * Get token details\n     */ OAuthApi.prototype.tokenIntrospectionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, consumes, canConsumeForm, formParams, useForm, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        consumes = [\n                            {\n                                contentType: \"application/x-www-form-urlencoded\"\n                            }\n                        ];\n                        canConsumeForm = runtime.canConsumeForm(consumes);\n                        useForm = false;\n                        if (useForm) {\n                            formParams = new FormData();\n                        } else {\n                            formParams = new URLSearchParams();\n                        }\n                        if (requestParameters.token !== undefined) {\n                            formParams.append(\"token\", requestParameters.token);\n                        }\n                        if (requestParameters.tokenType !== undefined) {\n                            formParams.append(\"token_type\", requestParameters.tokenType);\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/oauth2/introspect\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: formParams\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.TokenIntrospectFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve information about the provided token.\n     * Get token details\n     */ OAuthApi.prototype.tokenIntrospection = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.tokenIntrospectionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Revoke a previously issued token.\n     * Revoke token\n     */ OAuthApi.prototype.tokenRevocationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, consumes, canConsumeForm, formParams, useForm, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        consumes = [\n                            {\n                                contentType: \"application/x-www-form-urlencoded\"\n                            }\n                        ];\n                        canConsumeForm = runtime.canConsumeForm(consumes);\n                        useForm = false;\n                        if (useForm) {\n                            formParams = new FormData();\n                        } else {\n                            formParams = new URLSearchParams();\n                        }\n                        if (requestParameters.token !== undefined) {\n                            formParams.append(\"token\", requestParameters.token);\n                        }\n                        if (requestParameters.clientId !== undefined) {\n                            formParams.append(\"client_id\", requestParameters.clientId);\n                        }\n                        if (requestParameters.clientSecret !== undefined) {\n                            formParams.append(\"client_secret\", requestParameters.clientSecret);\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/oauth2/revoke\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: formParams\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.VoidApiResponse(response)\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Revoke a previously issued token.\n     * Revoke token\n     */ OAuthApi.prototype.tokenRevocation = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.tokenRevocationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    return OAuthApi;\n}(runtime.BaseAPI);\nexports.OAuthApi = OAuthApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OAuthApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OrganizationsApi.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OrganizationsApi.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationsSortEnum = exports.GetOrganizationUsersSortEnum = exports.OrganizationsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var OrganizationsApi = /** @class */ function(_super) {\n    __extends(OrganizationsApi, _super);\n    function OrganizationsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add existing users to an organization.\n     * Add Organization Users\n     */ OrganizationsApi.prototype.addOrganizationUsersRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling addOrganizationUsers.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.AddOrganizationUsersRequestToJSON)(requestParameters.addOrganizationUsersRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.AddOrganizationUsersResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add existing users to an organization.\n     * Add Organization Users\n     */ OrganizationsApi.prototype.addOrganizationUsers = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.addOrganizationUsersRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create an organization.\n     * Create Organization\n     */ OrganizationsApi.prototype.createOrganizationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.createOrganizationRequest === null || requestParameters.createOrganizationRequest === undefined) {\n                            throw new runtime.RequiredError(\"createOrganizationRequest\", \"Required parameter requestParameters.createOrganizationRequest was null or undefined when calling createOrganization.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organization\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateOrganizationRequestToJSON)(requestParameters.createOrganizationRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreateOrganizationResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create an organization.\n     * Create Organization\n     */ OrganizationsApi.prototype.createOrganization = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createOrganizationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add permission to an organization user.\n     * Add Organization User Permission\n     */ OrganizationsApi.prototype.createOrganizationUserPermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling createOrganizationUserPermission.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling createOrganizationUserPermission.\");\n                        }\n                        if (requestParameters.createOrganizationUserPermissionRequest === null || requestParameters.createOrganizationUserPermissionRequest === undefined) {\n                            throw new runtime.RequiredError(\"createOrganizationUserPermissionRequest\", \"Required parameter requestParameters.createOrganizationUserPermissionRequest was null or undefined when calling createOrganizationUserPermission.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/permissions\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateOrganizationUserPermissionRequestToJSON)(requestParameters.createOrganizationUserPermissionRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add permission to an organization user.\n     * Add Organization User Permission\n     */ OrganizationsApi.prototype.createOrganizationUserPermission = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createOrganizationUserPermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add role to an organization user.\n     * Add Organization User Role\n     */ OrganizationsApi.prototype.createOrganizationUserRoleRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling createOrganizationUserRole.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling createOrganizationUserRole.\");\n                        }\n                        if (requestParameters.createOrganizationUserRoleRequest === null || requestParameters.createOrganizationUserRoleRequest === undefined) {\n                            throw new runtime.RequiredError(\"createOrganizationUserRoleRequest\", \"Required parameter requestParameters.createOrganizationUserRoleRequest was null or undefined when calling createOrganizationUserRole.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/roles\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateOrganizationUserRoleRequestToJSON)(requestParameters.createOrganizationUserRoleRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Add role to an organization user.\n     * Add Organization User Role\n     */ OrganizationsApi.prototype.createOrganizationUserRole = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createOrganizationUserRoleRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete an organization.\n     * Delete Organization\n     */ OrganizationsApi.prototype.deleteOrganizationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganization.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organization/{org_code}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.VoidApiResponse(response)\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete an organization.\n     * Delete Organization\n     */ OrganizationsApi.prototype.deleteOrganization = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete organization feature flag override.\n     * Delete Organization Feature Flag Override\n     */ OrganizationsApi.prototype.deleteOrganizationFeatureFlagOverrideRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganizationFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling deleteOrganizationFeatureFlagOverride.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete organization feature flag override.\n     * Delete Organization Feature Flag Override\n     */ OrganizationsApi.prototype.deleteOrganizationFeatureFlagOverride = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationFeatureFlagOverrideRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete all organization feature flag overrides.\n     * Delete Organization Feature Flag Overrides\n     */ OrganizationsApi.prototype.deleteOrganizationFeatureFlagOverridesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganizationFeatureFlagOverrides.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/feature_flags\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete all organization feature flag overrides.\n     * Delete Organization Feature Flag Overrides\n     */ OrganizationsApi.prototype.deleteOrganizationFeatureFlagOverrides = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationFeatureFlagOverridesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete organization handle\n     * Delete organization handle\n     */ OrganizationsApi.prototype.deleteOrganizationHandleRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganizationHandle.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organization/{org_code}/handle\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete organization handle\n     * Delete organization handle\n     */ OrganizationsApi.prototype.deleteOrganizationHandle = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationHandleRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete permission for an organization user.\n     * Delete Organization User Permission\n     */ OrganizationsApi.prototype.deleteOrganizationUserPermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganizationUserPermission.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling deleteOrganizationUserPermission.\");\n                        }\n                        if (requestParameters.permissionId === null || requestParameters.permissionId === undefined) {\n                            throw new runtime.RequiredError(\"permissionId\", \"Required parameter requestParameters.permissionId was null or undefined when calling deleteOrganizationUserPermission.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/permissions/{permission_id}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))).replace(\"{\".concat(\"permission_id\", \"}\"), encodeURIComponent(String(requestParameters.permissionId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete permission for an organization user.\n     * Delete Organization User Permission\n     */ OrganizationsApi.prototype.deleteOrganizationUserPermission = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationUserPermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete role for an organization user.\n     * Delete Organization User Role\n     */ OrganizationsApi.prototype.deleteOrganizationUserRoleRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling deleteOrganizationUserRole.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling deleteOrganizationUserRole.\");\n                        }\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling deleteOrganizationUserRole.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/roles/{role_id}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))).replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete role for an organization user.\n     * Delete Organization User Role\n     */ OrganizationsApi.prototype.deleteOrganizationUserRole = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteOrganizationUserRoleRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets an organization given the organization\\'s code.\n     * Get Organization\n     */ OrganizationsApi.prototype.getOrganizationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.code !== undefined) {\n                            queryParameters[\"code\"] = requestParameters.code;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organization\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.OrganizationFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets an organization given the organization\\'s code.\n     * Get Organization\n     */ OrganizationsApi.prototype.getOrganization = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get all organization feature flags.\n     * List Organization Feature Flags\n     */ OrganizationsApi.prototype.getOrganizationFeatureFlagsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling getOrganizationFeatureFlags.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/feature_flags\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetOrganizationFeatureFlagsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get all organization feature flags.\n     * List Organization Feature Flags\n     */ OrganizationsApi.prototype.getOrganizationFeatureFlags = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationFeatureFlagsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets properties for an organization by org code.\n     * Get Organization Property Values\n     */ OrganizationsApi.prototype.getOrganizationPropertyValuesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling getOrganizationPropertyValues.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/properties\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetPropertyValuesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets properties for an organization by org code.\n     * Get Organization Property Values\n     */ OrganizationsApi.prototype.getOrganizationPropertyValues = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationPropertyValuesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get permissions for an organization user.\n     * List Organization User Permissions\n     */ OrganizationsApi.prototype.getOrganizationUserPermissionsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling getOrganizationUserPermissions.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling getOrganizationUserPermissions.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.expand !== undefined) {\n                            queryParameters[\"expand\"] = requestParameters.expand;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/permissions\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetOrganizationsUserPermissionsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get permissions for an organization user.\n     * List Organization User Permissions\n     */ OrganizationsApi.prototype.getOrganizationUserPermissions = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationUserPermissionsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get roles for an organization user.\n     * List Organization User Roles\n     */ OrganizationsApi.prototype.getOrganizationUserRolesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling getOrganizationUserRoles.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling getOrganizationUserRoles.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}/roles\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetOrganizationsUserRolesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get roles for an organization user.\n     * List Organization User Roles\n     */ OrganizationsApi.prototype.getOrganizationUserRoles = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationUserRolesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get users in an organization.\n     * List Organization Users\n     */ OrganizationsApi.prototype.getOrganizationUsersRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling getOrganizationUsers.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        if (requestParameters.permissions !== undefined) {\n                            queryParameters[\"permissions\"] = requestParameters.permissions;\n                        }\n                        if (requestParameters.roles !== undefined) {\n                            queryParameters[\"roles\"] = requestParameters.roles;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetOrganizationUsersResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get users in an organization.\n     * List Organization Users\n     */ OrganizationsApi.prototype.getOrganizationUsers = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationUsersRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of organizations.\n     * List Organizations\n     */ OrganizationsApi.prototype.getOrganizationsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetOrganizationsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of organizations.\n     * List Organizations\n     */ OrganizationsApi.prototype.getOrganizations = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getOrganizationsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Remove user from an organization.\n     * Remove Organization User\n     */ OrganizationsApi.prototype.removeOrganizationUserRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling removeOrganizationUser.\");\n                        }\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling removeOrganizationUser.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users/{user_id}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Remove user from an organization.\n     * Remove Organization User\n     */ OrganizationsApi.prototype.removeOrganizationUser = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.removeOrganizationUserRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update an organization.\n     * Update Organization\n     */ OrganizationsApi.prototype.updateOrganizationRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling updateOrganization.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organization/{org_code}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateOrganizationRequestToJSON)(requestParameters.updateOrganizationRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update an organization.\n     * Update Organization\n     */ OrganizationsApi.prototype.updateOrganization = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateOrganizationRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization feature flag override.\n     * Update Organization Feature Flag Override\n     */ OrganizationsApi.prototype.updateOrganizationFeatureFlagOverrideRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling updateOrganizationFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling updateOrganizationFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.value === null || requestParameters.value === undefined) {\n                            throw new runtime.RequiredError(\"value\", \"Required parameter requestParameters.value was null or undefined when calling updateOrganizationFeatureFlagOverride.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.value !== undefined) {\n                            queryParameters[\"value\"] = requestParameters.value;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization feature flag override.\n     * Update Organization Feature Flag Override\n     */ OrganizationsApi.prototype.updateOrganizationFeatureFlagOverride = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateOrganizationFeatureFlagOverrideRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization property values.\n     * Update Organization Property values\n     */ OrganizationsApi.prototype.updateOrganizationPropertiesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling updateOrganizationProperties.\");\n                        }\n                        if (requestParameters.updateOrganizationPropertiesRequest === null || requestParameters.updateOrganizationPropertiesRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateOrganizationPropertiesRequest\", \"Required parameter requestParameters.updateOrganizationPropertiesRequest was null or undefined when calling updateOrganizationProperties.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/properties\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateOrganizationPropertiesRequestToJSON)(requestParameters.updateOrganizationPropertiesRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization property values.\n     * Update Organization Property values\n     */ OrganizationsApi.prototype.updateOrganizationProperties = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateOrganizationPropertiesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization property value.\n     * Update Organization Property value\n     */ OrganizationsApi.prototype.updateOrganizationPropertyRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling updateOrganizationProperty.\");\n                        }\n                        if (requestParameters.propertyKey === null || requestParameters.propertyKey === undefined) {\n                            throw new runtime.RequiredError(\"propertyKey\", \"Required parameter requestParameters.propertyKey was null or undefined when calling updateOrganizationProperty.\");\n                        }\n                        if (requestParameters.value === null || requestParameters.value === undefined) {\n                            throw new runtime.RequiredError(\"value\", \"Required parameter requestParameters.value was null or undefined when calling updateOrganizationProperty.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.value !== undefined) {\n                            queryParameters[\"value\"] = requestParameters.value;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/properties/{property_key}\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))).replace(\"{\".concat(\"property_key\", \"}\"), encodeURIComponent(String(requestParameters.propertyKey))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update organization property value.\n     * Update Organization Property value\n     */ OrganizationsApi.prototype.updateOrganizationProperty = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateOrganizationPropertyRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update users that belong to an organization.\n     * Update Organization Users\n     */ OrganizationsApi.prototype.updateOrganizationUsersRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.orgCode === null || requestParameters.orgCode === undefined) {\n                            throw new runtime.RequiredError(\"orgCode\", \"Required parameter requestParameters.orgCode was null or undefined when calling updateOrganizationUsers.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/organizations/{org_code}/users\".replace(\"{\".concat(\"org_code\", \"}\"), encodeURIComponent(String(requestParameters.orgCode))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateOrganizationUsersRequestToJSON)(requestParameters.updateOrganizationUsersRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UpdateOrganizationUsersResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update users that belong to an organization.\n     * Update Organization Users\n     */ OrganizationsApi.prototype.updateOrganizationUsers = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateOrganizationUsersRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return OrganizationsApi;\n}(runtime.BaseAPI);\nexports.OrganizationsApi = OrganizationsApi;\n/**\n * @export\n */ exports.GetOrganizationUsersSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    EmailAsc: \"email_asc\",\n    EmailDesc: \"email_desc\"\n};\n/**\n * @export\n */ exports.GetOrganizationsSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    EmailAsc: \"email_asc\",\n    EmailDesc: \"email_desc\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OrganizationsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PermissionsApi.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PermissionsApi.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetPermissionsSortEnum = exports.PermissionsApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var PermissionsApi = /** @class */ function(_super) {\n    __extends(PermissionsApi, _super);\n    function PermissionsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create a new permission.\n     * Create Permission\n     */ PermissionsApi.prototype.createPermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/permissions\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreatePermissionRequestToJSON)(requestParameters.createPermissionRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create a new permission.\n     * Create Permission\n     */ PermissionsApi.prototype.createPermission = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createPermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete permission\n     * Delete Permission\n     */ PermissionsApi.prototype.deletePermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.permissionId === null || requestParameters.permissionId === undefined) {\n                            throw new runtime.RequiredError(\"permissionId\", \"Required parameter requestParameters.permissionId was null or undefined when calling deletePermission.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/permissions/{permission_id}\".replace(\"{\".concat(\"permission_id\", \"}\"), encodeURIComponent(String(requestParameters.permissionId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete permission\n     * Delete Permission\n     */ PermissionsApi.prototype.deletePermission = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deletePermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by permission name or permission ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Permissions\n     */ PermissionsApi.prototype.getPermissionsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/permissions\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetPermissionsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by permission name or permission ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Permissions\n     */ PermissionsApi.prototype.getPermissions = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getPermissionsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update permission\n     * Update Permission\n     */ PermissionsApi.prototype.updatePermissionsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.permissionId === null || requestParameters.permissionId === undefined) {\n                            throw new runtime.RequiredError(\"permissionId\", \"Required parameter requestParameters.permissionId was null or undefined when calling updatePermissions.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/permissions/{permission_id}\".replace(\"{\".concat(\"permission_id\", \"}\"), encodeURIComponent(String(requestParameters.permissionId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreatePermissionRequestToJSON)(requestParameters.createPermissionRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update permission\n     * Update Permission\n     */ PermissionsApi.prototype.updatePermissions = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updatePermissionsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return PermissionsApi;\n}(runtime.BaseAPI);\nexports.PermissionsApi = PermissionsApi;\n/**\n * @export\n */ exports.GetPermissionsSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    IdAsc: \"id_asc\",\n    IdDesc: \"id_desc\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PermissionsApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertiesApi.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertiesApi.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetPropertiesContextEnum = exports.PropertiesApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var PropertiesApi = /** @class */ function(_super) {\n    __extends(PropertiesApi, _super);\n    function PropertiesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create property.\n     * Create Property\n     */ PropertiesApi.prototype.createPropertyRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.createPropertyRequest === null || requestParameters.createPropertyRequest === undefined) {\n                            throw new runtime.RequiredError(\"createPropertyRequest\", \"Required parameter requestParameters.createPropertyRequest was null or undefined when calling createProperty.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/properties\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreatePropertyRequestToJSON)(requestParameters.createPropertyRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreatePropertyResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create property.\n     * Create Property\n     */ PropertiesApi.prototype.createProperty = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createPropertyRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of properties\n     * List properties\n     */ PropertiesApi.prototype.getPropertiesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.startingAfter !== undefined) {\n                            queryParameters[\"starting_after\"] = requestParameters.startingAfter;\n                        }\n                        if (requestParameters.endingBefore !== undefined) {\n                            queryParameters[\"ending_before\"] = requestParameters.endingBefore;\n                        }\n                        if (requestParameters.context !== undefined) {\n                            queryParameters[\"context\"] = requestParameters.context;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/properties\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetPropertiesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of properties\n     * List properties\n     */ PropertiesApi.prototype.getProperties = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getPropertiesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property.\n     * Update Property\n     */ PropertiesApi.prototype.updatePropertyRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.propertyId === null || requestParameters.propertyId === undefined) {\n                            throw new runtime.RequiredError(\"propertyId\", \"Required parameter requestParameters.propertyId was null or undefined when calling updateProperty.\");\n                        }\n                        if (requestParameters.updatePropertyRequest === null || requestParameters.updatePropertyRequest === undefined) {\n                            throw new runtime.RequiredError(\"updatePropertyRequest\", \"Required parameter requestParameters.updatePropertyRequest was null or undefined when calling updateProperty.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/properties/{property_id}\".replace(\"{\".concat(\"property_id\", \"}\"), encodeURIComponent(String(requestParameters.propertyId))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdatePropertyRequestToJSON)(requestParameters.updatePropertyRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property.\n     * Update Property\n     */ PropertiesApi.prototype.updateProperty = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updatePropertyRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return PropertiesApi;\n}(runtime.BaseAPI);\nexports.PropertiesApi = PropertiesApi;\n/**\n * @export\n */ exports.GetPropertiesContextEnum = {\n    Usr: \"usr\",\n    Org: \"org\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertiesApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertyCategoriesApi.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertyCategoriesApi.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetCategoriesContextEnum = exports.PropertyCategoriesApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var PropertyCategoriesApi = /** @class */ function(_super) {\n    __extends(PropertyCategoriesApi, _super);\n    function PropertyCategoriesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create category.\n     * Create Category\n     */ PropertyCategoriesApi.prototype.createCategoryRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.createCategoryRequest === null || requestParameters.createCategoryRequest === undefined) {\n                            throw new runtime.RequiredError(\"createCategoryRequest\", \"Required parameter requestParameters.createCategoryRequest was null or undefined when calling createCategory.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/property_categories\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateCategoryRequestToJSON)(requestParameters.createCategoryRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreateCategoryResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create category.\n     * Create Category\n     */ PropertyCategoriesApi.prototype.createCategory = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createCategoryRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of categories.\n     * List categories\n     */ PropertyCategoriesApi.prototype.getCategoriesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.startingAfter !== undefined) {\n                            queryParameters[\"starting_after\"] = requestParameters.startingAfter;\n                        }\n                        if (requestParameters.endingBefore !== undefined) {\n                            queryParameters[\"ending_before\"] = requestParameters.endingBefore;\n                        }\n                        if (requestParameters.context !== undefined) {\n                            queryParameters[\"context\"] = requestParameters.context;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/property_categories\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetCategoriesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Returns a list of categories.\n     * List categories\n     */ PropertyCategoriesApi.prototype.getCategories = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getCategoriesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update category.\n     * Update Category\n     */ PropertyCategoriesApi.prototype.updateCategoryRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.categoryId === null || requestParameters.categoryId === undefined) {\n                            throw new runtime.RequiredError(\"categoryId\", \"Required parameter requestParameters.categoryId was null or undefined when calling updateCategory.\");\n                        }\n                        if (requestParameters.updateCategoryRequest === null || requestParameters.updateCategoryRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateCategoryRequest\", \"Required parameter requestParameters.updateCategoryRequest was null or undefined when calling updateCategory.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/property_categories/{category_id}\".replace(\"{\".concat(\"category_id\", \"}\"), encodeURIComponent(String(requestParameters.categoryId))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateCategoryRequestToJSON)(requestParameters.updateCategoryRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update category.\n     * Update Category\n     */ PropertyCategoriesApi.prototype.updateCategory = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateCategoryRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return PropertyCategoriesApi;\n}(runtime.BaseAPI);\nexports.PropertyCategoriesApi = PropertyCategoriesApi;\n/**\n * @export\n */ exports.GetCategoriesContextEnum = {\n    Usr: \"usr\",\n    Org: \"org\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertyCategoriesApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/RolesApi.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/RolesApi.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetRolesSortEnum = exports.GetRolePermissionSortEnum = exports.RolesApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var RolesApi = /** @class */ function(_super) {\n    __extends(RolesApi, _super);\n    function RolesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create role.\n     * Create Role\n     */ RolesApi.prototype.createRoleRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateRoleRequestToJSON)(requestParameters.createRoleRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create role.\n     * Create Role\n     */ RolesApi.prototype.createRole = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createRoleRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete role\n     * Delete Role\n     */ RolesApi.prototype.deleteRoleRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling deleteRole.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles/{role_id}\".replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete role\n     * Delete Role\n     */ RolesApi.prototype.deleteRole = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteRoleRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get permissions for a role.\n     * Get Role Permissions\n     */ RolesApi.prototype.getRolePermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling getRolePermission.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles/{role_id}/permissions\".replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return jsonValue.map(index_js_1.RolesPermissionResponseInnerFromJSON);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get permissions for a role.\n     * Get Role Permissions\n     */ RolesApi.prototype.getRolePermission = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getRolePermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Roles\n     */ RolesApi.prototype.getRolesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetRolesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Roles\n     */ RolesApi.prototype.getRoles = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getRolesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Remove a permission from a role.\n     * Remove Role Permission\n     */ RolesApi.prototype.removeRolePermissionRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling removeRolePermission.\");\n                        }\n                        if (requestParameters.permissionId === null || requestParameters.permissionId === undefined) {\n                            throw new runtime.RequiredError(\"permissionId\", \"Required parameter requestParameters.permissionId was null or undefined when calling removeRolePermission.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles/{role_id}/permissions/{permission_id}\".replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))).replace(\"{\".concat(\"permission_id\", \"}\"), encodeURIComponent(String(requestParameters.permissionId))),\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Remove a permission from a role.\n     * Remove Role Permission\n     */ RolesApi.prototype.removeRolePermission = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.removeRolePermissionRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update role permissions.\n     * Update Role Permissions\n     */ RolesApi.prototype.updateRolePermissionsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling updateRolePermissions.\");\n                        }\n                        if (requestParameters.updateRolePermissionsRequest === null || requestParameters.updateRolePermissionsRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateRolePermissionsRequest\", \"Required parameter requestParameters.updateRolePermissionsRequest was null or undefined when calling updateRolePermissions.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles/{role_id}/permissions\".replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateRolePermissionsRequestToJSON)(requestParameters.updateRolePermissionsRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UpdateRolePermissionsResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update role permissions.\n     * Update Role Permissions\n     */ RolesApi.prototype.updateRolePermissions = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateRolePermissionsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update a role\n     * Update Role\n     */ RolesApi.prototype.updateRolesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.roleId === null || requestParameters.roleId === undefined) {\n                            throw new runtime.RequiredError(\"roleId\", \"Required parameter requestParameters.roleId was null or undefined when calling updateRoles.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/roles/{role_id}\".replace(\"{\".concat(\"role_id\", \"}\"), encodeURIComponent(String(requestParameters.roleId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateRolesRequestToJSON)(requestParameters.updateRolesRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update a role\n     * Update Role\n     */ RolesApi.prototype.updateRoles = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateRolesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return RolesApi;\n}(runtime.BaseAPI);\nexports.RolesApi = RolesApi;\n/**\n * @export\n */ exports.GetRolePermissionSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    IdAsc: \"id_asc\",\n    IdDesc: \"id_desc\"\n};\n/**\n * @export\n */ exports.GetRolesSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    IdAsc: \"id_asc\",\n    IdDesc: \"id_desc\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/RolesApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/SubscribersApi.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/SubscribersApi.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetSubscribersSortEnum = exports.SubscribersApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var SubscribersApi = /** @class */ function(_super) {\n    __extends(SubscribersApi, _super);\n    function SubscribersApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create subscriber.\n     * Create Subscriber\n     */ SubscribersApi.prototype.createSubscriberRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.firstName === null || requestParameters.firstName === undefined) {\n                            throw new runtime.RequiredError(\"firstName\", \"Required parameter requestParameters.firstName was null or undefined when calling createSubscriber.\");\n                        }\n                        if (requestParameters.lastName === null || requestParameters.lastName === undefined) {\n                            throw new runtime.RequiredError(\"lastName\", \"Required parameter requestParameters.lastName was null or undefined when calling createSubscriber.\");\n                        }\n                        if (requestParameters.email === null || requestParameters.email === undefined) {\n                            throw new runtime.RequiredError(\"email\", \"Required parameter requestParameters.email was null or undefined when calling createSubscriber.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.firstName !== undefined) {\n                            queryParameters[\"first_name\"] = requestParameters.firstName;\n                        }\n                        if (requestParameters.lastName !== undefined) {\n                            queryParameters[\"last_name\"] = requestParameters.lastName;\n                        }\n                        if (requestParameters.email !== undefined) {\n                            queryParameters[\"email\"] = requestParameters.email;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/subscribers\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreateSubscriberSuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create subscriber.\n     * Create Subscriber\n     */ SubscribersApi.prototype.createSubscriber = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createSubscriberRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve a subscriber record.\n     * Get Subscriber\n     */ SubscribersApi.prototype.getSubscriberRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.subscriberId === null || requestParameters.subscriberId === undefined) {\n                            throw new runtime.RequiredError(\"subscriberId\", \"Required parameter requestParameters.subscriberId was null or undefined when calling getSubscriber.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/subscribers/{subscriber_id}\".replace(\"{\".concat(\"subscriber_id\", \"}\"), encodeURIComponent(String(requestParameters.subscriberId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetSubscriberResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve a subscriber record.\n     * Get Subscriber\n     */ SubscribersApi.prototype.getSubscriber = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getSubscriberRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Subscribers\n     */ SubscribersApi.prototype.getSubscribersRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.sort !== undefined) {\n                            queryParameters[\"sort\"] = requestParameters.sort;\n                        }\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/subscribers\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetSubscribersResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Subscribers\n     */ SubscribersApi.prototype.getSubscribers = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getSubscribersRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return SubscribersApi;\n}(runtime.BaseAPI);\nexports.SubscribersApi = SubscribersApi;\n/**\n * @export\n */ exports.GetSubscribersSortEnum = {\n    NameAsc: \"name_asc\",\n    NameDesc: \"name_desc\",\n    EmailAsc: \"email_asc\",\n    EmailDesc: \"email_desc\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/SubscribersApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/TimezonesApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/TimezonesApi.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TimezonesApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var TimezonesApi = /** @class */ function(_super) {\n    __extends(TimezonesApi, _super);\n    function TimezonesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of timezones and associated timezone keys.\n     * List timezones and timezone IDs.\n     */ TimezonesApi.prototype.getTimezonesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.timezoneKey !== undefined) {\n                            queryParameters[\"timezone_key\"] = requestParameters.timezoneKey;\n                        }\n                        if (requestParameters.name !== undefined) {\n                            queryParameters[\"name\"] = requestParameters.name;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/timezones\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Get a list of timezones and associated timezone keys.\n     * List timezones and timezone IDs.\n     */ TimezonesApi.prototype.getTimezones = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getTimezonesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return TimezonesApi;\n}(runtime.BaseAPI);\nexports.TimezonesApi = TimezonesApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/TimezonesApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/UsersApi.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/UsersApi.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UsersApi = void 0;\nvar runtime = __importStar(__webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"));\nvar index_js_1 = __webpack_require__(/*! ../models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\");\n/**\n *\n */ var UsersApi = /** @class */ function(_super) {\n    __extends(UsersApi, _super);\n    function UsersApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a user record and optionally zero or more identities for the user. An example identity could be the email address of the user.\n     * Create User\n     */ UsersApi.prototype.createUserRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/user\",\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.CreateUserRequestToJSON)(requestParameters.createUserRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.CreateUserResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a user record and optionally zero or more identities for the user. An example identity could be the email address of the user.\n     * Create User\n     */ UsersApi.prototype.createUser = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createUserRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete a user record.\n     * Delete User\n     */ UsersApi.prototype.deleteUserRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.id === null || requestParameters.id === undefined) {\n                            throw new runtime.RequiredError(\"id\", \"Required parameter requestParameters.id was null or undefined when calling deleteUser.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.id !== undefined) {\n                            queryParameters[\"id\"] = requestParameters.id;\n                        }\n                        if (requestParameters.isDeleteProfile !== undefined) {\n                            queryParameters[\"is_delete_profile\"] = requestParameters.isDeleteProfile;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/user\",\n                                method: \"DELETE\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Delete a user record.\n     * Delete User\n     */ UsersApi.prototype.deleteUser = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.deleteUserRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve a user record.\n     * Get User\n     */ UsersApi.prototype.getUserDataRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.id === null || requestParameters.id === undefined) {\n                            throw new runtime.RequiredError(\"id\", \"Required parameter requestParameters.id was null or undefined when calling getUserData.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.id !== undefined) {\n                            queryParameters[\"id\"] = requestParameters.id;\n                        }\n                        if (requestParameters.expand !== undefined) {\n                            queryParameters[\"expand\"] = requestParameters.expand;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/user\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UserFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve a user record.\n     * Get User\n     */ UsersApi.prototype.getUserData = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getUserDataRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets properties for an user by ID.\n     * Get property values\n     */ UsersApi.prototype.getUserPropertyValuesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling getUserPropertyValues.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/properties\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.GetPropertyValuesResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Gets properties for an user by ID.\n     * Get property values\n     */ UsersApi.prototype.getUserPropertyValues = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getUserPropertyValuesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Users\n     */ UsersApi.prototype.getUsersRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        queryParameters = {};\n                        if (requestParameters.pageSize !== undefined) {\n                            queryParameters[\"page_size\"] = requestParameters.pageSize;\n                        }\n                        if (requestParameters.userId !== undefined) {\n                            queryParameters[\"user_id\"] = requestParameters.userId;\n                        }\n                        if (requestParameters.nextToken !== undefined) {\n                            queryParameters[\"next_token\"] = requestParameters.nextToken;\n                        }\n                        if (requestParameters.email !== undefined) {\n                            queryParameters[\"email\"] = requestParameters.email;\n                        }\n                        if (requestParameters.expand !== undefined) {\n                            queryParameters[\"expand\"] = requestParameters.expand;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users\",\n                                method: \"GET\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UsersResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * The returned list can be sorted by full name or email address in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.\n     * List Users\n     */ UsersApi.prototype.getUsers = function(requestParameters, initOverrides) {\n        if (requestParameters === void 0) {\n            requestParameters = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getUsersRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes the user\\'s claims and invalidates the current cache.\n     * Refresh User Claims and Invalidate Cache\n     */ UsersApi.prototype.refreshUserClaimsRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling refreshUserClaims.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/refresh_claims\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"POST\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Refreshes the user\\'s claims and invalidates the current cache.\n     * Refresh User Claims and Invalidate Cache\n     */ UsersApi.prototype.refreshUserClaims = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.refreshUserClaimsRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Set user password.\n     * Set User password\n     */ UsersApi.prototype.setUserPasswordRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling setUserPassword.\");\n                        }\n                        if (requestParameters.setUserPasswordRequest === null || requestParameters.setUserPasswordRequest === undefined) {\n                            throw new runtime.RequiredError(\"setUserPasswordRequest\", \"Required parameter requestParameters.setUserPasswordRequest was null or undefined when calling setUserPassword.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/password\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.SetUserPasswordRequestToJSON)(requestParameters.setUserPasswordRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Set user password.\n     * Set User password\n     */ UsersApi.prototype.setUserPassword = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.setUserPasswordRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update a user record.\n     * Update User\n     */ UsersApi.prototype.updateUserRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.id === null || requestParameters.id === undefined) {\n                            throw new runtime.RequiredError(\"id\", \"Required parameter requestParameters.id was null or undefined when calling updateUser.\");\n                        }\n                        if (requestParameters.updateUserRequest === null || requestParameters.updateUserRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateUserRequest\", \"Required parameter requestParameters.updateUserRequest was null or undefined when calling updateUser.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.id !== undefined) {\n                            queryParameters[\"id\"] = requestParameters.id;\n                        }\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/user\",\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateUserRequestToJSON)(requestParameters.updateUserRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.UpdateUserResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update a user record.\n     * Update User\n     */ UsersApi.prototype.updateUser = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateUserRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update user feature flag override.\n     * Update User Feature Flag Override\n     */ UsersApi.prototype.updateUserFeatureFlagOverrideRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling updateUserFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.featureFlagKey === null || requestParameters.featureFlagKey === undefined) {\n                            throw new runtime.RequiredError(\"featureFlagKey\", \"Required parameter requestParameters.featureFlagKey was null or undefined when calling updateUserFeatureFlagOverride.\");\n                        }\n                        if (requestParameters.value === null || requestParameters.value === undefined) {\n                            throw new runtime.RequiredError(\"value\", \"Required parameter requestParameters.value was null or undefined when calling updateUserFeatureFlagOverride.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.value !== undefined) {\n                            queryParameters[\"value\"] = requestParameters.value;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/feature_flags/{feature_flag_key}\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))).replace(\"{\".concat(\"feature_flag_key\", \"}\"), encodeURIComponent(String(requestParameters.featureFlagKey))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update user feature flag override.\n     * Update User Feature Flag Override\n     */ UsersApi.prototype.updateUserFeatureFlagOverride = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateUserFeatureFlagOverrideRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property values.\n     * Update Property values\n     */ UsersApi.prototype.updateUserPropertiesRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling updateUserProperties.\");\n                        }\n                        if (requestParameters.updateOrganizationPropertiesRequest === null || requestParameters.updateOrganizationPropertiesRequest === undefined) {\n                            throw new runtime.RequiredError(\"updateOrganizationPropertiesRequest\", \"Required parameter requestParameters.updateOrganizationPropertiesRequest was null or undefined when calling updateUserProperties.\");\n                        }\n                        queryParameters = {};\n                        headerParameters = {};\n                        headerParameters[\"Content-Type\"] = \"application/json\";\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/properties\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))),\n                                method: \"PATCH\",\n                                headers: headerParameters,\n                                query: queryParameters,\n                                body: (0, index_js_1.UpdateOrganizationPropertiesRequestToJSON)(requestParameters.updateOrganizationPropertiesRequest)\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property values.\n     * Update Property values\n     */ UsersApi.prototype.updateUserProperties = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateUserPropertiesRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property value.\n     * Update Property value\n     */ UsersApi.prototype.updateUserPropertyRaw = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var queryParameters, headerParameters, token, tokenString, response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (requestParameters.userId === null || requestParameters.userId === undefined) {\n                            throw new runtime.RequiredError(\"userId\", \"Required parameter requestParameters.userId was null or undefined when calling updateUserProperty.\");\n                        }\n                        if (requestParameters.propertyKey === null || requestParameters.propertyKey === undefined) {\n                            throw new runtime.RequiredError(\"propertyKey\", \"Required parameter requestParameters.propertyKey was null or undefined when calling updateUserProperty.\");\n                        }\n                        if (requestParameters.value === null || requestParameters.value === undefined) {\n                            throw new runtime.RequiredError(\"value\", \"Required parameter requestParameters.value was null or undefined when calling updateUserProperty.\");\n                        }\n                        queryParameters = {};\n                        if (requestParameters.value !== undefined) {\n                            queryParameters[\"value\"] = requestParameters.value;\n                        }\n                        headerParameters = {};\n                        if (!(this.configuration && this.configuration.accessToken)) return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                        token = this.configuration.accessToken;\n                        return [\n                            4 /*yield*/ ,\n                            token(\"kindeBearerAuth\", [])\n                        ];\n                    case 1:\n                        tokenString = _a.sent();\n                        if (tokenString) {\n                            headerParameters[\"Authorization\"] = \"Bearer \".concat(tokenString);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            this.request({\n                                path: \"/api/v1/users/{user_id}/properties/{property_key}\".replace(\"{\".concat(\"user_id\", \"}\"), encodeURIComponent(String(requestParameters.userId))).replace(\"{\".concat(\"property_key\", \"}\"), encodeURIComponent(String(requestParameters.propertyKey))),\n                                method: \"PUT\",\n                                headers: headerParameters,\n                                query: queryParameters\n                            }, initOverrides)\n                        ];\n                    case 3:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new runtime.JSONApiResponse(response, function(jsonValue) {\n                                return (0, index_js_1.SuccessResponseFromJSON)(jsonValue);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Update property value.\n     * Update Property value\n     */ UsersApi.prototype.updateUserProperty = function(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.updateUserPropertyRaw(requestParameters, initOverrides)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.value()\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return UsersApi;\n}(runtime.BaseAPI);\nexports.UsersApi = UsersApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/UsersApi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/* tslint:disable */ /* eslint-disable */ __exportStar(__webpack_require__(/*! ./APIsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/APIsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ApplicationsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ApplicationsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./BusinessApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/BusinessApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CallbacksApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/CallbacksApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectedAppsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/ConnectedAppsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./EnvironmentsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/EnvironmentsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./FeatureFlagsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/FeatureFlagsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./IndustriesApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/IndustriesApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OAuthApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OAuthApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/OrganizationsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PermissionsApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PermissionsApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PropertiesApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertiesApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PropertyCategoriesApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/PropertyCategoriesApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RolesApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/RolesApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SubscribersApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/SubscribersApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TimezonesApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/TimezonesApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UsersApi.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/UsersApi.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9hcGlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEJOLGFBQWFPLG1CQUFPQSxDQUFDLG1HQUFjLEdBQUdOO0FBQ3RDRCxhQUFhTyxtQkFBT0EsQ0FBQyxtSEFBc0IsR0FBR047QUFDOUNELGFBQWFPLG1CQUFPQSxDQUFDLDJHQUFrQixHQUFHTjtBQUMxQ0QsYUFBYU8sbUJBQU9BLENBQUMsNkdBQW1CLEdBQUdOO0FBQzNDRCxhQUFhTyxtQkFBT0EsQ0FBQyxxSEFBdUIsR0FBR047QUFDL0NELGFBQWFPLG1CQUFPQSxDQUFDLG1IQUFzQixHQUFHTjtBQUM5Q0QsYUFBYU8sbUJBQU9BLENBQUMsbUhBQXNCLEdBQUdOO0FBQzlDRCxhQUFhTyxtQkFBT0EsQ0FBQywrR0FBb0IsR0FBR047QUFDNUNELGFBQWFPLG1CQUFPQSxDQUFDLHFHQUFlLEdBQUdOO0FBQ3ZDRCxhQUFhTyxtQkFBT0EsQ0FBQyxxSEFBdUIsR0FBR047QUFDL0NELGFBQWFPLG1CQUFPQSxDQUFDLGlIQUFxQixHQUFHTjtBQUM3Q0QsYUFBYU8sbUJBQU9BLENBQUMsK0dBQW9CLEdBQUdOO0FBQzVDRCxhQUFhTyxtQkFBT0EsQ0FBQywrSEFBNEIsR0FBR047QUFDcERELGFBQWFPLG1CQUFPQSxDQUFDLHFHQUFlLEdBQUdOO0FBQ3ZDRCxhQUFhTyxtQkFBT0EsQ0FBQyxpSEFBcUIsR0FBR047QUFDN0NELGFBQWFPLG1CQUFPQSxDQUFDLDZHQUFtQixHQUFHTjtBQUMzQ0QsYUFBYU8sbUJBQU9BLENBQUMscUdBQWUsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL2FwaXMvaW5kZXguanM/NTIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQVBJc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQXBwbGljYXRpb25zQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CdXNpbmVzc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ2FsbGJhY2tzQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db25uZWN0ZWRBcHBzQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FbnZpcm9ubWVudHNBcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0ZlYXR1cmVGbGFnc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vSW5kdXN0cmllc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vT0F1dGhBcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL09yZ2FuaXphdGlvbnNBcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Blcm1pc3Npb25zQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Qcm9wZXJ0aWVzQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Qcm9wZXJ0eUNhdGVnb3JpZXNBcGkuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1JvbGVzQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TdWJzY3JpYmVyc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vVGltZXpvbmVzQXBpLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Vc2Vyc0FwaS5qc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.managementApi = void 0;\n/* tslint:disable */ /* eslint-disable */ var apis = __importStar(__webpack_require__(/*! ./apis/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/index.js\"));\nvar models = __importStar(__webpack_require__(/*! ./models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\"));\n__exportStar(__webpack_require__(/*! ./runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\"), exports);\n__exportStar(__webpack_require__(/*! ./apis/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/apis/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./models/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sdk/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/index.js\"), exports);\nexports.managementApi = {\n    apis: apis,\n    models: models\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLHFCQUFxQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGtCQUFrQixJQUFNZixDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFYyxDQUFDO0lBQ3pGaEIsT0FBT2MsY0FBYyxDQUFDWixHQUFHLFdBQVc7UUFBRVUsWUFBWTtRQUFNSyxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU2QsQ0FBQyxFQUFFYyxDQUFDO0lBQ2RkLENBQUMsQ0FBQyxVQUFVLEdBQUdjO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFVQyxHQUFHO0lBQzNELElBQUlBLE9BQU9BLElBQUlWLFVBQVUsRUFBRSxPQUFPVTtJQUNsQyxJQUFJQyxTQUFTLENBQUM7SUFDZCxJQUFJRCxPQUFPLE1BQU07UUFBQSxJQUFLLElBQUlmLEtBQUtlLElBQUssSUFBSWYsTUFBTSxhQUFhSixPQUFPcUIsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osS0FBS2YsSUFBSUwsZ0JBQWdCcUIsUUFBUUQsS0FBS2Y7SUFBRTtJQUN4SVcsbUJBQW1CSyxRQUFRRDtJQUMzQixPQUFPQztBQUNYO0FBQ0EsSUFBSUksZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTckIsQ0FBQyxFQUFFc0IsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUt2QixFQUFHLElBQUl1QixNQUFNLGFBQWEsQ0FBQzFCLE9BQU9xQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDRSxVQUFTQyxJQUFJM0IsZ0JBQWdCMEIsVUFBU3RCLEdBQUd1QjtBQUMzSDtBQUNBMUIsOENBQTZDO0lBQUVpQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdEUSxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEIsSUFBSUcsT0FBT1YsYUFBYVcsbUJBQU9BLENBQUMsb0dBQWlCO0FBQ2pELElBQUlDLFNBQVNaLGFBQWFXLG1CQUFPQSxDQUFDLHdHQUFtQjtBQUNyREwsYUFBYUssbUJBQU9BLENBQUMsOEZBQWMsR0FBR0o7QUFDdENELGFBQWFLLG1CQUFPQSxDQUFDLG9HQUFpQixHQUFHSjtBQUN6Q0QsYUFBYUssbUJBQU9BLENBQUMsd0dBQW1CLEdBQUdKO0FBQzNDRCxhQUFhSyxtQkFBT0EsQ0FBQyxrR0FBZ0IsR0FBR0o7QUFDeENBLHFCQUFxQixHQUFHO0lBQ3BCRyxNQUFNQTtJQUNORSxRQUFRQTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9pbmRleC5qcz82MGE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYW5hZ2VtZW50QXBpID0gdm9pZCAwO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgYXBpcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9hcGlzL2luZGV4LmpzXCIpKTtcbnZhciBtb2RlbHMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbW9kZWxzL2luZGV4LmpzXCIpKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ydW50aW1lLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGlzL2luZGV4LmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb2RlbHMvaW5kZXguanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Nkay9pbmRleC5qc1wiKSwgZXhwb3J0cyk7XG5leHBvcnRzLm1hbmFnZW1lbnRBcGkgPSB7XG4gICAgYXBpczogYXBpcyxcbiAgICBtb2RlbHM6IG1vZGVsc1xufTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJyZXN1bHQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsIm1hbmFnZW1lbnRBcGkiLCJhcGlzIiwicmVxdWlyZSIsIm1vZGVscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddAPIsRequest.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddAPIsRequest.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AddAPIsRequestToJSON = exports.AddAPIsRequestFromJSONTyped = exports.AddAPIsRequestFromJSON = exports.instanceOfAddAPIsRequest = void 0;\n/**\n * Check if a given object implements the AddAPIsRequest interface.\n */ function instanceOfAddAPIsRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"audience\" in value;\n    return isInstance;\n}\nexports.instanceOfAddAPIsRequest = instanceOfAddAPIsRequest;\nfunction AddAPIsRequestFromJSON(json) {\n    return AddAPIsRequestFromJSONTyped(json, false);\n}\nexports.AddAPIsRequestFromJSON = AddAPIsRequestFromJSON;\nfunction AddAPIsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"audience\": json[\"audience\"]\n    };\n}\nexports.AddAPIsRequestFromJSONTyped = AddAPIsRequestFromJSONTyped;\nfunction AddAPIsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"audience\": value.audience\n    };\n}\nexports.AddAPIsRequestToJSON = AddAPIsRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkQVBJc1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHQSxtQ0FBbUMsR0FBR0EsOEJBQThCLEdBQUdBLGdDQUFnQyxHQUFHLEtBQUs7QUFDOUk7O0NBRUMsR0FDRCxTQUFTSyx5QkFBeUJKLEtBQUs7SUFDbkMsSUFBSUssYUFBYTtJQUNqQkEsYUFBYUEsY0FBYyxVQUFVTDtJQUNyQ0ssYUFBYUEsY0FBYyxjQUFjTDtJQUN6QyxPQUFPSztBQUNYO0FBQ0FOLGdDQUFnQyxHQUFHSztBQUNuQyxTQUFTRCx1QkFBdUJHLElBQUk7SUFDaEMsT0FBT0osNEJBQTRCSSxNQUFNO0FBQzdDO0FBQ0FQLDhCQUE4QixHQUFHSTtBQUNqQyxTQUFTRCw0QkFBNEJJLElBQUksRUFBRUMsbUJBQW1CO0lBQzFELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsSUFBSSxDQUFDLE9BQU87UUFDcEIsWUFBWUEsSUFBSSxDQUFDLFdBQVc7SUFDaEM7QUFDSjtBQUNBUCxtQ0FBbUMsR0FBR0c7QUFDdEMsU0FBU0QscUJBQXFCRCxLQUFLO0lBQy9CLElBQUlBLFVBQVVRLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlSLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVMsSUFBSTtRQUNsQixZQUFZVCxNQUFNVSxRQUFRO0lBQzlCO0FBQ0o7QUFDQVgsNEJBQTRCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkQVBJc1JlcXVlc3QuanM/Y2NiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWRkQVBJc1JlcXVlc3RUb0pTT04gPSBleHBvcnRzLkFkZEFQSXNSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQWRkQVBJc1JlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkFkZEFQSXNSZXF1ZXN0ID0gdm9pZCAwO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBBZGRBUElzUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBZGRBUElzUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcIm5hbWVcIiBpbiB2YWx1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImF1ZGllbmNlXCIgaW4gdmFsdWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZBZGRBUElzUmVxdWVzdCA9IGluc3RhbmNlT2ZBZGRBUElzUmVxdWVzdDtcbmZ1bmN0aW9uIEFkZEFQSXNSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBZGRBUElzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5BZGRBUElzUmVxdWVzdEZyb21KU09OID0gQWRkQVBJc1JlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIEFkZEFQSXNSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiBqc29uWyduYW1lJ10sXG4gICAgICAgICdhdWRpZW5jZSc6IGpzb25bJ2F1ZGllbmNlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQWRkQVBJc1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gQWRkQVBJc1JlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQWRkQVBJc1JlcXVlc3RUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICAgICAgJ2F1ZGllbmNlJzogdmFsdWUuYXVkaWVuY2UsXG4gICAgfTtcbn1cbmV4cG9ydHMuQWRkQVBJc1JlcXVlc3RUb0pTT04gPSBBZGRBUElzUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFkZEFQSXNSZXF1ZXN0VG9KU09OIiwiQWRkQVBJc1JlcXVlc3RGcm9tSlNPTlR5cGVkIiwiQWRkQVBJc1JlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZBZGRBUElzUmVxdWVzdCIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsIm5hbWUiLCJhdWRpZW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddAPIsRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequest.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequest.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AddOrganizationUsersRequestToJSON = exports.AddOrganizationUsersRequestFromJSONTyped = exports.AddOrganizationUsersRequestFromJSON = exports.instanceOfAddOrganizationUsersRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar AddOrganizationUsersRequestUsersInner_js_1 = __webpack_require__(/*! ./AddOrganizationUsersRequestUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequestUsersInner.js\");\n/**\n * Check if a given object implements the AddOrganizationUsersRequest interface.\n */ function instanceOfAddOrganizationUsersRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfAddOrganizationUsersRequest = instanceOfAddOrganizationUsersRequest;\nfunction AddOrganizationUsersRequestFromJSON(json) {\n    return AddOrganizationUsersRequestFromJSONTyped(json, false);\n}\nexports.AddOrganizationUsersRequestFromJSON = AddOrganizationUsersRequestFromJSON;\nfunction AddOrganizationUsersRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"users\": !(0, runtime_js_1.exists)(json, \"users\") ? undefined : json[\"users\"].map(AddOrganizationUsersRequestUsersInner_js_1.AddOrganizationUsersRequestUsersInnerFromJSON)\n    };\n}\nexports.AddOrganizationUsersRequestFromJSONTyped = AddOrganizationUsersRequestFromJSONTyped;\nfunction AddOrganizationUsersRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"users\": value.users === undefined ? undefined : value.users.map(AddOrganizationUsersRequestUsersInner_js_1.AddOrganizationUsersRequestUsersInnerToJSON)\n    };\n}\nexports.AddOrganizationUsersRequestToJSON = AddOrganizationUsersRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5Q0FBeUMsR0FBR0EsZ0RBQWdELEdBQUdBLDJDQUEyQyxHQUFHQSw2Q0FBNkMsR0FBRyxLQUFLO0FBQ2xNLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLDZDQUE2Q0QsbUJBQU9BLENBQUMsaUtBQTRDO0FBQ3JHOztDQUVDLEdBQ0QsU0FBU0Ysc0NBQXNDSixLQUFLO0lBQ2hELElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCw2Q0FBNkMsR0FBR0s7QUFDaEQsU0FBU0Qsb0NBQW9DTSxJQUFJO0lBQzdDLE9BQU9QLHlDQUF5Q08sTUFBTTtBQUMxRDtBQUNBViwyQ0FBMkMsR0FBR0k7QUFDOUMsU0FBU0QseUNBQXlDTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUN2RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFhRixJQUFJLENBQUMsUUFBUSxDQUFDSSxHQUFHLENBQUNOLDJDQUEyQ08sNkNBQTZDO0lBQy9LO0FBQ0o7QUFDQWYsZ0RBQWdELEdBQUdHO0FBQ25ELFNBQVNELGtDQUFrQ0QsS0FBSztJQUM1QyxJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVNBLE1BQU1lLEtBQUssS0FBS0osWUFBWUEsWUFBYVgsTUFBTWUsS0FBSyxDQUFDRixHQUFHLENBQUNOLDJDQUEyQ1MsMkNBQTJDO0lBQzVKO0FBQ0o7QUFDQWpCLHlDQUF5QyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0FkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdC5qcz8wZDAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RUb0pTT04gPSBleHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJfanNfMSA9IHJlcXVpcmUoXCIuL0FkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXIuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QgPSBpbnN0YW5jZU9mQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0O1xuZnVuY3Rpb24gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0RnJvbUpTT04gPSBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd1c2Vycyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzJykgPyB1bmRlZmluZWQgOiAoanNvblsndXNlcnMnXS5tYXAoQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lcl9qc18xLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndXNlcnMnOiB2YWx1ZS51c2VycyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnVzZXJzLm1hcChBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyX2pzXzEuQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTiA9IEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTiIsIkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQiLCJBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OIiwidXNlcnMiLCJBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequestUsersInner.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequestUsersInner.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AddOrganizationUsersRequestUsersInnerToJSON = exports.AddOrganizationUsersRequestUsersInnerFromJSONTyped = exports.AddOrganizationUsersRequestUsersInnerFromJSON = exports.instanceOfAddOrganizationUsersRequestUsersInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the AddOrganizationUsersRequestUsersInner interface.\n */ function instanceOfAddOrganizationUsersRequestUsersInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfAddOrganizationUsersRequestUsersInner = instanceOfAddOrganizationUsersRequestUsersInner;\nfunction AddOrganizationUsersRequestUsersInnerFromJSON(json) {\n    return AddOrganizationUsersRequestUsersInnerFromJSONTyped(json, false);\n}\nexports.AddOrganizationUsersRequestUsersInnerFromJSON = AddOrganizationUsersRequestUsersInnerFromJSON;\nfunction AddOrganizationUsersRequestUsersInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"],\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : json[\"permissions\"]\n    };\n}\nexports.AddOrganizationUsersRequestUsersInnerFromJSONTyped = AddOrganizationUsersRequestUsersInnerFromJSONTyped;\nfunction AddOrganizationUsersRequestUsersInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"roles\": value.roles,\n        \"permissions\": value.permissions\n    };\n}\nexports.AddOrganizationUsersRequestUsersInnerToJSON = AddOrganizationUsersRequestUsersInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbURBQW1ELEdBQUdBLDBEQUEwRCxHQUFHQSxxREFBcUQsR0FBR0EsdURBQXVELEdBQUcsS0FBSztBQUMxTyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLGdEQUFnREosS0FBSztJQUMxRCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsdURBQXVELEdBQUdLO0FBQzFELFNBQVNELDhDQUE4Q0ssSUFBSTtJQUN2RCxPQUFPTixtREFBbURNLE1BQU07QUFDcEU7QUFDQVQscURBQXFELEdBQUdJO0FBQ3hELFNBQVNELG1EQUFtRE0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDakYsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsU0FBUyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQVlGLElBQUksQ0FBQyxRQUFRO1FBQzdFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO0lBQ25HO0FBQ0o7QUFDQVQsMERBQTBELEdBQUdHO0FBQzdELFNBQVNELDRDQUE0Q0QsS0FBSztJQUN0RCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxTQUFTWixNQUFNYSxLQUFLO1FBQ3BCLGVBQWViLE1BQU1jLFdBQVc7SUFDcEM7QUFDSjtBQUNBZixtREFBbUQsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9BZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyLmpzPzI0NmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJUb0pTT04gPSBleHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyID0gaW5zdGFuY2VPZkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXI7XG5mdW5jdGlvbiBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTiA9IEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIEFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ3JvbGVzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncm9sZXMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3JvbGVzJ10sXG4gICAgICAgICdwZXJtaXNzaW9ucyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Blcm1pc3Npb25zJykgPyB1bmRlZmluZWQgOiBqc29uWydwZXJtaXNzaW9ucyddLFxuICAgIH07XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTlR5cGVkID0gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ3JvbGVzJzogdmFsdWUucm9sZXMsXG4gICAgICAgICdwZXJtaXNzaW9ucyc6IHZhbHVlLnBlcm1pc3Npb25zLFxuICAgIH07XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJUb0pTT04gPSBBZGRPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lclRvSlNPTiIsIkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTlR5cGVkIiwiQWRkT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OIiwiaW5zdGFuY2VPZkFkZE9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJyb2xlcyIsInBlcm1pc3Npb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequestUsersInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersResponse.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersResponse.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AddOrganizationUsersResponseToJSON = exports.AddOrganizationUsersResponseFromJSONTyped = exports.AddOrganizationUsersResponseFromJSON = exports.instanceOfAddOrganizationUsersResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the AddOrganizationUsersResponse interface.\n */ function instanceOfAddOrganizationUsersResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfAddOrganizationUsersResponse = instanceOfAddOrganizationUsersResponse;\nfunction AddOrganizationUsersResponseFromJSON(json) {\n    return AddOrganizationUsersResponseFromJSONTyped(json, false);\n}\nexports.AddOrganizationUsersResponseFromJSON = AddOrganizationUsersResponseFromJSON;\nfunction AddOrganizationUsersResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"usersAdded\": !(0, runtime_js_1.exists)(json, \"users_added\") ? undefined : json[\"users_added\"]\n    };\n}\nexports.AddOrganizationUsersResponseFromJSONTyped = AddOrganizationUsersResponseFromJSONTyped;\nfunction AddOrganizationUsersResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"users_added\": value.usersAdded\n    };\n}\nexports.AddOrganizationUsersResponseToJSON = AddOrganizationUsersResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMENBQTBDLEdBQUdBLGlEQUFpRCxHQUFHQSw0Q0FBNEMsR0FBR0EsOENBQThDLEdBQUcsS0FBSztBQUN0TSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHVDQUF1Q0osS0FBSztJQUNqRCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsOENBQThDLEdBQUdLO0FBQ2pELFNBQVNELHFDQUFxQ0ssSUFBSTtJQUM5QyxPQUFPTiwwQ0FBMENNLE1BQU07QUFDM0Q7QUFDQVQsNENBQTRDLEdBQUdJO0FBQy9DLFNBQVNELDBDQUEwQ00sSUFBSSxFQUFFQyxtQkFBbUI7SUFDeEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGNBQWMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO0lBQ2xHO0FBQ0o7QUFDQVQsaURBQWlELEdBQUdHO0FBQ3BELFNBQVNELG1DQUFtQ0QsS0FBSztJQUM3QyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7UUFDbEIsV0FBV1osTUFBTWEsT0FBTztRQUN4QixlQUFlYixNQUFNYyxVQUFVO0lBQ25DO0FBQ0o7QUFDQWYsMENBQTBDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZS5qcz9hYWQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSA9IGluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlO1xuZnVuY3Rpb24gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT04gPSBBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAndXNlcnNBZGRlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzX2FkZGVkJykgPyB1bmRlZmluZWQgOiBqc29uWyd1c2Vyc19hZGRlZCddLFxuICAgIH07XG59XG5leHBvcnRzLkFkZE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ3VzZXJzX2FkZGVkJzogdmFsdWUudXNlcnNBZGRlZCxcbiAgICB9O1xufVxuZXhwb3J0cy5BZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OID0gQWRkT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFkZE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VUb0pTT04iLCJBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkFkZE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZBZGRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImNvZGUiLCJtZXNzYWdlIiwidXNlcnNBZGRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Api.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Api.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ApiToJSON = exports.ApiFromJSONTyped = exports.ApiFromJSON = exports.instanceOfApi = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar ApiApplicationsInner_js_1 = __webpack_require__(/*! ./ApiApplicationsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiApplicationsInner.js\");\n/**\n * Check if a given object implements the Api interface.\n */ function instanceOfApi(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfApi = instanceOfApi;\nfunction ApiFromJSON(json) {\n    return ApiFromJSONTyped(json, false);\n}\nexports.ApiFromJSON = ApiFromJSON;\nfunction ApiFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"audience\": !(0, runtime_js_1.exists)(json, \"audience\") ? undefined : json[\"audience\"],\n        \"applications\": !(0, runtime_js_1.exists)(json, \"applications\") ? undefined : json[\"applications\"].map(ApiApplicationsInner_js_1.ApiApplicationsInnerFromJSON)\n    };\n}\nexports.ApiFromJSONTyped = ApiFromJSONTyped;\nfunction ApiToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"code\": value.code,\n        \"name\": value.name,\n        \"message\": value.message,\n        \"audience\": value.audience,\n        \"applications\": value.applications === undefined ? undefined : value.applications.map(ApiApplicationsInner_js_1.ApiApplicationsInnerToJSON)\n    };\n}\nexports.ApiToJSON = ApiToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0Esd0JBQXdCLEdBQUdBLG1CQUFtQixHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2xHLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLDRCQUE0QkQsbUJBQU9BLENBQUMsK0hBQTJCO0FBQ25FOztDQUVDLEdBQ0QsU0FBU0YsY0FBY0osS0FBSztJQUN4QixJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQscUJBQXFCLEdBQUdLO0FBQ3hCLFNBQVNELFlBQVlNLElBQUk7SUFDckIsT0FBT1AsaUJBQWlCTyxNQUFNO0FBQ2xDO0FBQ0FWLG1CQUFtQixHQUFHSTtBQUN0QixTQUFTRCxpQkFBaUJPLElBQUksRUFBRUMsbUJBQW1CO0lBQy9DLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLFlBQVksQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxjQUFjRSxZQUFZRixJQUFJLENBQUMsV0FBVztRQUN0RixnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxrQkFBa0JFLFlBQWFGLElBQUksQ0FBQyxlQUFlLENBQUNJLEdBQUcsQ0FBQ04sMEJBQTBCTyw0QkFBNEI7SUFDbEs7QUFDSjtBQUNBZix3QkFBd0IsR0FBR0c7QUFDM0IsU0FBU0QsVUFBVUQsS0FBSztJQUNwQixJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1lLEVBQUU7UUFDZCxRQUFRZixNQUFNZ0IsSUFBSTtRQUNsQixRQUFRaEIsTUFBTWlCLElBQUk7UUFDbEIsV0FBV2pCLE1BQU1rQixPQUFPO1FBQ3hCLFlBQVlsQixNQUFNbUIsUUFBUTtRQUMxQixnQkFBZ0JuQixNQUFNb0IsWUFBWSxLQUFLVCxZQUFZQSxZQUFhWCxNQUFNb0IsWUFBWSxDQUFDUCxHQUFHLENBQUNOLDBCQUEwQmMsMEJBQTBCO0lBQy9JO0FBQ0o7QUFDQXRCLGlCQUFpQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0FwaS5qcz9mODU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcGlUb0pTT04gPSBleHBvcnRzLkFwaUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkFwaUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQXBpID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIEFwaUFwcGxpY2F0aW9uc0lubmVyX2pzXzEgPSByZXF1aXJlKFwiLi9BcGlBcHBsaWNhdGlvbnNJbm5lci5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQXBpIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkFwaSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkFwaSA9IGluc3RhbmNlT2ZBcGk7XG5mdW5jdGlvbiBBcGlGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEFwaUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5BcGlGcm9tSlNPTiA9IEFwaUZyb21KU09OO1xuZnVuY3Rpb24gQXBpRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdhdWRpZW5jZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2F1ZGllbmNlJykgPyB1bmRlZmluZWQgOiBqc29uWydhdWRpZW5jZSddLFxuICAgICAgICAnYXBwbGljYXRpb25zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnYXBwbGljYXRpb25zJykgPyB1bmRlZmluZWQgOiAoanNvblsnYXBwbGljYXRpb25zJ10ubWFwKEFwaUFwcGxpY2F0aW9uc0lubmVyX2pzXzEuQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkFwaUZyb21KU09OVHlwZWQgPSBBcGlGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQXBpVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ2F1ZGllbmNlJzogdmFsdWUuYXVkaWVuY2UsXG4gICAgICAgICdhcHBsaWNhdGlvbnMnOiB2YWx1ZS5hcHBsaWNhdGlvbnMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5hcHBsaWNhdGlvbnMubWFwKEFwaUFwcGxpY2F0aW9uc0lubmVyX2pzXzEuQXBpQXBwbGljYXRpb25zSW5uZXJUb0pTT04pKSxcbiAgICB9O1xufVxuZXhwb3J0cy5BcGlUb0pTT04gPSBBcGlUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBcGlUb0pTT04iLCJBcGlGcm9tSlNPTlR5cGVkIiwiQXBpRnJvbUpTT04iLCJpbnN0YW5jZU9mQXBpIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIkFwaUFwcGxpY2F0aW9uc0lubmVyX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJBcGlBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OIiwiaWQiLCJjb2RlIiwibmFtZSIsIm1lc3NhZ2UiLCJhdWRpZW5jZSIsImFwcGxpY2F0aW9ucyIsIkFwaUFwcGxpY2F0aW9uc0lubmVyVG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Api.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiApplicationsInner.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiApplicationsInner.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ApiApplicationsInnerToJSON = exports.ApiApplicationsInnerFromJSONTyped = exports.ApiApplicationsInnerFromJSON = exports.instanceOfApiApplicationsInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ApiApplicationsInner interface.\n */ function instanceOfApiApplicationsInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfApiApplicationsInner = instanceOfApiApplicationsInner;\nfunction ApiApplicationsInnerFromJSON(json) {\n    return ApiApplicationsInnerFromJSONTyped(json, false);\n}\nexports.ApiApplicationsInnerFromJSON = ApiApplicationsInnerFromJSON;\nfunction ApiApplicationsInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"isActive\": !(0, runtime_js_1.exists)(json, \"is_active\") ? undefined : json[\"is_active\"]\n    };\n}\nexports.ApiApplicationsInnerFromJSONTyped = ApiApplicationsInnerFromJSONTyped;\nfunction ApiApplicationsInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name,\n        \"type\": value.type,\n        \"is_active\": value.isActive\n    };\n}\nexports.ApiApplicationsInnerToJSON = ApiApplicationsInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpQXBwbGljYXRpb25zSW5uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtDQUFrQyxHQUFHQSx5Q0FBeUMsR0FBR0Esb0NBQW9DLEdBQUdBLHNDQUFzQyxHQUFHLEtBQUs7QUFDdEssSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiwrQkFBK0JKLEtBQUs7SUFDekMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNDQUFzQyxHQUFHSztBQUN6QyxTQUFTRCw2QkFBNkJLLElBQUk7SUFDdEMsT0FBT04sa0NBQWtDTSxNQUFNO0FBQ25EO0FBQ0FULG9DQUFvQyxHQUFHSTtBQUN2QyxTQUFTRCxrQ0FBa0NNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2hFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGVBQWVFLFlBQVlGLElBQUksQ0FBQyxZQUFZO0lBQzVGO0FBQ0o7QUFDQVQseUNBQXlDLEdBQUdHO0FBQzVDLFNBQVNELDJCQUEyQkQsS0FBSztJQUNyQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxRQUFRWixNQUFNYSxJQUFJO1FBQ2xCLFFBQVFiLE1BQU1jLElBQUk7UUFDbEIsYUFBYWQsTUFBTWUsUUFBUTtJQUMvQjtBQUNKO0FBQ0FoQixrQ0FBa0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9BcGlBcHBsaWNhdGlvbnNJbm5lci5qcz83OTYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcGlBcHBsaWNhdGlvbnNJbm5lclRvSlNPTiA9IGV4cG9ydHMuQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5BcGlBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQXBpQXBwbGljYXRpb25zSW5uZXIgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEFwaUFwcGxpY2F0aW9uc0lubmVyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkFwaUFwcGxpY2F0aW9uc0lubmVyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQXBpQXBwbGljYXRpb25zSW5uZXIgPSBpbnN0YW5jZU9mQXBpQXBwbGljYXRpb25zSW5uZXI7XG5mdW5jdGlvbiBBcGlBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTiA9IEFwaUFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT047XG5mdW5jdGlvbiBBcGlBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ3R5cGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd0eXBlJykgPyB1bmRlZmluZWQgOiBqc29uWyd0eXBlJ10sXG4gICAgICAgICdpc0FjdGl2ZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lzX2FjdGl2ZScpID8gdW5kZWZpbmVkIDoganNvblsnaXNfYWN0aXZlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTlR5cGVkID0gQXBpQXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQXBpQXBwbGljYXRpb25zSW5uZXJUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICd0eXBlJzogdmFsdWUudHlwZSxcbiAgICAgICAgJ2lzX2FjdGl2ZSc6IHZhbHVlLmlzQWN0aXZlLFxuICAgIH07XG59XG5leHBvcnRzLkFwaUFwcGxpY2F0aW9uc0lubmVyVG9KU09OID0gQXBpQXBwbGljYXRpb25zSW5uZXJUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBcGlBcHBsaWNhdGlvbnNJbm5lclRvSlNPTiIsIkFwaUFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT05UeXBlZCIsIkFwaUFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT04iLCJpbnN0YW5jZU9mQXBpQXBwbGljYXRpb25zSW5uZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJuYW1lIiwidHlwZSIsImlzQWN0aXZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiApplicationsInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiResult.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiResult.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ApiResultToJSON = exports.ApiResultFromJSONTyped = exports.ApiResultFromJSON = exports.instanceOfApiResult = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ApiResult interface.\n */ function instanceOfApiResult(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfApiResult = instanceOfApiResult;\nfunction ApiResultFromJSON(json) {\n    return ApiResultFromJSONTyped(json, false);\n}\nexports.ApiResultFromJSON = ApiResultFromJSON;\nfunction ApiResultFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"result\": !(0, runtime_js_1.exists)(json, \"result\") ? undefined : json[\"result\"]\n    };\n}\nexports.ApiResultFromJSONTyped = ApiResultFromJSONTyped;\nfunction ApiResultToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"result\": value.result\n    };\n}\nexports.ApiResultToJSON = ApiResultToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpUmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsOEJBQThCLEdBQUdBLHlCQUF5QixHQUFHQSwyQkFBMkIsR0FBRyxLQUFLO0FBQzFILElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0Ysb0JBQW9CSixLQUFLO0lBQzlCLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiwyQkFBMkIsR0FBR0s7QUFDOUIsU0FBU0Qsa0JBQWtCSyxJQUFJO0lBQzNCLE9BQU9OLHVCQUF1Qk0sTUFBTTtBQUN4QztBQUNBVCx5QkFBeUIsR0FBR0k7QUFDNUIsU0FBU0QsdUJBQXVCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNyRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFVBQVUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxZQUFZRSxZQUFZRixJQUFJLENBQUMsU0FBUztJQUNwRjtBQUNKO0FBQ0FULDhCQUE4QixHQUFHRztBQUNqQyxTQUFTRCxnQkFBZ0JELEtBQUs7SUFDMUIsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxVQUFVQSxNQUFNWSxNQUFNO0lBQzFCO0FBQ0o7QUFDQWIsdUJBQXVCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpUmVzdWx0LmpzP2JjYzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFwaVJlc3VsdFRvSlNPTiA9IGV4cG9ydHMuQXBpUmVzdWx0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQXBpUmVzdWx0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZBcGlSZXN1bHQgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEFwaVJlc3VsdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBcGlSZXN1bHQodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZBcGlSZXN1bHQgPSBpbnN0YW5jZU9mQXBpUmVzdWx0O1xuZnVuY3Rpb24gQXBpUmVzdWx0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBcGlSZXN1bHRGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQXBpUmVzdWx0RnJvbUpTT04gPSBBcGlSZXN1bHRGcm9tSlNPTjtcbmZ1bmN0aW9uIEFwaVJlc3VsdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdyZXN1bHQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdyZXN1bHQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3Jlc3VsdCddLFxuICAgIH07XG59XG5leHBvcnRzLkFwaVJlc3VsdEZyb21KU09OVHlwZWQgPSBBcGlSZXN1bHRGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQXBpUmVzdWx0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncmVzdWx0JzogdmFsdWUucmVzdWx0LFxuICAgIH07XG59XG5leHBvcnRzLkFwaVJlc3VsdFRvSlNPTiA9IEFwaVJlc3VsdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFwaVJlc3VsdFRvSlNPTiIsIkFwaVJlc3VsdEZyb21KU09OVHlwZWQiLCJBcGlSZXN1bHRGcm9tSlNPTiIsImluc3RhbmNlT2ZBcGlSZXN1bHQiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Apis.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Apis.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ApisToJSON = exports.ApisFromJSONTyped = exports.ApisFromJSON = exports.instanceOfApis = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Apis interface.\n */ function instanceOfApis(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfApis = instanceOfApis;\nfunction ApisFromJSON(json) {\n    return ApisFromJSONTyped(json, false);\n}\nexports.ApisFromJSON = ApisFromJSON;\nfunction ApisFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"audience\": !(0, runtime_js_1.exists)(json, \"audience\") ? undefined : json[\"audience\"],\n        \"isManagementApi\": !(0, runtime_js_1.exists)(json, \"is_management_api\") ? undefined : json[\"is_management_api\"]\n    };\n}\nexports.ApisFromJSONTyped = ApisFromJSONTyped;\nfunction ApisToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name,\n        \"audience\": value.audience,\n        \"is_management_api\": value.isManagementApi\n    };\n}\nexports.ApisToJSON = ApisToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUdBLHlCQUF5QixHQUFHQSxvQkFBb0IsR0FBR0Esc0JBQXNCLEdBQUcsS0FBSztBQUN0RyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLGVBQWVKLEtBQUs7SUFDekIsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNCQUFzQixHQUFHSztBQUN6QixTQUFTRCxhQUFhSyxJQUFJO0lBQ3RCLE9BQU9OLGtCQUFrQk0sTUFBTTtBQUNuQztBQUNBVCxvQkFBb0IsR0FBR0k7QUFDdkIsU0FBU0Qsa0JBQWtCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNoRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGNBQWNFLFlBQVlGLElBQUksQ0FBQyxXQUFXO1FBQ3RGLG1CQUFtQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLHVCQUF1QkUsWUFBWUYsSUFBSSxDQUFDLG9CQUFvQjtJQUNuSDtBQUNKO0FBQ0FULHlCQUF5QixHQUFHRztBQUM1QixTQUFTRCxXQUFXRCxLQUFLO0lBQ3JCLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLFFBQVFaLE1BQU1hLElBQUk7UUFDbEIsWUFBWWIsTUFBTWMsUUFBUTtRQUMxQixxQkFBcUJkLE1BQU1lLGVBQWU7SUFDOUM7QUFDSjtBQUNBaEIsa0JBQWtCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBpcy5qcz8xZjIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcGlzVG9KU09OID0gZXhwb3J0cy5BcGlzRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQXBpc0Zyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQXBpcyA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQXBpcyBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBcGlzKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQXBpcyA9IGluc3RhbmNlT2ZBcGlzO1xuZnVuY3Rpb24gQXBpc0Zyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQXBpc0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5BcGlzRnJvbUpTT04gPSBBcGlzRnJvbUpTT047XG5mdW5jdGlvbiBBcGlzRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnYXVkaWVuY2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdhdWRpZW5jZScpID8gdW5kZWZpbmVkIDoganNvblsnYXVkaWVuY2UnXSxcbiAgICAgICAgJ2lzTWFuYWdlbWVudEFwaSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lzX21hbmFnZW1lbnRfYXBpJykgPyB1bmRlZmluZWQgOiBqc29uWydpc19tYW5hZ2VtZW50X2FwaSddLFxuICAgIH07XG59XG5leHBvcnRzLkFwaXNGcm9tSlNPTlR5cGVkID0gQXBpc0Zyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBBcGlzVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnYXVkaWVuY2UnOiB2YWx1ZS5hdWRpZW5jZSxcbiAgICAgICAgJ2lzX21hbmFnZW1lbnRfYXBpJzogdmFsdWUuaXNNYW5hZ2VtZW50QXBpLFxuICAgIH07XG59XG5leHBvcnRzLkFwaXNUb0pTT04gPSBBcGlzVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQXBpc1RvSlNPTiIsIkFwaXNGcm9tSlNPTlR5cGVkIiwiQXBpc0Zyb21KU09OIiwiaW5zdGFuY2VPZkFwaXMiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJuYW1lIiwiYXVkaWVuY2UiLCJpc01hbmFnZW1lbnRBcGkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Apis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Applications.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Applications.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ApplicationsToJSON = exports.ApplicationsFromJSONTyped = exports.ApplicationsFromJSON = exports.instanceOfApplications = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Applications interface.\n */ function instanceOfApplications(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfApplications = instanceOfApplications;\nfunction ApplicationsFromJSON(json) {\n    return ApplicationsFromJSONTyped(json, false);\n}\nexports.ApplicationsFromJSON = ApplicationsFromJSON;\nfunction ApplicationsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"]\n    };\n}\nexports.ApplicationsFromJSONTyped = ApplicationsFromJSONTyped;\nfunction ApplicationsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name,\n        \"type\": value.type\n    };\n}\nexports.ApplicationsToJSON = ApplicationsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQXBwbGljYXRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwwQkFBMEIsR0FBR0EsaUNBQWlDLEdBQUdBLDRCQUE0QixHQUFHQSw4QkFBOEIsR0FBRyxLQUFLO0FBQ3RJLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsdUJBQXVCSixLQUFLO0lBQ2pDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiw4QkFBOEIsR0FBR0s7QUFDakMsU0FBU0QscUJBQXFCSyxJQUFJO0lBQzlCLE9BQU9OLDBCQUEwQk0sTUFBTTtBQUMzQztBQUNBVCw0QkFBNEIsR0FBR0k7QUFDL0IsU0FBU0QsMEJBQTBCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUN4RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO0lBQzlFO0FBQ0o7QUFDQVQsaUNBQWlDLEdBQUdHO0FBQ3BDLFNBQVNELG1CQUFtQkQsS0FBSztJQUM3QixJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxRQUFRWixNQUFNYSxJQUFJO1FBQ2xCLFFBQVFiLE1BQU1jLElBQUk7SUFDdEI7QUFDSjtBQUNBZiwwQkFBMEIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9BcHBsaWNhdGlvbnMuanM/Y2NmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXBwbGljYXRpb25zVG9KU09OID0gZXhwb3J0cy5BcHBsaWNhdGlvbnNGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5BcHBsaWNhdGlvbnNGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkFwcGxpY2F0aW9ucyA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQXBwbGljYXRpb25zIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkFwcGxpY2F0aW9ucyh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkFwcGxpY2F0aW9ucyA9IGluc3RhbmNlT2ZBcHBsaWNhdGlvbnM7XG5mdW5jdGlvbiBBcHBsaWNhdGlvbnNGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEFwcGxpY2F0aW9uc0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5BcHBsaWNhdGlvbnNGcm9tSlNPTiA9IEFwcGxpY2F0aW9uc0Zyb21KU09OO1xuZnVuY3Rpb24gQXBwbGljYXRpb25zRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAndHlwZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3R5cGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3R5cGUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5BcHBsaWNhdGlvbnNGcm9tSlNPTlR5cGVkID0gQXBwbGljYXRpb25zRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEFwcGxpY2F0aW9uc1RvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgIH07XG59XG5leHBvcnRzLkFwcGxpY2F0aW9uc1RvSlNPTiA9IEFwcGxpY2F0aW9uc1RvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkFwcGxpY2F0aW9uc1RvSlNPTiIsIkFwcGxpY2F0aW9uc0Zyb21KU09OVHlwZWQiLCJBcHBsaWNhdGlvbnNGcm9tSlNPTiIsImluc3RhbmNlT2ZBcHBsaWNhdGlvbnMiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJuYW1lIiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Applications.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Category.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Category.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CategoryToJSON = exports.CategoryFromJSONTyped = exports.CategoryFromJSON = exports.instanceOfCategory = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Category interface.\n */ function instanceOfCategory(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCategory = instanceOfCategory;\nfunction CategoryFromJSON(json) {\n    return CategoryFromJSONTyped(json, false);\n}\nexports.CategoryFromJSON = CategoryFromJSON;\nfunction CategoryFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"]\n    };\n}\nexports.CategoryFromJSONTyped = CategoryFromJSONTyped;\nfunction CategoryToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name\n    };\n}\nexports.CategoryToJSON = CategoryToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ2F0ZWdvcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSw2QkFBNkIsR0FBR0Esd0JBQXdCLEdBQUdBLDBCQUEwQixHQUFHLEtBQUs7QUFDdEgsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixtQkFBbUJKLEtBQUs7SUFDN0IsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDBCQUEwQixHQUFHSztBQUM3QixTQUFTRCxpQkFBaUJLLElBQUk7SUFDMUIsT0FBT04sc0JBQXNCTSxNQUFNO0FBQ3ZDO0FBQ0FULHdCQUF3QixHQUFHSTtBQUMzQixTQUFTRCxzQkFBc0JNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3BELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztJQUM5RTtBQUNKO0FBQ0FULDZCQUE2QixHQUFHRztBQUNoQyxTQUFTRCxlQUFlRCxLQUFLO0lBQ3pCLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLFFBQVFaLE1BQU1hLElBQUk7SUFDdEI7QUFDSjtBQUNBZCxzQkFBc0IsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DYXRlZ29yeS5qcz8yZWZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DYXRlZ29yeVRvSlNPTiA9IGV4cG9ydHMuQ2F0ZWdvcnlGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DYXRlZ29yeUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ2F0ZWdvcnkgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENhdGVnb3J5IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNhdGVnb3J5KHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ2F0ZWdvcnkgPSBpbnN0YW5jZU9mQ2F0ZWdvcnk7XG5mdW5jdGlvbiBDYXRlZ29yeUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ2F0ZWdvcnlGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ2F0ZWdvcnlGcm9tSlNPTiA9IENhdGVnb3J5RnJvbUpTT047XG5mdW5jdGlvbiBDYXRlZ29yeUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DYXRlZ29yeUZyb21KU09OVHlwZWQgPSBDYXRlZ29yeUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDYXRlZ29yeVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5DYXRlZ29yeVRvSlNPTiA9IENhdGVnb3J5VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ2F0ZWdvcnlUb0pTT04iLCJDYXRlZ29yeUZyb21KU09OVHlwZWQiLCJDYXRlZ29yeUZyb21KU09OIiwiaW5zdGFuY2VPZkNhdGVnb3J5IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Category.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAccessToken.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAccessToken.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ConnectedAppsAccessTokenToJSON = exports.ConnectedAppsAccessTokenFromJSONTyped = exports.ConnectedAppsAccessTokenFromJSON = exports.instanceOfConnectedAppsAccessToken = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ConnectedAppsAccessToken interface.\n */ function instanceOfConnectedAppsAccessToken(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfConnectedAppsAccessToken = instanceOfConnectedAppsAccessToken;\nfunction ConnectedAppsAccessTokenFromJSON(json) {\n    return ConnectedAppsAccessTokenFromJSONTyped(json, false);\n}\nexports.ConnectedAppsAccessTokenFromJSON = ConnectedAppsAccessTokenFromJSON;\nfunction ConnectedAppsAccessTokenFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"accessToken\": !(0, runtime_js_1.exists)(json, \"access_token\") ? undefined : json[\"access_token\"],\n        \"accessTokenExpiry\": !(0, runtime_js_1.exists)(json, \"access_token_expiry\") ? undefined : json[\"access_token_expiry\"]\n    };\n}\nexports.ConnectedAppsAccessTokenFromJSONTyped = ConnectedAppsAccessTokenFromJSONTyped;\nfunction ConnectedAppsAccessTokenToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"access_token\": value.accessToken,\n        \"access_token_expiry\": value.accessTokenExpiry\n    };\n}\nexports.ConnectedAppsAccessTokenToJSON = ConnectedAppsAccessTokenToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBRyxLQUFLO0FBQ3RMLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsbUNBQW1DSixLQUFLO0lBQzdDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDSyxJQUFJO0lBQzFDLE9BQU9OLHNDQUFzQ00sTUFBTTtBQUN2RDtBQUNBVCx3Q0FBd0MsR0FBR0k7QUFDM0MsU0FBU0Qsc0NBQXNDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNwRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxrQkFBa0JFLFlBQVlGLElBQUksQ0FBQyxlQUFlO1FBQ2pHLHFCQUFxQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLHlCQUF5QkUsWUFBWUYsSUFBSSxDQUFDLHNCQUFzQjtJQUN6SDtBQUNKO0FBQ0FULDZDQUE2QyxHQUFHRztBQUNoRCxTQUFTRCwrQkFBK0JELEtBQUs7SUFDekMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxnQkFBZ0JBLE1BQU1ZLFdBQVc7UUFDakMsdUJBQXVCWixNQUFNYSxpQkFBaUI7SUFDbEQ7QUFDSjtBQUNBZCxzQ0FBc0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Db25uZWN0ZWRBcHBzQWNjZXNzVG9rZW4uanM/OWRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuVG9KU09OID0gZXhwb3J0cy5Db25uZWN0ZWRBcHBzQWNjZXNzVG9rZW5Gcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Db25uZWN0ZWRBcHBzQWNjZXNzVG9rZW5Gcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbiA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbiA9IGluc3RhbmNlT2ZDb25uZWN0ZWRBcHBzQWNjZXNzVG9rZW47XG5mdW5jdGlvbiBDb25uZWN0ZWRBcHBzQWNjZXNzVG9rZW5Gcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIENvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbkZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Db25uZWN0ZWRBcHBzQWNjZXNzVG9rZW5Gcm9tSlNPTiA9IENvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbkZyb21KU09OO1xuZnVuY3Rpb24gQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FjY2Vzc1Rva2VuJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnYWNjZXNzX3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWydhY2Nlc3NfdG9rZW4nXSxcbiAgICAgICAgJ2FjY2Vzc1Rva2VuRXhwaXJ5JzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnYWNjZXNzX3Rva2VuX2V4cGlyeScpID8gdW5kZWZpbmVkIDoganNvblsnYWNjZXNzX3Rva2VuX2V4cGlyeSddLFxuICAgIH07XG59XG5leHBvcnRzLkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbkZyb21KU09OVHlwZWQgPSBDb25uZWN0ZWRBcHBzQWNjZXNzVG9rZW5Gcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnYWNjZXNzX3Rva2VuJzogdmFsdWUuYWNjZXNzVG9rZW4sXG4gICAgICAgICdhY2Nlc3NfdG9rZW5fZXhwaXJ5JzogdmFsdWUuYWNjZXNzVG9rZW5FeHBpcnksXG4gICAgfTtcbn1cbmV4cG9ydHMuQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuVG9KU09OID0gQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuVG9KU09OIiwiQ29ubmVjdGVkQXBwc0FjY2Vzc1Rva2VuRnJvbUpTT05UeXBlZCIsIkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbkZyb21KU09OIiwiaW5zdGFuY2VPZkNvbm5lY3RlZEFwcHNBY2Nlc3NUb2tlbiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJhY2Nlc3NUb2tlbiIsImFjY2Vzc1Rva2VuRXhwaXJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAuthUrl.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAuthUrl.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ConnectedAppsAuthUrlToJSON = exports.ConnectedAppsAuthUrlFromJSONTyped = exports.ConnectedAppsAuthUrlFromJSON = exports.instanceOfConnectedAppsAuthUrl = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ConnectedAppsAuthUrl interface.\n */ function instanceOfConnectedAppsAuthUrl(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfConnectedAppsAuthUrl = instanceOfConnectedAppsAuthUrl;\nfunction ConnectedAppsAuthUrlFromJSON(json) {\n    return ConnectedAppsAuthUrlFromJSONTyped(json, false);\n}\nexports.ConnectedAppsAuthUrlFromJSON = ConnectedAppsAuthUrlFromJSON;\nfunction ConnectedAppsAuthUrlFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"url\": !(0, runtime_js_1.exists)(json, \"url\") ? undefined : json[\"url\"],\n        \"sessionId\": !(0, runtime_js_1.exists)(json, \"session_id\") ? undefined : json[\"session_id\"]\n    };\n}\nexports.ConnectedAppsAuthUrlFromJSONTyped = ConnectedAppsAuthUrlFromJSONTyped;\nfunction ConnectedAppsAuthUrlToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"url\": value.url,\n        \"session_id\": value.sessionId\n    };\n}\nexports.ConnectedAppsAuthUrlToJSON = ConnectedAppsAuthUrlToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ29ubmVjdGVkQXBwc0F1dGhVcmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtDQUFrQyxHQUFHQSx5Q0FBeUMsR0FBR0Esb0NBQW9DLEdBQUdBLHNDQUFzQyxHQUFHLEtBQUs7QUFDdEssSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiwrQkFBK0JKLEtBQUs7SUFDekMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNDQUFzQyxHQUFHSztBQUN6QyxTQUFTRCw2QkFBNkJLLElBQUk7SUFDdEMsT0FBT04sa0NBQWtDTSxNQUFNO0FBQ25EO0FBQ0FULG9DQUFvQyxHQUFHSTtBQUN2QyxTQUFTRCxrQ0FBa0NNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2hFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsT0FBTyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFNBQVNFLFlBQVlGLElBQUksQ0FBQyxNQUFNO1FBQ3ZFLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO0lBQy9GO0FBQ0o7QUFDQVQseUNBQXlDLEdBQUdHO0FBQzVDLFNBQVNELDJCQUEyQkQsS0FBSztJQUNyQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE9BQU9BLE1BQU1ZLEdBQUc7UUFDaEIsY0FBY1osTUFBTWEsU0FBUztJQUNqQztBQUNKO0FBQ0FkLGtDQUFrQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0Nvbm5lY3RlZEFwcHNBdXRoVXJsLmpzP2VjMmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbm5lY3RlZEFwcHNBdXRoVXJsVG9KU09OID0gZXhwb3J0cy5Db25uZWN0ZWRBcHBzQXV0aFVybEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNvbm5lY3RlZEFwcHNBdXRoVXJsRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDb25uZWN0ZWRBcHBzQXV0aFVybCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ29ubmVjdGVkQXBwc0F1dGhVcmwgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ29ubmVjdGVkQXBwc0F1dGhVcmwodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDb25uZWN0ZWRBcHBzQXV0aFVybCA9IGluc3RhbmNlT2ZDb25uZWN0ZWRBcHBzQXV0aFVybDtcbmZ1bmN0aW9uIENvbm5lY3RlZEFwcHNBdXRoVXJsRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDb25uZWN0ZWRBcHBzQXV0aFVybEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Db25uZWN0ZWRBcHBzQXV0aFVybEZyb21KU09OID0gQ29ubmVjdGVkQXBwc0F1dGhVcmxGcm9tSlNPTjtcbmZ1bmN0aW9uIENvbm5lY3RlZEFwcHNBdXRoVXJsRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3VybCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VybCcpID8gdW5kZWZpbmVkIDoganNvblsndXJsJ10sXG4gICAgICAgICdzZXNzaW9uSWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdzZXNzaW9uX2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydzZXNzaW9uX2lkJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQ29ubmVjdGVkQXBwc0F1dGhVcmxGcm9tSlNPTlR5cGVkID0gQ29ubmVjdGVkQXBwc0F1dGhVcmxGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ29ubmVjdGVkQXBwc0F1dGhVcmxUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd1cmwnOiB2YWx1ZS51cmwsXG4gICAgICAgICdzZXNzaW9uX2lkJzogdmFsdWUuc2Vzc2lvbklkLFxuICAgIH07XG59XG5leHBvcnRzLkNvbm5lY3RlZEFwcHNBdXRoVXJsVG9KU09OID0gQ29ubmVjdGVkQXBwc0F1dGhVcmxUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDb25uZWN0ZWRBcHBzQXV0aFVybFRvSlNPTiIsIkNvbm5lY3RlZEFwcHNBdXRoVXJsRnJvbUpTT05UeXBlZCIsIkNvbm5lY3RlZEFwcHNBdXRoVXJsRnJvbUpTT04iLCJpbnN0YW5jZU9mQ29ubmVjdGVkQXBwc0F1dGhVcmwiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwidXJsIiwic2Vzc2lvbklkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAuthUrl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationRequest.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationRequest.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateApplicationRequestToJSON = exports.CreateApplicationRequestFromJSONTyped = exports.CreateApplicationRequestFromJSON = exports.instanceOfCreateApplicationRequest = exports.CreateApplicationRequestTypeEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.CreateApplicationRequestTypeEnum = {\n    Reg: \"reg\",\n    Spa: \"spa\",\n    M2m: \"m2m\"\n};\n/**\n * Check if a given object implements the CreateApplicationRequest interface.\n */ function instanceOfCreateApplicationRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateApplicationRequest = instanceOfCreateApplicationRequest;\nfunction CreateApplicationRequestFromJSON(json) {\n    return CreateApplicationRequestFromJSONTyped(json, false);\n}\nexports.CreateApplicationRequestFromJSON = CreateApplicationRequestFromJSON;\nfunction CreateApplicationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"]\n    };\n}\nexports.CreateApplicationRequestFromJSONTyped = CreateApplicationRequestFromJSONTyped;\nfunction CreateApplicationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"type\": value.type\n    };\n}\nexports.CreateApplicationRequestToJSON = CreateApplicationRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUNqTyxJQUFJTyxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNEUix3Q0FBd0MsR0FBRztJQUN2Q1MsS0FBSztJQUNMQyxLQUFLO0lBQ0xDLEtBQUs7QUFDVDtBQUNBOztDQUVDLEdBQ0QsU0FBU04sbUNBQW1DSixLQUFLO0lBQzdDLElBQUlXLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBWiwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDUyxJQUFJO0lBQzFDLE9BQU9WLHNDQUFzQ1UsTUFBTTtBQUN2RDtBQUNBYix3Q0FBd0MsR0FBR0k7QUFDM0MsU0FBU0Qsc0NBQXNDVSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNwRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdOLGFBQWFTLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxRQUFRLENBQUMsQ0FBQyxHQUFHTixhQUFhUyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87SUFDOUU7QUFDSjtBQUNBYiw2Q0FBNkMsR0FBR0c7QUFDaEQsU0FBU0QsK0JBQStCRCxLQUFLO0lBQ3pDLElBQUlBLFVBQVVjLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlkLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWdCLElBQUk7UUFDbEIsUUFBUWhCLE1BQU1pQixJQUFJO0lBQ3RCO0FBQ0o7QUFDQWxCLHNDQUFzQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdC5qcz8zOWU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RUb0pTT04gPSBleHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0ID0gZXhwb3J0cy5DcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RUeXBlRW51bSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQGV4cG9ydFxuICovXG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdFR5cGVFbnVtID0ge1xuICAgIFJlZzogJ3JlZycsXG4gICAgU3BhOiAnc3BhJyxcbiAgICBNMm06ICdtMm0nXG59O1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0KHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0ID0gaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdDtcbmZ1bmN0aW9uIENyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OID0gQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ3R5cGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd0eXBlJykgPyB1bmRlZmluZWQgOiBqc29uWyd0eXBlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT05UeXBlZCA9IENyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdFRvSlNPTiA9IENyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdFRvSlNPTiIsIkNyZWF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3QiLCJDcmVhdGVBcHBsaWNhdGlvblJlcXVlc3RUeXBlRW51bSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJSZWciLCJTcGEiLCJNMm0iLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJuYW1lIiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponse.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponse.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateApplicationResponseToJSON = exports.CreateApplicationResponseFromJSONTyped = exports.CreateApplicationResponseFromJSON = exports.instanceOfCreateApplicationResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateApplicationResponseApplication_js_1 = __webpack_require__(/*! ./CreateApplicationResponseApplication.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponseApplication.js\");\n/**\n * Check if a given object implements the CreateApplicationResponse interface.\n */ function instanceOfCreateApplicationResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateApplicationResponse = instanceOfCreateApplicationResponse;\nfunction CreateApplicationResponseFromJSON(json) {\n    return CreateApplicationResponseFromJSONTyped(json, false);\n}\nexports.CreateApplicationResponseFromJSON = CreateApplicationResponseFromJSON;\nfunction CreateApplicationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"application\": !(0, runtime_js_1.exists)(json, \"application\") ? undefined : (0, CreateApplicationResponseApplication_js_1.CreateApplicationResponseApplicationFromJSON)(json[\"application\"])\n    };\n}\nexports.CreateApplicationResponseFromJSONTyped = CreateApplicationResponseFromJSONTyped;\nfunction CreateApplicationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"application\": (0, CreateApplicationResponseApplication_js_1.CreateApplicationResponseApplicationToJSON)(value.application)\n    };\n}\nexports.CreateApplicationResponseToJSON = CreateApplicationResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUNBQXVDLEdBQUdBLDhDQUE4QyxHQUFHQSx5Q0FBeUMsR0FBR0EsMkNBQTJDLEdBQUcsS0FBSztBQUMxTCxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyw0Q0FBNENELG1CQUFPQSxDQUFDLCtKQUEyQztBQUNuRzs7Q0FFQyxHQUNELFNBQVNGLG9DQUFvQ0osS0FBSztJQUM5QyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsMkNBQTJDLEdBQUdLO0FBQzlDLFNBQVNELGtDQUFrQ00sSUFBSTtJQUMzQyxPQUFPUCx1Q0FBdUNPLE1BQU07QUFDeEQ7QUFDQVYseUNBQXlDLEdBQUdJO0FBQzVDLFNBQVNELHVDQUF1Q08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDckUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGVBQWUsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVksQ0FBQyxHQUFHSiwwQ0FBMENNLDRDQUE0QyxFQUFFSixJQUFJLENBQUMsY0FBYztJQUMvTDtBQUNKO0FBQ0FWLDhDQUE4QyxHQUFHRztBQUNqRCxTQUFTRCxnQ0FBZ0NELEtBQUs7SUFDMUMsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNYyxJQUFJO1FBQ2xCLFdBQVdkLE1BQU1lLE9BQU87UUFDeEIsZUFBZSxDQUFDLEdBQUdSLDBDQUEwQ1MsMENBQTBDLEVBQUVoQixNQUFNaUIsV0FBVztJQUM5SDtBQUNKO0FBQ0FsQix1Q0FBdUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlLmpzP2QxMWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbl9qc18xID0gcmVxdWlyZShcIi4vQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlID0gaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2U7XG5mdW5jdGlvbiBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTiA9IENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdhcHBsaWNhdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2FwcGxpY2F0aW9uJykgPyB1bmRlZmluZWQgOiAoMCwgQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uX2pzXzEuQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04pKGpzb25bJ2FwcGxpY2F0aW9uJ10pLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ2FwcGxpY2F0aW9uJzogKDAsIENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbl9qc18xLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvblRvSlNPTikodmFsdWUuYXBwbGljYXRpb24pLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VUb0pTT04gPSBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZVRvSlNPTiIsIkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTiIsImNvZGUiLCJtZXNzYWdlIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uVG9KU09OIiwiYXBwbGljYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponseApplication.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponseApplication.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateApplicationResponseApplicationToJSON = exports.CreateApplicationResponseApplicationFromJSONTyped = exports.CreateApplicationResponseApplicationFromJSON = exports.instanceOfCreateApplicationResponseApplication = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateApplicationResponseApplication interface.\n */ function instanceOfCreateApplicationResponseApplication(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateApplicationResponseApplication = instanceOfCreateApplicationResponseApplication;\nfunction CreateApplicationResponseApplicationFromJSON(json) {\n    return CreateApplicationResponseApplicationFromJSONTyped(json, false);\n}\nexports.CreateApplicationResponseApplicationFromJSON = CreateApplicationResponseApplicationFromJSON;\nfunction CreateApplicationResponseApplicationFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"clientId\": !(0, runtime_js_1.exists)(json, \"client_id\") ? undefined : json[\"client_id\"],\n        \"clientSecret\": !(0, runtime_js_1.exists)(json, \"client_secret\") ? undefined : json[\"client_secret\"]\n    };\n}\nexports.CreateApplicationResponseApplicationFromJSONTyped = CreateApplicationResponseApplicationFromJSONTyped;\nfunction CreateApplicationResponseApplicationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"client_id\": value.clientId,\n        \"client_secret\": value.clientSecret\n    };\n}\nexports.CreateApplicationResponseApplicationToJSON = CreateApplicationResponseApplicationToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrREFBa0QsR0FBR0EseURBQXlELEdBQUdBLG9EQUFvRCxHQUFHQSxzREFBc0QsR0FBRyxLQUFLO0FBQ3RPLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsK0NBQStDSixLQUFLO0lBQ3pELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixzREFBc0QsR0FBR0s7QUFDekQsU0FBU0QsNkNBQTZDSyxJQUFJO0lBQ3RELE9BQU9OLGtEQUFrRE0sTUFBTTtBQUNuRTtBQUNBVCxvREFBb0QsR0FBR0k7QUFDdkQsU0FBU0Qsa0RBQWtETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNoRixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxZQUFZLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sZUFBZUUsWUFBWUYsSUFBSSxDQUFDLFlBQVk7UUFDeEYsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO0lBQ3hHO0FBQ0o7QUFDQVQseURBQXlELEdBQUdHO0FBQzVELFNBQVNELDJDQUEyQ0QsS0FBSztJQUNyRCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxhQUFhWixNQUFNYSxRQUFRO1FBQzNCLGlCQUFpQmIsTUFBTWMsWUFBWTtJQUN2QztBQUNKO0FBQ0FmLGtEQUFrRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbi5qcz82ZWUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Ub0pTT04gPSBleHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb24gaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uID0gaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbjtcbmZ1bmN0aW9uIENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OID0gQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ2NsaWVudElkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY2xpZW50X2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydjbGllbnRfaWQnXSxcbiAgICAgICAgJ2NsaWVudFNlY3JldCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NsaWVudF9zZWNyZXQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NsaWVudF9zZWNyZXQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTlR5cGVkID0gQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvblRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdjbGllbnRfaWQnOiB2YWx1ZS5jbGllbnRJZCxcbiAgICAgICAgJ2NsaWVudF9zZWNyZXQnOiB2YWx1ZS5jbGllbnRTZWNyZXQsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uVG9KU09OID0gQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uVG9KU09OIiwiQ3JlYXRlQXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT05UeXBlZCIsIkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZUFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJpZCIsImNsaWVudElkIiwiY2xpZW50U2VjcmV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponseApplication.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryRequest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryRequest.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateCategoryRequestToJSON = exports.CreateCategoryRequestFromJSONTyped = exports.CreateCategoryRequestFromJSON = exports.instanceOfCreateCategoryRequest = exports.CreateCategoryRequestContextEnum = void 0;\n/**\n * @export\n */ exports.CreateCategoryRequestContextEnum = {\n    Org: \"org\",\n    Usr: \"usr\"\n};\n/**\n * Check if a given object implements the CreateCategoryRequest interface.\n */ function instanceOfCreateCategoryRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"context\" in value;\n    return isInstance;\n}\nexports.instanceOfCreateCategoryRequest = instanceOfCreateCategoryRequest;\nfunction CreateCategoryRequestFromJSON(json) {\n    return CreateCategoryRequestFromJSONTyped(json, false);\n}\nexports.CreateCategoryRequestFromJSON = CreateCategoryRequestFromJSON;\nfunction CreateCategoryRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"context\": json[\"context\"]\n    };\n}\nexports.CreateCategoryRequestFromJSONTyped = CreateCategoryRequestFromJSONTyped;\nfunction CreateCategoryRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"context\": value.context\n    };\n}\nexports.CreateCategoryRequestToJSON = CreateCategoryRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUNyTjs7Q0FFQyxHQUNEQSx3Q0FBd0MsR0FBRztJQUN2Q08sS0FBSztJQUNMQyxLQUFLO0FBQ1Q7QUFDQTs7Q0FFQyxHQUNELFNBQVNILGdDQUFnQ0osS0FBSztJQUMxQyxJQUFJUSxhQUFhO0lBQ2pCQSxhQUFhQSxjQUFjLFVBQVVSO0lBQ3JDUSxhQUFhQSxjQUFjLGFBQWFSO0lBQ3hDLE9BQU9RO0FBQ1g7QUFDQVQsdUNBQXVDLEdBQUdLO0FBQzFDLFNBQVNELDhCQUE4Qk0sSUFBSTtJQUN2QyxPQUFPUCxtQ0FBbUNPLE1BQU07QUFDcEQ7QUFDQVYscUNBQXFDLEdBQUdJO0FBQ3hDLFNBQVNELG1DQUFtQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDakUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxJQUFJLENBQUMsT0FBTztRQUNwQixXQUFXQSxJQUFJLENBQUMsVUFBVTtJQUM5QjtBQUNKO0FBQ0FWLDBDQUEwQyxHQUFHRztBQUM3QyxTQUFTRCw0QkFBNEJELEtBQUs7SUFDdEMsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNWSxJQUFJO1FBQ2xCLFdBQVdaLE1BQU1hLE9BQU87SUFDNUI7QUFDSjtBQUNBZCxtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DcmVhdGVDYXRlZ29yeVJlcXVlc3QuanM/NzgxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZUNhdGVnb3J5UmVxdWVzdCA9IGV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0Q29udGV4dEVudW0gPSB2b2lkIDA7XG4vKipcbiAqIEBleHBvcnRcbiAqL1xuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlcXVlc3RDb250ZXh0RW51bSA9IHtcbiAgICBPcmc6ICdvcmcnLFxuICAgIFVzcjogJ3Vzcidcbn07XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZUNhdGVnb3J5UmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJuYW1lXCIgaW4gdmFsdWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJjb250ZXh0XCIgaW4gdmFsdWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlcXVlc3QgPSBpbnN0YW5jZU9mQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0O1xuZnVuY3Rpb24gQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT04gPSBDcmVhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZUNhdGVnb3J5UmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzoganNvblsnbmFtZSddLFxuICAgICAgICAnY29udGV4dCc6IGpzb25bJ2NvbnRleHQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZUNhdGVnb3J5UmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnY29udGV4dCc6IHZhbHVlLmNvbnRleHQsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OID0gQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OIiwiQ3JlYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIkNyZWF0ZUNhdGVnb3J5UmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZUNhdGVnb3J5UmVxdWVzdCIsIkNyZWF0ZUNhdGVnb3J5UmVxdWVzdENvbnRleHRFbnVtIiwiT3JnIiwiVXNyIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwibmFtZSIsImNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateCategoryResponseToJSON = exports.CreateCategoryResponseFromJSONTyped = exports.CreateCategoryResponseFromJSON = exports.instanceOfCreateCategoryResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateCategoryResponseCategory_js_1 = __webpack_require__(/*! ./CreateCategoryResponseCategory.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponseCategory.js\");\n/**\n * Check if a given object implements the CreateCategoryResponse interface.\n */ function instanceOfCreateCategoryResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateCategoryResponse = instanceOfCreateCategoryResponse;\nfunction CreateCategoryResponseFromJSON(json) {\n    return CreateCategoryResponseFromJSONTyped(json, false);\n}\nexports.CreateCategoryResponseFromJSON = CreateCategoryResponseFromJSON;\nfunction CreateCategoryResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"category\": !(0, runtime_js_1.exists)(json, \"category\") ? undefined : (0, CreateCategoryResponseCategory_js_1.CreateCategoryResponseCategoryFromJSON)(json[\"category\"])\n    };\n}\nexports.CreateCategoryResponseFromJSONTyped = CreateCategoryResponseFromJSONTyped;\nfunction CreateCategoryResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"message\": value.message,\n        \"code\": value.code,\n        \"category\": (0, CreateCategoryResponseCategory_js_1.CreateCategoryResponseCategoryToJSON)(value.category)\n    };\n}\nexports.CreateCategoryResponseToJSON = CreateCategoryResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUM5SyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxzQ0FBc0NELG1CQUFPQSxDQUFDLG1KQUFxQztBQUN2Rjs7Q0FFQyxHQUNELFNBQVNGLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQk0sSUFBSTtJQUN4QyxPQUFPUCxvQ0FBb0NPLE1BQU07QUFDckQ7QUFDQVYsc0NBQXNDLEdBQUdJO0FBQ3pDLFNBQVNELG9DQUFvQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDbEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFlBQVksQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxjQUFjRSxZQUFZLENBQUMsR0FBR0osb0NBQW9DTSxzQ0FBc0MsRUFBRUosSUFBSSxDQUFDLFdBQVc7SUFDMUs7QUFDSjtBQUNBViwyQ0FBMkMsR0FBR0c7QUFDOUMsU0FBU0QsNkJBQTZCRCxLQUFLO0lBQ3ZDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBV0EsTUFBTWMsT0FBTztRQUN4QixRQUFRZCxNQUFNZSxJQUFJO1FBQ2xCLFlBQVksQ0FBQyxHQUFHUixvQ0FBb0NTLG9DQUFvQyxFQUFFaEIsTUFBTWlCLFFBQVE7SUFDNUc7QUFDSjtBQUNBbEIsb0NBQW9DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZS5qcz9jNzBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlfanNfMSA9IHJlcXVpcmUoXCIuL0NyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZSA9IGluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlO1xuZnVuY3Rpb24gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT04gPSBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnY2F0ZWdvcnknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjYXRlZ29yeScpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeV9qc18xLkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeUZyb21KU09OKShqc29uWydjYXRlZ29yeSddKSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IENyZWF0ZUNhdGVnb3J5UmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdjYXRlZ29yeSc6ICgwLCBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlfanNfMS5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlUb0pTT04pKHZhbHVlLmNhdGVnb3J5KSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlVG9KU09OID0gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VUb0pTT04iLCJDcmVhdGVDYXRlZ29yeVJlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeV9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT04iLCJtZXNzYWdlIiwiY29kZSIsIkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeVRvSlNPTiIsImNhdGVnb3J5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponseCategory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponseCategory.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateCategoryResponseCategoryToJSON = exports.CreateCategoryResponseCategoryFromJSONTyped = exports.CreateCategoryResponseCategoryFromJSON = exports.instanceOfCreateCategoryResponseCategory = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateCategoryResponseCategory interface.\n */ function instanceOfCreateCategoryResponseCategory(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateCategoryResponseCategory = instanceOfCreateCategoryResponseCategory;\nfunction CreateCategoryResponseCategoryFromJSON(json) {\n    return CreateCategoryResponseCategoryFromJSONTyped(json, false);\n}\nexports.CreateCategoryResponseCategoryFromJSON = CreateCategoryResponseCategoryFromJSON;\nfunction CreateCategoryResponseCategoryFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"]\n    };\n}\nexports.CreateCategoryResponseCategoryFromJSONTyped = CreateCategoryResponseCategoryFromJSONTyped;\nfunction CreateCategoryResponseCategoryToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id\n    };\n}\nexports.CreateCategoryResponseCategoryToJSON = CreateCategoryResponseCategoryToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw0Q0FBNEMsR0FBR0EsbURBQW1ELEdBQUdBLDhDQUE4QyxHQUFHQSxnREFBZ0QsR0FBRyxLQUFLO0FBQzlNLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YseUNBQXlDSixLQUFLO0lBQ25ELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixnREFBZ0QsR0FBR0s7QUFDbkQsU0FBU0QsdUNBQXVDSyxJQUFJO0lBQ2hELE9BQU9OLDRDQUE0Q00sTUFBTTtBQUM3RDtBQUNBVCw4Q0FBOEMsR0FBR0k7QUFDakQsU0FBU0QsNENBQTRDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUMxRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztJQUN4RTtBQUNKO0FBQ0FULG1EQUFtRCxHQUFHRztBQUN0RCxTQUFTRCxxQ0FBcUNELEtBQUs7SUFDL0MsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO0lBQ2xCO0FBQ0o7QUFDQWIsNENBQTRDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5LmpzPzM0MmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeVRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnkgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnkodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnkgPSBpbnN0YW5jZU9mQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5O1xuZnVuY3Rpb24gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT04gPSBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZUNhdGVnb3J5UmVzcG9uc2VDYXRlZ29yeUZyb21KU09OVHlwZWQgPSBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlUb0pTT04gPSBDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlUb0pTT04iLCJDcmVhdGVDYXRlZ29yeVJlc3BvbnNlQ2F0ZWdvcnlGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5RnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlQ2F0ZWdvcnlSZXNwb25zZUNhdGVnb3J5IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponseCategory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateFeatureFlagRequest.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateFeatureFlagRequest.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateFeatureFlagRequestToJSON = exports.CreateFeatureFlagRequestFromJSONTyped = exports.CreateFeatureFlagRequestFromJSON = exports.instanceOfCreateFeatureFlagRequest = exports.CreateFeatureFlagRequestAllowOverrideLevelEnum = exports.CreateFeatureFlagRequestTypeEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.CreateFeatureFlagRequestTypeEnum = {\n    Str: \"str\",\n    Int: \"int\",\n    Bool: \"bool\"\n};\n/**\n * @export\n */ exports.CreateFeatureFlagRequestAllowOverrideLevelEnum = {\n    Env: \"env\",\n    Org: \"org\",\n    Usr: \"usr\"\n};\n/**\n * Check if a given object implements the CreateFeatureFlagRequest interface.\n */ function instanceOfCreateFeatureFlagRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"key\" in value;\n    isInstance = isInstance && \"type\" in value;\n    isInstance = isInstance && \"defaultValue\" in value;\n    return isInstance;\n}\nexports.instanceOfCreateFeatureFlagRequest = instanceOfCreateFeatureFlagRequest;\nfunction CreateFeatureFlagRequestFromJSON(json) {\n    return CreateFeatureFlagRequestFromJSONTyped(json, false);\n}\nexports.CreateFeatureFlagRequestFromJSON = CreateFeatureFlagRequestFromJSON;\nfunction CreateFeatureFlagRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": json[\"key\"],\n        \"type\": json[\"type\"],\n        \"allowOverrideLevel\": !(0, runtime_js_1.exists)(json, \"allow_override_level\") ? undefined : json[\"allow_override_level\"],\n        \"defaultValue\": json[\"default_value\"]\n    };\n}\nexports.CreateFeatureFlagRequestFromJSONTyped = CreateFeatureFlagRequestFromJSONTyped;\nfunction CreateFeatureFlagRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key,\n        \"type\": value.type,\n        \"allow_override_level\": value.allowOverrideLevel,\n        \"default_value\": value.defaultValue\n    };\n}\nexports.CreateFeatureFlagRequestToJSON = CreateFeatureFlagRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBR0Esc0RBQXNELEdBQUdBLHdDQUF3QyxHQUFHLEtBQUs7QUFDMVIsSUFBSVEsZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRFQsd0NBQXdDLEdBQUc7SUFDdkNVLEtBQUs7SUFDTEMsS0FBSztJQUNMQyxNQUFNO0FBQ1Y7QUFDQTs7Q0FFQyxHQUNEWixzREFBc0QsR0FBRztJQUNyRGEsS0FBSztJQUNMQyxLQUFLO0lBQ0xDLEtBQUs7QUFDVDtBQUNBOztDQUVDLEdBQ0QsU0FBU1YsbUNBQW1DSixLQUFLO0lBQzdDLElBQUllLGFBQWE7SUFDakJBLGFBQWFBLGNBQWMsVUFBVWY7SUFDckNlLGFBQWFBLGNBQWMsU0FBU2Y7SUFDcENlLGFBQWFBLGNBQWMsVUFBVWY7SUFDckNlLGFBQWFBLGNBQWMsa0JBQWtCZjtJQUM3QyxPQUFPZTtBQUNYO0FBQ0FoQiwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDYSxJQUFJO0lBQzFDLE9BQU9kLHNDQUFzQ2MsTUFBTTtBQUN2RDtBQUNBakIsd0NBQXdDLEdBQUdJO0FBQzNDLFNBQVNELHNDQUFzQ2MsSUFBSSxFQUFFQyxtQkFBbUI7SUFDcEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxJQUFJLENBQUMsT0FBTztRQUNwQixlQUFlLENBQUMsQ0FBQyxHQUFHVCxhQUFhWSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztRQUMvRixPQUFPQSxJQUFJLENBQUMsTUFBTTtRQUNsQixRQUFRQSxJQUFJLENBQUMsT0FBTztRQUNwQixzQkFBc0IsQ0FBQyxDQUFDLEdBQUdULGFBQWFZLE1BQU0sRUFBRUgsTUFBTSwwQkFBMEJFLFlBQVlGLElBQUksQ0FBQyx1QkFBdUI7UUFDeEgsZ0JBQWdCQSxJQUFJLENBQUMsZ0JBQWdCO0lBQ3pDO0FBQ0o7QUFDQWpCLDZDQUE2QyxHQUFHRztBQUNoRCxTQUFTRCwrQkFBK0JELEtBQUs7SUFDekMsSUFBSUEsVUFBVWtCLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlsQixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1vQixJQUFJO1FBQ2xCLGVBQWVwQixNQUFNcUIsV0FBVztRQUNoQyxPQUFPckIsTUFBTXNCLEdBQUc7UUFDaEIsUUFBUXRCLE1BQU11QixJQUFJO1FBQ2xCLHdCQUF3QnZCLE1BQU13QixrQkFBa0I7UUFDaEQsaUJBQWlCeEIsTUFBTXlCLFlBQVk7SUFDdkM7QUFDSjtBQUNBMUIsc0NBQXNDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0LmpzPzJiMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3QgPSBleHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdEFsbG93T3ZlcnJpZGVMZXZlbEVudW0gPSBleHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFR5cGVFbnVtID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBAZXhwb3J0XG4gKi9cbmV4cG9ydHMuQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0VHlwZUVudW0gPSB7XG4gICAgU3RyOiAnc3RyJyxcbiAgICBJbnQ6ICdpbnQnLFxuICAgIEJvb2w6ICdib29sJ1xufTtcbi8qKlxuICogQGV4cG9ydFxuICovXG5leHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdEFsbG93T3ZlcnJpZGVMZXZlbEVudW0gPSB7XG4gICAgRW52OiAnZW52JyxcbiAgICBPcmc6ICdvcmcnLFxuICAgIFVzcjogJ3Vzcidcbn07XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJuYW1lXCIgaW4gdmFsdWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJrZXlcIiBpbiB2YWx1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcInR5cGVcIiBpbiB2YWx1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImRlZmF1bHRWYWx1ZVwiIGluIHZhbHVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0ID0gaW5zdGFuY2VPZkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdDtcbmZ1bmN0aW9uIENyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdEZyb21KU09OID0gQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGVzY3JpcHRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICdrZXknOiBqc29uWydrZXknXSxcbiAgICAgICAgJ3R5cGUnOiBqc29uWyd0eXBlJ10sXG4gICAgICAgICdhbGxvd092ZXJyaWRlTGV2ZWwnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdhbGxvd19vdmVycmlkZV9sZXZlbCcpID8gdW5kZWZpbmVkIDoganNvblsnYWxsb3dfb3ZlcnJpZGVfbGV2ZWwnXSxcbiAgICAgICAgJ2RlZmF1bHRWYWx1ZSc6IGpzb25bJ2RlZmF1bHRfdmFsdWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgICAgICAnYWxsb3dfb3ZlcnJpZGVfbGV2ZWwnOiB2YWx1ZS5hbGxvd092ZXJyaWRlTGV2ZWwsXG4gICAgICAgICdkZWZhdWx0X3ZhbHVlJzogdmFsdWUuZGVmYXVsdFZhbHVlLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFRvSlNPTiA9IENyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdFRvSlNPTiIsIkNyZWF0ZUZlYXR1cmVGbGFnUmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3QiLCJDcmVhdGVGZWF0dXJlRmxhZ1JlcXVlc3RBbGxvd092ZXJyaWRlTGV2ZWxFbnVtIiwiQ3JlYXRlRmVhdHVyZUZsYWdSZXF1ZXN0VHlwZUVudW0iLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiU3RyIiwiSW50IiwiQm9vbCIsIkVudiIsIk9yZyIsIlVzciIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImtleSIsInR5cGUiLCJhbGxvd092ZXJyaWRlTGV2ZWwiLCJkZWZhdWx0VmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateFeatureFlagRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationRequest.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationRequest.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateOrganizationRequestToJSON = exports.CreateOrganizationRequestFromJSONTyped = exports.CreateOrganizationRequestFromJSON = exports.instanceOfCreateOrganizationRequest = exports.CreateOrganizationRequestFeatureFlagsEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.CreateOrganizationRequestFeatureFlagsEnum = {\n    Str: \"str\",\n    Int: \"int\",\n    Bool: \"bool\"\n};\n/**\n * Check if a given object implements the CreateOrganizationRequest interface.\n */ function instanceOfCreateOrganizationRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    return isInstance;\n}\nexports.instanceOfCreateOrganizationRequest = instanceOfCreateOrganizationRequest;\nfunction CreateOrganizationRequestFromJSON(json) {\n    return CreateOrganizationRequestFromJSONTyped(json, false);\n}\nexports.CreateOrganizationRequestFromJSON = CreateOrganizationRequestFromJSON;\nfunction CreateOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"featureFlags\": !(0, runtime_js_1.exists)(json, \"feature_flags\") ? undefined : json[\"feature_flags\"],\n        \"externalId\": !(0, runtime_js_1.exists)(json, \"external_id\") ? undefined : json[\"external_id\"],\n        \"backgroundColor\": !(0, runtime_js_1.exists)(json, \"background_color\") ? undefined : json[\"background_color\"],\n        \"buttonColor\": !(0, runtime_js_1.exists)(json, \"button_color\") ? undefined : json[\"button_color\"],\n        \"buttonTextColor\": !(0, runtime_js_1.exists)(json, \"button_text_color\") ? undefined : json[\"button_text_color\"],\n        \"linkColor\": !(0, runtime_js_1.exists)(json, \"link_color\") ? undefined : json[\"link_color\"],\n        \"backgroundColorDark\": !(0, runtime_js_1.exists)(json, \"background_color_dark\") ? undefined : json[\"background_color_dark\"],\n        \"buttonColorDark\": !(0, runtime_js_1.exists)(json, \"button_color_dark\") ? undefined : json[\"button_color_dark\"],\n        \"buttonTextColorDark\": !(0, runtime_js_1.exists)(json, \"button_text_color_dark\") ? undefined : json[\"button_text_color_dark\"],\n        \"linkColorDark\": !(0, runtime_js_1.exists)(json, \"link_color_dark\") ? undefined : json[\"link_color_dark\"],\n        \"themeCode\": !(0, runtime_js_1.exists)(json, \"theme_code\") ? undefined : json[\"theme_code\"],\n        \"handle\": !(0, runtime_js_1.exists)(json, \"handle\") ? undefined : json[\"handle\"],\n        \"isAllowRegistrations\": !(0, runtime_js_1.exists)(json, \"is_allow_registrations\") ? undefined : json[\"is_allow_registrations\"]\n    };\n}\nexports.CreateOrganizationRequestFromJSONTyped = CreateOrganizationRequestFromJSONTyped;\nfunction CreateOrganizationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"feature_flags\": value.featureFlags,\n        \"external_id\": value.externalId,\n        \"background_color\": value.backgroundColor,\n        \"button_color\": value.buttonColor,\n        \"button_text_color\": value.buttonTextColor,\n        \"link_color\": value.linkColor,\n        \"background_color_dark\": value.backgroundColorDark,\n        \"button_color_dark\": value.buttonColorDark,\n        \"button_text_color_dark\": value.buttonTextColorDark,\n        \"link_color_dark\": value.linkColorDark,\n        \"theme_code\": value.themeCode,\n        \"handle\": value.handle,\n        \"is_allow_registrations\": value.isAllowRegistrations\n    };\n}\nexports.CreateOrganizationRequestToJSON = CreateOrganizationRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponse.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponse.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateOrganizationResponseToJSON = exports.CreateOrganizationResponseFromJSONTyped = exports.CreateOrganizationResponseFromJSON = exports.instanceOfCreateOrganizationResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateOrganizationResponseOrganization_js_1 = __webpack_require__(/*! ./CreateOrganizationResponseOrganization.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponseOrganization.js\");\n/**\n * Check if a given object implements the CreateOrganizationResponse interface.\n */ function instanceOfCreateOrganizationResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateOrganizationResponse = instanceOfCreateOrganizationResponse;\nfunction CreateOrganizationResponseFromJSON(json) {\n    return CreateOrganizationResponseFromJSONTyped(json, false);\n}\nexports.CreateOrganizationResponseFromJSON = CreateOrganizationResponseFromJSON;\nfunction CreateOrganizationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"organization\": !(0, runtime_js_1.exists)(json, \"organization\") ? undefined : (0, CreateOrganizationResponseOrganization_js_1.CreateOrganizationResponseOrganizationFromJSON)(json[\"organization\"])\n    };\n}\nexports.CreateOrganizationResponseFromJSONTyped = CreateOrganizationResponseFromJSONTyped;\nfunction CreateOrganizationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"message\": value.message,\n        \"code\": value.code,\n        \"organization\": (0, CreateOrganizationResponseOrganization_js_1.CreateOrganizationResponseOrganizationToJSON)(value.organization)\n    };\n}\nexports.CreateOrganizationResponseToJSON = CreateOrganizationResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdDQUF3QyxHQUFHQSwrQ0FBK0MsR0FBR0EsMENBQTBDLEdBQUdBLDRDQUE0QyxHQUFHLEtBQUs7QUFDOUwsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUMsSUFBSUMsOENBQThDRCxtQkFBT0EsQ0FBQyxtS0FBNkM7QUFDdkc7O0NBRUMsR0FDRCxTQUFTRixxQ0FBcUNKLEtBQUs7SUFDL0MsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULDRDQUE0QyxHQUFHSztBQUMvQyxTQUFTRCxtQ0FBbUNNLElBQUk7SUFDNUMsT0FBT1Asd0NBQXdDTyxNQUFNO0FBQ3pEO0FBQ0FWLDBDQUEwQyxHQUFHSTtBQUM3QyxTQUFTRCx3Q0FBd0NPLElBQUksRUFBRUMsbUJBQW1CO0lBQ3RFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxrQkFBa0JFLFlBQVksQ0FBQyxHQUFHSiw0Q0FBNENNLDhDQUE4QyxFQUFFSixJQUFJLENBQUMsZUFBZTtJQUN0TTtBQUNKO0FBQ0FWLCtDQUErQyxHQUFHRztBQUNsRCxTQUFTRCxpQ0FBaUNELEtBQUs7SUFDM0MsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXQSxNQUFNYyxPQUFPO1FBQ3hCLFFBQVFkLE1BQU1lLElBQUk7UUFDbEIsZ0JBQWdCLENBQUMsR0FBR1IsNENBQTRDUyw0Q0FBNEMsRUFBRWhCLE1BQU1pQixZQUFZO0lBQ3BJO0FBQ0o7QUFDQWxCLHdDQUF3QyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlLmpzPzk0ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbl9qc18xID0gcmVxdWlyZShcIi4vQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb24uanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2UgPSBpbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2U7XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VGcm9tSlNPTiA9IENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ29yZ2FuaXphdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ29yZ2FuaXphdGlvbicpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uX2pzXzEuQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTikoanNvblsnb3JnYW5pemF0aW9uJ10pLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ29yZ2FuaXphdGlvbic6ICgwLCBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbl9qc18xLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uVG9KU09OKSh2YWx1ZS5vcmdhbml6YXRpb24pLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlVG9KU09OID0gQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZVRvSlNPTiIsIkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25fanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uRnJvbUpTT04iLCJtZXNzYWdlIiwiY29kZSIsIkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uVG9KU09OIiwib3JnYW5pemF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponseOrganization.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponseOrganization.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateOrganizationResponseOrganizationToJSON = exports.CreateOrganizationResponseOrganizationFromJSONTyped = exports.CreateOrganizationResponseOrganizationFromJSON = exports.instanceOfCreateOrganizationResponseOrganization = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateOrganizationResponseOrganization interface.\n */ function instanceOfCreateOrganizationResponseOrganization(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateOrganizationResponseOrganization = instanceOfCreateOrganizationResponseOrganization;\nfunction CreateOrganizationResponseOrganizationFromJSON(json) {\n    return CreateOrganizationResponseOrganizationFromJSONTyped(json, false);\n}\nexports.CreateOrganizationResponseOrganizationFromJSON = CreateOrganizationResponseOrganizationFromJSON;\nfunction CreateOrganizationResponseOrganizationFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"]\n    };\n}\nexports.CreateOrganizationResponseOrganizationFromJSONTyped = CreateOrganizationResponseOrganizationFromJSONTyped;\nfunction CreateOrganizationResponseOrganizationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code\n    };\n}\nexports.CreateOrganizationResponseOrganizationToJSON = CreateOrganizationResponseOrganizationToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9EQUFvRCxHQUFHQSwyREFBMkQsR0FBR0Esc0RBQXNELEdBQUdBLHdEQUF3RCxHQUFHLEtBQUs7QUFDOU8sSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixpREFBaURKLEtBQUs7SUFDM0QsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHdEQUF3RCxHQUFHSztBQUMzRCxTQUFTRCwrQ0FBK0NLLElBQUk7SUFDeEQsT0FBT04sb0RBQW9ETSxNQUFNO0FBQ3JFO0FBQ0FULHNEQUFzRCxHQUFHSTtBQUN6RCxTQUFTRCxvREFBb0RNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2xGLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO0lBQzlFO0FBQ0o7QUFDQVQsMkRBQTJELEdBQUdHO0FBQzlELFNBQVNELDZDQUE2Q0QsS0FBSztJQUN2RCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7SUFDdEI7QUFDSjtBQUNBYixvREFBb0QsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbi5qcz9jOTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvblRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbkZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb24gPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb24gPSBpbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb247XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbkZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTiA9IENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbkZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uRnJvbUpTT05UeXBlZCA9IENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Ub0pTT04gPSBDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvblRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlT3JnYW5pemF0aW9uVG9KU09OIiwiQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTlR5cGVkIiwiQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2VPcmdhbml6YXRpb25Gcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZU9yZ2FuaXphdGlvbiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponseOrganization.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserPermissionRequest.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserPermissionRequest.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateOrganizationUserPermissionRequestToJSON = exports.CreateOrganizationUserPermissionRequestFromJSONTyped = exports.CreateOrganizationUserPermissionRequestFromJSON = exports.instanceOfCreateOrganizationUserPermissionRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateOrganizationUserPermissionRequest interface.\n */ function instanceOfCreateOrganizationUserPermissionRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateOrganizationUserPermissionRequest = instanceOfCreateOrganizationUserPermissionRequest;\nfunction CreateOrganizationUserPermissionRequestFromJSON(json) {\n    return CreateOrganizationUserPermissionRequestFromJSONTyped(json, false);\n}\nexports.CreateOrganizationUserPermissionRequestFromJSON = CreateOrganizationUserPermissionRequestFromJSON;\nfunction CreateOrganizationUserPermissionRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"permissionId\": !(0, runtime_js_1.exists)(json, \"permission_id\") ? undefined : json[\"permission_id\"]\n    };\n}\nexports.CreateOrganizationUserPermissionRequestFromJSONTyped = CreateOrganizationUserPermissionRequestFromJSONTyped;\nfunction CreateOrganizationUserPermissionRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"permission_id\": value.permissionId\n    };\n}\nexports.CreateOrganizationUserPermissionRequestToJSON = CreateOrganizationUserPermissionRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxREFBcUQsR0FBR0EsNERBQTRELEdBQUdBLHVEQUF1RCxHQUFHQSx5REFBeUQsR0FBRyxLQUFLO0FBQ2xQLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0Ysa0RBQWtESixLQUFLO0lBQzVELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUix5REFBeUQsR0FBR0s7QUFDNUQsU0FBU0QsZ0RBQWdESyxJQUFJO0lBQ3pELE9BQU9OLHFEQUFxRE0sTUFBTTtBQUN0RTtBQUNBVCx1REFBdUQsR0FBR0k7QUFDMUQsU0FBU0QscURBQXFETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNuRixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILGdCQUFnQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLG1CQUFtQkUsWUFBWUYsSUFBSSxDQUFDLGdCQUFnQjtJQUN4RztBQUNKO0FBQ0FULDREQUE0RCxHQUFHRztBQUMvRCxTQUFTRCw4Q0FBOENELEtBQUs7SUFDeEQsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxpQkFBaUJBLE1BQU1ZLFlBQVk7SUFDdkM7QUFDSjtBQUNBYixxREFBcUQsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3QuanM/YTYwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdCA9IGluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3Q7XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIENyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTiA9IENyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OO1xuZnVuY3Rpb24gQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3Blcm1pc3Npb25JZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Blcm1pc3Npb25faWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3Blcm1pc3Npb25faWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTlR5cGVkID0gQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3Blcm1pc3Npb25faWQnOiB2YWx1ZS5wZXJtaXNzaW9uSWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0VG9KU09OID0gQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0VG9KU09OIiwiQ3JlYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT05UeXBlZCIsIkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJwZXJtaXNzaW9uSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserPermissionRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserRoleRequest.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserRoleRequest.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateOrganizationUserRoleRequestToJSON = exports.CreateOrganizationUserRoleRequestFromJSONTyped = exports.CreateOrganizationUserRoleRequestFromJSON = exports.instanceOfCreateOrganizationUserRoleRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateOrganizationUserRoleRequest interface.\n */ function instanceOfCreateOrganizationUserRoleRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateOrganizationUserRoleRequest = instanceOfCreateOrganizationUserRoleRequest;\nfunction CreateOrganizationUserRoleRequestFromJSON(json) {\n    return CreateOrganizationUserRoleRequestFromJSONTyped(json, false);\n}\nexports.CreateOrganizationUserRoleRequestFromJSON = CreateOrganizationUserRoleRequestFromJSON;\nfunction CreateOrganizationUserRoleRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"roleId\": !(0, runtime_js_1.exists)(json, \"role_id\") ? undefined : json[\"role_id\"]\n    };\n}\nexports.CreateOrganizationUserRoleRequestFromJSONTyped = CreateOrganizationUserRoleRequestFromJSONTyped;\nfunction CreateOrganizationUserRoleRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"role_id\": value.roleId\n    };\n}\nexports.CreateOrganizationUserRoleRequestToJSON = CreateOrganizationUserRoleRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQ0FBK0MsR0FBR0Esc0RBQXNELEdBQUdBLGlEQUFpRCxHQUFHQSxtREFBbUQsR0FBRyxLQUFLO0FBQzFOLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNENBQTRDSixLQUFLO0lBQ3RELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixtREFBbUQsR0FBR0s7QUFDdEQsU0FBU0QsMENBQTBDSyxJQUFJO0lBQ25ELE9BQU9OLCtDQUErQ00sTUFBTTtBQUNoRTtBQUNBVCxpREFBaUQsR0FBR0k7QUFDcEQsU0FBU0QsK0NBQStDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM3RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFVBQVUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtJQUN0RjtBQUNKO0FBQ0FULHNEQUFzRCxHQUFHRztBQUN6RCxTQUFTRCx3Q0FBd0NELEtBQUs7SUFDbEQsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXQSxNQUFNWSxNQUFNO0lBQzNCO0FBQ0o7QUFDQWIsK0NBQStDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0LmpzPzhkMGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3QgPSBpbnN0YW5jZU9mQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0O1xuZnVuY3Rpb24gQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0RnJvbUpTT04gPSBDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdyb2xlSWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdyb2xlX2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydyb2xlX2lkJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGVSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IENyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3RUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdyb2xlX2lkJzogdmFsdWUucm9sZUlkLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdFRvSlNPTiA9IENyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdFRvSlNPTiIsIkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVPcmdhbml6YXRpb25Vc2VyUm9sZVJlcXVlc3QiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwicm9sZUlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserRoleRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePermissionRequest.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePermissionRequest.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreatePermissionRequestToJSON = exports.CreatePermissionRequestFromJSONTyped = exports.CreatePermissionRequestFromJSON = exports.instanceOfCreatePermissionRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreatePermissionRequest interface.\n */ function instanceOfCreatePermissionRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreatePermissionRequest = instanceOfCreatePermissionRequest;\nfunction CreatePermissionRequestFromJSON(json) {\n    return CreatePermissionRequestFromJSONTyped(json, false);\n}\nexports.CreatePermissionRequestFromJSON = CreatePermissionRequestFromJSON;\nfunction CreatePermissionRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"]\n    };\n}\nexports.CreatePermissionRequestFromJSONTyped = CreatePermissionRequestFromJSONTyped;\nfunction CreatePermissionRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key\n    };\n}\nexports.CreatePermissionRequestToJSON = CreatePermissionRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUGVybWlzc2lvblJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFDQUFxQyxHQUFHQSw0Q0FBNEMsR0FBR0EsdUNBQXVDLEdBQUdBLHlDQUF5QyxHQUFHLEtBQUs7QUFDbEwsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixrQ0FBa0NKLEtBQUs7SUFDNUMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHlDQUF5QyxHQUFHSztBQUM1QyxTQUFTRCxnQ0FBZ0NLLElBQUk7SUFDekMsT0FBT04scUNBQXFDTSxNQUFNO0FBQ3REO0FBQ0FULHVDQUF1QyxHQUFHSTtBQUMxQyxTQUFTRCxxQ0FBcUNNLElBQUksRUFBRUMsbUJBQW1CO0lBQ25FLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO1FBQy9GLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtJQUMzRTtBQUNKO0FBQ0FULDRDQUE0QyxHQUFHRztBQUMvQyxTQUFTRCw4QkFBOEJELEtBQUs7SUFDeEMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNWSxJQUFJO1FBQ2xCLGVBQWVaLE1BQU1hLFdBQVc7UUFDaEMsT0FBT2IsTUFBTWMsR0FBRztJQUNwQjtBQUNKO0FBQ0FmLHFDQUFxQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0LmpzP2Y3ZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlUGVybWlzc2lvblJlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlUGVybWlzc2lvblJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdCA9IGluc3RhbmNlT2ZDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdDtcbmZ1bmN0aW9uIENyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OID0gQ3JlYXRlUGVybWlzc2lvblJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWyduYW1lJ10sXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2Rlc2NyaXB0aW9uJykgPyB1bmRlZmluZWQgOiBqc29uWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAna2V5JzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAna2V5JykgPyB1bmRlZmluZWQgOiBqc29uWydrZXknXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQgPSBDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQZXJtaXNzaW9uUmVxdWVzdFRvSlNPTiA9IENyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlUGVybWlzc2lvblJlcXVlc3RUb0pTT04iLCJDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVQZXJtaXNzaW9uUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZVBlcm1pc3Npb25SZXF1ZXN0IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePermissionRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyRequest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyRequest.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreatePropertyRequestToJSON = exports.CreatePropertyRequestFromJSONTyped = exports.CreatePropertyRequestFromJSON = exports.instanceOfCreatePropertyRequest = exports.CreatePropertyRequestContextEnum = exports.CreatePropertyRequestTypeEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.CreatePropertyRequestTypeEnum = {\n    SingleLineText: \"single_line_text\",\n    MultiLineText: \"multi_line_text\"\n};\n/**\n * @export\n */ exports.CreatePropertyRequestContextEnum = {\n    Org: \"org\",\n    Usr: \"usr\"\n};\n/**\n * Check if a given object implements the CreatePropertyRequest interface.\n */ function instanceOfCreatePropertyRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"key\" in value;\n    isInstance = isInstance && \"type\" in value;\n    isInstance = isInstance && \"context\" in value;\n    isInstance = isInstance && \"isPrivate\" in value;\n    isInstance = isInstance && \"categoryId\" in value;\n    return isInstance;\n}\nexports.instanceOfCreatePropertyRequest = instanceOfCreatePropertyRequest;\nfunction CreatePropertyRequestFromJSON(json) {\n    return CreatePropertyRequestFromJSONTyped(json, false);\n}\nexports.CreatePropertyRequestFromJSON = CreatePropertyRequestFromJSON;\nfunction CreatePropertyRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": json[\"key\"],\n        \"type\": json[\"type\"],\n        \"context\": json[\"context\"],\n        \"isPrivate\": json[\"is_private\"],\n        \"categoryId\": json[\"category_id\"]\n    };\n}\nexports.CreatePropertyRequestFromJSONTyped = CreatePropertyRequestFromJSONTyped;\nfunction CreatePropertyRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key,\n        \"type\": value.type,\n        \"context\": value.context,\n        \"is_private\": value.isPrivate,\n        \"category_id\": value.categoryId\n    };\n}\nexports.CreatePropertyRequestToJSON = CreatePropertyRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUHJvcGVydHlSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBR0Esd0NBQXdDLEdBQUdBLHFDQUFxQyxHQUFHLEtBQUs7QUFDN1AsSUFBSVEsZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRFQscUNBQXFDLEdBQUc7SUFDcENVLGdCQUFnQjtJQUNoQkMsZUFBZTtBQUNuQjtBQUNBOztDQUVDLEdBQ0RYLHdDQUF3QyxHQUFHO0lBQ3ZDWSxLQUFLO0lBQ0xDLEtBQUs7QUFDVDtBQUNBOztDQUVDLEdBQ0QsU0FBU1IsZ0NBQWdDSixLQUFLO0lBQzFDLElBQUlhLGFBQWE7SUFDakJBLGFBQWFBLGNBQWMsVUFBVWI7SUFDckNhLGFBQWFBLGNBQWMsU0FBU2I7SUFDcENhLGFBQWFBLGNBQWMsVUFBVWI7SUFDckNhLGFBQWFBLGNBQWMsYUFBYWI7SUFDeENhLGFBQWFBLGNBQWMsZUFBZWI7SUFDMUNhLGFBQWFBLGNBQWMsZ0JBQWdCYjtJQUMzQyxPQUFPYTtBQUNYO0FBQ0FkLHVDQUF1QyxHQUFHSztBQUMxQyxTQUFTRCw4QkFBOEJXLElBQUk7SUFDdkMsT0FBT1osbUNBQW1DWSxNQUFNO0FBQ3BEO0FBQ0FmLHFDQUFxQyxHQUFHSTtBQUN4QyxTQUFTRCxtQ0FBbUNZLElBQUksRUFBRUMsbUJBQW1CO0lBQ2pFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsSUFBSSxDQUFDLE9BQU87UUFDcEIsZUFBZSxDQUFDLENBQUMsR0FBR1AsYUFBYVUsTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDL0YsT0FBT0EsSUFBSSxDQUFDLE1BQU07UUFDbEIsUUFBUUEsSUFBSSxDQUFDLE9BQU87UUFDcEIsV0FBV0EsSUFBSSxDQUFDLFVBQVU7UUFDMUIsYUFBYUEsSUFBSSxDQUFDLGFBQWE7UUFDL0IsY0FBY0EsSUFBSSxDQUFDLGNBQWM7SUFDckM7QUFDSjtBQUNBZiwwQ0FBMEMsR0FBR0c7QUFDN0MsU0FBU0QsNEJBQTRCRCxLQUFLO0lBQ3RDLElBQUlBLFVBQVVnQixXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJaEIsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNa0IsSUFBSTtRQUNsQixlQUFlbEIsTUFBTW1CLFdBQVc7UUFDaEMsT0FBT25CLE1BQU1vQixHQUFHO1FBQ2hCLFFBQVFwQixNQUFNcUIsSUFBSTtRQUNsQixXQUFXckIsTUFBTXNCLE9BQU87UUFDeEIsY0FBY3RCLE1BQU11QixTQUFTO1FBQzdCLGVBQWV2QixNQUFNd0IsVUFBVTtJQUNuQztBQUNKO0FBQ0F6QixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9DcmVhdGVQcm9wZXJ0eVJlcXVlc3QuanM/N2ViNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZVByb3BlcnR5UmVxdWVzdCA9IGV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXF1ZXN0Q29udGV4dEVudW0gPSBleHBvcnRzLkNyZWF0ZVByb3BlcnR5UmVxdWVzdFR5cGVFbnVtID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBAZXhwb3J0XG4gKi9cbmV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXF1ZXN0VHlwZUVudW0gPSB7XG4gICAgU2luZ2xlTGluZVRleHQ6ICdzaW5nbGVfbGluZV90ZXh0JyxcbiAgICBNdWx0aUxpbmVUZXh0OiAnbXVsdGlfbGluZV90ZXh0J1xufTtcbi8qKlxuICogQGV4cG9ydFxuICovXG5leHBvcnRzLkNyZWF0ZVByb3BlcnR5UmVxdWVzdENvbnRleHRFbnVtID0ge1xuICAgIE9yZzogJ29yZycsXG4gICAgVXNyOiAndXNyJ1xufTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlUHJvcGVydHlSZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZVByb3BlcnR5UmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcIm5hbWVcIiBpbiB2YWx1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImtleVwiIGluIHZhbHVlO1xuICAgIGlzSW5zdGFuY2UgPSBpc0luc3RhbmNlICYmIFwidHlwZVwiIGluIHZhbHVlO1xuICAgIGlzSW5zdGFuY2UgPSBpc0luc3RhbmNlICYmIFwiY29udGV4dFwiIGluIHZhbHVlO1xuICAgIGlzSW5zdGFuY2UgPSBpc0luc3RhbmNlICYmIFwiaXNQcml2YXRlXCIgaW4gdmFsdWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJjYXRlZ29yeUlkXCIgaW4gdmFsdWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlcXVlc3QgPSBpbnN0YW5jZU9mQ3JlYXRlUHJvcGVydHlSZXF1ZXN0O1xuZnVuY3Rpb24gQ3JlYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT04gPSBDcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVByb3BlcnR5UmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzoganNvblsnbmFtZSddLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdkZXNjcmlwdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgJ2tleSc6IGpzb25bJ2tleSddLFxuICAgICAgICAndHlwZSc6IGpzb25bJ3R5cGUnXSxcbiAgICAgICAgJ2NvbnRleHQnOiBqc29uWydjb250ZXh0J10sXG4gICAgICAgICdpc1ByaXZhdGUnOiBqc29uWydpc19wcml2YXRlJ10sXG4gICAgICAgICdjYXRlZ29yeUlkJzoganNvblsnY2F0ZWdvcnlfaWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gQ3JlYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZVByb3BlcnR5UmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgICAgICAnY29udGV4dCc6IHZhbHVlLmNvbnRleHQsXG4gICAgICAgICdpc19wcml2YXRlJzogdmFsdWUuaXNQcml2YXRlLFxuICAgICAgICAnY2F0ZWdvcnlfaWQnOiB2YWx1ZS5jYXRlZ29yeUlkLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVByb3BlcnR5UmVxdWVzdFRvSlNPTiA9IENyZWF0ZVByb3BlcnR5UmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVByb3BlcnR5UmVxdWVzdFRvSlNPTiIsIkNyZWF0ZVByb3BlcnR5UmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlcXVlc3QiLCJDcmVhdGVQcm9wZXJ0eVJlcXVlc3RDb250ZXh0RW51bSIsIkNyZWF0ZVByb3BlcnR5UmVxdWVzdFR5cGVFbnVtIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIlNpbmdsZUxpbmVUZXh0IiwiTXVsdGlMaW5lVGV4dCIsIk9yZyIsIlVzciIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImtleSIsInR5cGUiLCJjb250ZXh0IiwiaXNQcml2YXRlIiwiY2F0ZWdvcnlJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreatePropertyResponseToJSON = exports.CreatePropertyResponseFromJSONTyped = exports.CreatePropertyResponseFromJSON = exports.instanceOfCreatePropertyResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreatePropertyResponseProperty_js_1 = __webpack_require__(/*! ./CreatePropertyResponseProperty.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponseProperty.js\");\n/**\n * Check if a given object implements the CreatePropertyResponse interface.\n */ function instanceOfCreatePropertyResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreatePropertyResponse = instanceOfCreatePropertyResponse;\nfunction CreatePropertyResponseFromJSON(json) {\n    return CreatePropertyResponseFromJSONTyped(json, false);\n}\nexports.CreatePropertyResponseFromJSON = CreatePropertyResponseFromJSON;\nfunction CreatePropertyResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"property\": !(0, runtime_js_1.exists)(json, \"property\") ? undefined : (0, CreatePropertyResponseProperty_js_1.CreatePropertyResponsePropertyFromJSON)(json[\"property\"])\n    };\n}\nexports.CreatePropertyResponseFromJSONTyped = CreatePropertyResponseFromJSONTyped;\nfunction CreatePropertyResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"message\": value.message,\n        \"code\": value.code,\n        \"property\": (0, CreatePropertyResponseProperty_js_1.CreatePropertyResponsePropertyToJSON)(value.property)\n    };\n}\nexports.CreatePropertyResponseToJSON = CreatePropertyResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUHJvcGVydHlSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUM5SyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxzQ0FBc0NELG1CQUFPQSxDQUFDLG1KQUFxQztBQUN2Rjs7Q0FFQyxHQUNELFNBQVNGLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQk0sSUFBSTtJQUN4QyxPQUFPUCxvQ0FBb0NPLE1BQU07QUFDckQ7QUFDQVYsc0NBQXNDLEdBQUdJO0FBQ3pDLFNBQVNELG9DQUFvQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDbEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFlBQVksQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxjQUFjRSxZQUFZLENBQUMsR0FBR0osb0NBQW9DTSxzQ0FBc0MsRUFBRUosSUFBSSxDQUFDLFdBQVc7SUFDMUs7QUFDSjtBQUNBViwyQ0FBMkMsR0FBR0c7QUFDOUMsU0FBU0QsNkJBQTZCRCxLQUFLO0lBQ3ZDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBV0EsTUFBTWMsT0FBTztRQUN4QixRQUFRZCxNQUFNZSxJQUFJO1FBQ2xCLFlBQVksQ0FBQyxHQUFHUixvQ0FBb0NTLG9DQUFvQyxFQUFFaEIsTUFBTWlCLFFBQVE7SUFDNUc7QUFDSjtBQUNBbEIsb0NBQW9DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUHJvcGVydHlSZXNwb25zZS5qcz85NDhiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlUHJvcGVydHlSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlfanNfMSA9IHJlcXVpcmUoXCIuL0NyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlUHJvcGVydHlSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlUHJvcGVydHlSZXNwb25zZSA9IGluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlO1xuZnVuY3Rpb24gQ3JlYXRlUHJvcGVydHlSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlUHJvcGVydHlSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT04gPSBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAncHJvcGVydHknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwcm9wZXJ0eScpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eV9qc18xLkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eUZyb21KU09OKShqc29uWydwcm9wZXJ0eSddKSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IENyZWF0ZVByb3BlcnR5UmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlUHJvcGVydHlSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdwcm9wZXJ0eSc6ICgwLCBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlfanNfMS5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlUb0pTT04pKHZhbHVlLnByb3BlcnR5KSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlVG9KU09OID0gQ3JlYXRlUHJvcGVydHlSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VUb0pTT04iLCJDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eV9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT04iLCJtZXNzYWdlIiwiY29kZSIsIkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eVRvSlNPTiIsInByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponseProperty.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponseProperty.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreatePropertyResponsePropertyToJSON = exports.CreatePropertyResponsePropertyFromJSONTyped = exports.CreatePropertyResponsePropertyFromJSON = exports.instanceOfCreatePropertyResponseProperty = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreatePropertyResponseProperty interface.\n */ function instanceOfCreatePropertyResponseProperty(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreatePropertyResponseProperty = instanceOfCreatePropertyResponseProperty;\nfunction CreatePropertyResponsePropertyFromJSON(json) {\n    return CreatePropertyResponsePropertyFromJSONTyped(json, false);\n}\nexports.CreatePropertyResponsePropertyFromJSON = CreatePropertyResponsePropertyFromJSON;\nfunction CreatePropertyResponsePropertyFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"]\n    };\n}\nexports.CreatePropertyResponsePropertyFromJSONTyped = CreatePropertyResponsePropertyFromJSONTyped;\nfunction CreatePropertyResponsePropertyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id\n    };\n}\nexports.CreatePropertyResponsePropertyToJSON = CreatePropertyResponsePropertyToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw0Q0FBNEMsR0FBR0EsbURBQW1ELEdBQUdBLDhDQUE4QyxHQUFHQSxnREFBZ0QsR0FBRyxLQUFLO0FBQzlNLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YseUNBQXlDSixLQUFLO0lBQ25ELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixnREFBZ0QsR0FBR0s7QUFDbkQsU0FBU0QsdUNBQXVDSyxJQUFJO0lBQ2hELE9BQU9OLDRDQUE0Q00sTUFBTTtBQUM3RDtBQUNBVCw4Q0FBOEMsR0FBR0k7QUFDakQsU0FBU0QsNENBQTRDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUMxRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztJQUN4RTtBQUNKO0FBQ0FULG1EQUFtRCxHQUFHRztBQUN0RCxTQUFTRCxxQ0FBcUNELEtBQUs7SUFDL0MsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO0lBQ2xCO0FBQ0o7QUFDQWIsNENBQTRDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5LmpzPzEwODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eVRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHkgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHkodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHkgPSBpbnN0YW5jZU9mQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5O1xuZnVuY3Rpb24gQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT04gPSBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVByb3BlcnR5UmVzcG9uc2VQcm9wZXJ0eUZyb21KU09OVHlwZWQgPSBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlUb0pTT04gPSBDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlUb0pTT04iLCJDcmVhdGVQcm9wZXJ0eVJlc3BvbnNlUHJvcGVydHlGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5RnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlUHJvcGVydHlSZXNwb25zZVByb3BlcnR5IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponseProperty.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateRoleRequest.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateRoleRequest.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateRoleRequestToJSON = exports.CreateRoleRequestFromJSONTyped = exports.CreateRoleRequestFromJSON = exports.instanceOfCreateRoleRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateRoleRequest interface.\n */ function instanceOfCreateRoleRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateRoleRequest = instanceOfCreateRoleRequest;\nfunction CreateRoleRequestFromJSON(json) {\n    return CreateRoleRequestFromJSONTyped(json, false);\n}\nexports.CreateRoleRequestFromJSON = CreateRoleRequestFromJSON;\nfunction CreateRoleRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"isDefaultRole\": !(0, runtime_js_1.exists)(json, \"is_default_role\") ? undefined : json[\"is_default_role\"]\n    };\n}\nexports.CreateRoleRequestFromJSONTyped = CreateRoleRequestFromJSONTyped;\nfunction CreateRoleRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key,\n        \"is_default_role\": value.isDefaultRole\n    };\n}\nexports.CreateRoleRequestToJSON = CreateRoleRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlUm9sZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHQSxzQ0FBc0MsR0FBR0EsaUNBQWlDLEdBQUdBLG1DQUFtQyxHQUFHLEtBQUs7QUFDMUosSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiw0QkFBNEJKLEtBQUs7SUFDdEMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLG1DQUFtQyxHQUFHSztBQUN0QyxTQUFTRCwwQkFBMEJLLElBQUk7SUFDbkMsT0FBT04sK0JBQStCTSxNQUFNO0FBQ2hEO0FBQ0FULGlDQUFpQyxHQUFHSTtBQUNwQyxTQUFTRCwrQkFBK0JNLElBQUksRUFBRUMsbUJBQW1CO0lBQzdELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO1FBQy9GLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxpQkFBaUIsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxxQkFBcUJFLFlBQVlGLElBQUksQ0FBQyxrQkFBa0I7SUFDN0c7QUFDSjtBQUNBVCxzQ0FBc0MsR0FBR0c7QUFDekMsU0FBU0Qsd0JBQXdCRCxLQUFLO0lBQ2xDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVksSUFBSTtRQUNsQixlQUFlWixNQUFNYSxXQUFXO1FBQ2hDLE9BQU9iLE1BQU1jLEdBQUc7UUFDaEIsbUJBQW1CZCxNQUFNZSxhQUFhO0lBQzFDO0FBQ0o7QUFDQWhCLCtCQUErQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZVJvbGVSZXF1ZXN0LmpzP2U4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVJvbGVSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZVJvbGVSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVSb2xlUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlUm9sZVJlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlUm9sZVJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVSb2xlUmVxdWVzdCA9IGluc3RhbmNlT2ZDcmVhdGVSb2xlUmVxdWVzdDtcbmZ1bmN0aW9uIENyZWF0ZVJvbGVSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVSb2xlUmVxdWVzdEZyb21KU09OID0gQ3JlYXRlUm9sZVJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVJvbGVSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWyduYW1lJ10sXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2Rlc2NyaXB0aW9uJykgPyB1bmRlZmluZWQgOiBqc29uWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAna2V5JzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAna2V5JykgPyB1bmRlZmluZWQgOiBqc29uWydrZXknXSxcbiAgICAgICAgJ2lzRGVmYXVsdFJvbGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpc19kZWZhdWx0X3JvbGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lzX2RlZmF1bHRfcm9sZSddLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVJvbGVSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IENyZWF0ZVJvbGVSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZVJvbGVSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdkZXNjcmlwdGlvbic6IHZhbHVlLmRlc2NyaXB0aW9uLFxuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgICAgICAnaXNfZGVmYXVsdF9yb2xlJzogdmFsdWUuaXNEZWZhdWx0Um9sZSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVSb2xlUmVxdWVzdFRvSlNPTiA9IENyZWF0ZVJvbGVSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlUm9sZVJlcXVlc3RUb0pTT04iLCJDcmVhdGVSb2xlUmVxdWVzdEZyb21KU09OVHlwZWQiLCJDcmVhdGVSb2xlUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZVJvbGVSZXF1ZXN0IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImtleSIsImlzRGVmYXVsdFJvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateRoleRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponse.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponse.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateSubscriberSuccessResponseToJSON = exports.CreateSubscriberSuccessResponseFromJSONTyped = exports.CreateSubscriberSuccessResponseFromJSON = exports.instanceOfCreateSubscriberSuccessResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateSubscriberSuccessResponseSubscriber_js_1 = __webpack_require__(/*! ./CreateSubscriberSuccessResponseSubscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponseSubscriber.js\");\n/**\n * Check if a given object implements the CreateSubscriberSuccessResponse interface.\n */ function instanceOfCreateSubscriberSuccessResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateSubscriberSuccessResponse = instanceOfCreateSubscriberSuccessResponse;\nfunction CreateSubscriberSuccessResponseFromJSON(json) {\n    return CreateSubscriberSuccessResponseFromJSONTyped(json, false);\n}\nexports.CreateSubscriberSuccessResponseFromJSON = CreateSubscriberSuccessResponseFromJSON;\nfunction CreateSubscriberSuccessResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"subscriber\": !(0, runtime_js_1.exists)(json, \"subscriber\") ? undefined : (0, CreateSubscriberSuccessResponseSubscriber_js_1.CreateSubscriberSuccessResponseSubscriberFromJSON)(json[\"subscriber\"])\n    };\n}\nexports.CreateSubscriberSuccessResponseFromJSONTyped = CreateSubscriberSuccessResponseFromJSONTyped;\nfunction CreateSubscriberSuccessResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"subscriber\": (0, CreateSubscriberSuccessResponseSubscriber_js_1.CreateSubscriberSuccessResponseSubscriberToJSON)(value.subscriber)\n    };\n}\nexports.CreateSubscriberSuccessResponseToJSON = CreateSubscriberSuccessResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNkNBQTZDLEdBQUdBLG9EQUFvRCxHQUFHQSwrQ0FBK0MsR0FBR0EsaURBQWlELEdBQUcsS0FBSztBQUNsTixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxpREFBaURELG1CQUFPQSxDQUFDLHlLQUFnRDtBQUM3Rzs7Q0FFQyxHQUNELFNBQVNGLDBDQUEwQ0osS0FBSztJQUNwRCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsaURBQWlELEdBQUdLO0FBQ3BELFNBQVNELHdDQUF3Q00sSUFBSTtJQUNqRCxPQUFPUCw2Q0FBNkNPLE1BQU07QUFDOUQ7QUFDQVYsK0NBQStDLEdBQUdJO0FBQ2xELFNBQVNELDZDQUE2Q08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDM0UsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxjQUFjLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZLENBQUMsR0FBR0osK0NBQStDTSxpREFBaUQsRUFBRUosSUFBSSxDQUFDLGFBQWE7SUFDdE07QUFDSjtBQUNBVixvREFBb0QsR0FBR0c7QUFDdkQsU0FBU0Qsc0NBQXNDRCxLQUFLO0lBQ2hELElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsY0FBYyxDQUFDLEdBQUdPLCtDQUErQ08sK0NBQStDLEVBQUVkLE1BQU1lLFVBQVU7SUFDdEk7QUFDSjtBQUNBaEIsNkNBQTZDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZS5qcz9mYzVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlcl9qc18xID0gcmVxdWlyZShcIi4vQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXIuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2UgPSBpbnN0YW5jZU9mQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZTtcbmZ1bmN0aW9uIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZUZyb21KU09OID0gQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdzdWJzY3JpYmVyJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnc3Vic2NyaWJlcicpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyX2pzXzEuQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJGcm9tSlNPTikoanNvblsnc3Vic2NyaWJlciddKSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3N1YnNjcmliZXInOiAoMCwgQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJfanNfMS5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlclRvSlNPTikodmFsdWUuc3Vic2NyaWJlciksXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVRvSlNPTiA9IENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlVG9KU09OIiwiQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZUZyb21KU09OVHlwZWQiLCJDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJGcm9tSlNPTiIsIkNyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyVG9KU09OIiwic3Vic2NyaWJlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponseSubscriber.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponseSubscriber.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateSubscriberSuccessResponseSubscriberToJSON = exports.CreateSubscriberSuccessResponseSubscriberFromJSONTyped = exports.CreateSubscriberSuccessResponseSubscriberFromJSON = exports.instanceOfCreateSubscriberSuccessResponseSubscriber = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateSubscriberSuccessResponseSubscriber interface.\n */ function instanceOfCreateSubscriberSuccessResponseSubscriber(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateSubscriberSuccessResponseSubscriber = instanceOfCreateSubscriberSuccessResponseSubscriber;\nfunction CreateSubscriberSuccessResponseSubscriberFromJSON(json) {\n    return CreateSubscriberSuccessResponseSubscriberFromJSONTyped(json, false);\n}\nexports.CreateSubscriberSuccessResponseSubscriberFromJSON = CreateSubscriberSuccessResponseSubscriberFromJSON;\nfunction CreateSubscriberSuccessResponseSubscriberFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"subscriberId\": !(0, runtime_js_1.exists)(json, \"subscriber_id\") ? undefined : json[\"subscriber_id\"]\n    };\n}\nexports.CreateSubscriberSuccessResponseSubscriberFromJSONTyped = CreateSubscriberSuccessResponseSubscriberFromJSONTyped;\nfunction CreateSubscriberSuccessResponseSubscriberToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"subscriber_id\": value.subscriberId\n    };\n}\nexports.CreateSubscriberSuccessResponseSubscriberToJSON = CreateSubscriberSuccessResponseSubscriberToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVEQUF1RCxHQUFHQSw4REFBOEQsR0FBR0EseURBQXlELEdBQUdBLDJEQUEyRCxHQUFHLEtBQUs7QUFDMVAsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixvREFBb0RKLEtBQUs7SUFDOUQsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDJEQUEyRCxHQUFHSztBQUM5RCxTQUFTRCxrREFBa0RLLElBQUk7SUFDM0QsT0FBT04sdURBQXVETSxNQUFNO0FBQ3hFO0FBQ0FULHlEQUF5RCxHQUFHSTtBQUM1RCxTQUFTRCx1REFBdURNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3JGLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO0lBQ3hHO0FBQ0o7QUFDQVQsOERBQThELEdBQUdHO0FBQ2pFLFNBQVNELGdEQUFnREQsS0FBSztJQUMxRCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILGlCQUFpQkEsTUFBTVksWUFBWTtJQUN2QztBQUNKO0FBQ0FiLHVEQUF1RCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyLmpzPzQ4MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyVG9KU09OID0gZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlckZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXIgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlciA9IGluc3RhbmNlT2ZDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlcjtcbmZ1bmN0aW9uIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlckZyb21KU09OID0gQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3N1YnNjcmliZXJJZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3N1YnNjcmliZXJfaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3N1YnNjcmliZXJfaWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlckZyb21KU09OVHlwZWQgPSBDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlckZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3N1YnNjcmliZXJfaWQnOiB2YWx1ZS5zdWJzY3JpYmVySWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJUb0pTT04gPSBDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlclRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVN1YnNjcmliZXJTdWNjZXNzUmVzcG9uc2VTdWJzY3JpYmVyVG9KU09OIiwiQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlU3Vic2NyaWJlclN1Y2Nlc3NSZXNwb25zZVN1YnNjcmliZXJGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVTdWJzY3JpYmVyU3VjY2Vzc1Jlc3BvbnNlU3Vic2NyaWJlciIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJzdWJzY3JpYmVySWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponseSubscriber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequest.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequest.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateUserRequestToJSON = exports.CreateUserRequestFromJSONTyped = exports.CreateUserRequestFromJSON = exports.instanceOfCreateUserRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateUserRequestIdentitiesInner_js_1 = __webpack_require__(/*! ./CreateUserRequestIdentitiesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInner.js\");\nvar CreateUserRequestProfile_js_1 = __webpack_require__(/*! ./CreateUserRequestProfile.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestProfile.js\");\n/**\n * Check if a given object implements the CreateUserRequest interface.\n */ function instanceOfCreateUserRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateUserRequest = instanceOfCreateUserRequest;\nfunction CreateUserRequestFromJSON(json) {\n    return CreateUserRequestFromJSONTyped(json, false);\n}\nexports.CreateUserRequestFromJSON = CreateUserRequestFromJSON;\nfunction CreateUserRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"profile\": !(0, runtime_js_1.exists)(json, \"profile\") ? undefined : (0, CreateUserRequestProfile_js_1.CreateUserRequestProfileFromJSON)(json[\"profile\"]),\n        \"organizationCode\": !(0, runtime_js_1.exists)(json, \"organization_code\") ? undefined : json[\"organization_code\"],\n        \"identities\": !(0, runtime_js_1.exists)(json, \"identities\") ? undefined : json[\"identities\"].map(CreateUserRequestIdentitiesInner_js_1.CreateUserRequestIdentitiesInnerFromJSON)\n    };\n}\nexports.CreateUserRequestFromJSONTyped = CreateUserRequestFromJSONTyped;\nfunction CreateUserRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"profile\": (0, CreateUserRequestProfile_js_1.CreateUserRequestProfileToJSON)(value.profile),\n        \"organization_code\": value.organizationCode,\n        \"identities\": value.identities === undefined ? undefined : value.identities.map(CreateUserRequestIdentitiesInner_js_1.CreateUserRequestIdentitiesInnerToJSON)\n    };\n}\nexports.CreateUserRequestToJSON = CreateUserRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHQSxzQ0FBc0MsR0FBR0EsaUNBQWlDLEdBQUdBLG1DQUFtQyxHQUFHLEtBQUs7QUFDMUosSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUMsSUFBSUMsd0NBQXdDRCxtQkFBT0EsQ0FBQyx1SkFBdUM7QUFDM0YsSUFBSUUsZ0NBQWdDRixtQkFBT0EsQ0FBQyx1SUFBK0I7QUFDM0U7O0NBRUMsR0FDRCxTQUFTRiw0QkFBNEJKLEtBQUs7SUFDdEMsSUFBSVMsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FWLG1DQUFtQyxHQUFHSztBQUN0QyxTQUFTRCwwQkFBMEJPLElBQUk7SUFDbkMsT0FBT1IsK0JBQStCUSxNQUFNO0FBQ2hEO0FBQ0FYLGlDQUFpQyxHQUFHSTtBQUNwQyxTQUFTRCwrQkFBK0JRLElBQUksRUFBRUMsbUJBQW1CO0lBQzdELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBVyxDQUFDLENBQUMsR0FBR0wsYUFBYVEsTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVksQ0FBQyxHQUFHSiw4QkFBOEJNLGdDQUFnQyxFQUFFSixJQUFJLENBQUMsVUFBVTtRQUN2SixvQkFBb0IsQ0FBQyxDQUFDLEdBQUdMLGFBQWFRLE1BQU0sRUFBRUgsTUFBTSx1QkFBdUJFLFlBQVlGLElBQUksQ0FBQyxvQkFBb0I7UUFDaEgsY0FBYyxDQUFDLENBQUMsR0FBR0wsYUFBYVEsTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBYUYsSUFBSSxDQUFDLGFBQWEsQ0FBQ0ssR0FBRyxDQUFDUixzQ0FBc0NTLHdDQUF3QztJQUNwTDtBQUNKO0FBQ0FqQixzQ0FBc0MsR0FBR0c7QUFDekMsU0FBU0Qsd0JBQXdCRCxLQUFLO0lBQ2xDLElBQUlBLFVBQVVZLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlaLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBVyxDQUFDLEdBQUdRLDhCQUE4QlMsOEJBQThCLEVBQUVqQixNQUFNa0IsT0FBTztRQUMxRixxQkFBcUJsQixNQUFNbUIsZ0JBQWdCO1FBQzNDLGNBQWNuQixNQUFNb0IsVUFBVSxLQUFLUixZQUFZQSxZQUFhWixNQUFNb0IsVUFBVSxDQUFDTCxHQUFHLENBQUNSLHNDQUFzQ2Msc0NBQXNDO0lBQ2pLO0FBQ0o7QUFDQXRCLCtCQUErQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZVVzZXJSZXF1ZXN0LmpzPzhhNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5DcmVhdGVVc2VyUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lcl9qc18xID0gcmVxdWlyZShcIi4vQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXIuanNcIik7XG52YXIgQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlX2pzXzEgPSByZXF1aXJlKFwiLi9DcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZVVzZXJSZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNyZWF0ZVVzZXJSZXF1ZXN0KHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3QgPSBpbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3Q7XG5mdW5jdGlvbiBDcmVhdGVVc2VyUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlVXNlclJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RGcm9tSlNPTiA9IENyZWF0ZVVzZXJSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVVc2VyUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdwcm9maWxlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncHJvZmlsZScpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZV9qc18xLkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OKShqc29uWydwcm9maWxlJ10pLFxuICAgICAgICAnb3JnYW5pemF0aW9uQ29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ29yZ2FuaXphdGlvbl9jb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydvcmdhbml6YXRpb25fY29kZSddLFxuICAgICAgICAnaWRlbnRpdGllcyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkZW50aXRpZXMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydpZGVudGl0aWVzJ10ubWFwKENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyX2pzXzEuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IENyZWF0ZVVzZXJSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncHJvZmlsZSc6ICgwLCBDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVfanNfMS5DcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT04pKHZhbHVlLnByb2ZpbGUpLFxuICAgICAgICAnb3JnYW5pemF0aW9uX2NvZGUnOiB2YWx1ZS5vcmdhbml6YXRpb25Db2RlLFxuICAgICAgICAnaWRlbnRpdGllcyc6IHZhbHVlLmlkZW50aXRpZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5pZGVudGl0aWVzLm1hcChDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lcl9qc18xLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyVG9KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RUb0pTT04gPSBDcmVhdGVVc2VyUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVVzZXJSZXF1ZXN0VG9KU09OIiwiQ3JlYXRlVXNlclJlcXVlc3RGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlVXNlclJlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lcl9qc18xIiwiQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVGcm9tSlNPTiIsIm1hcCIsIkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT04iLCJDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT04iLCJwcm9maWxlIiwib3JnYW5pemF0aW9uQ29kZSIsImlkZW50aXRpZXMiLCJDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lclRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInner.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInner.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateUserRequestIdentitiesInnerToJSON = exports.CreateUserRequestIdentitiesInnerFromJSONTyped = exports.CreateUserRequestIdentitiesInnerFromJSON = exports.instanceOfCreateUserRequestIdentitiesInner = exports.CreateUserRequestIdentitiesInnerTypeEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar CreateUserRequestIdentitiesInnerDetails_js_1 = __webpack_require__(/*! ./CreateUserRequestIdentitiesInnerDetails.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInnerDetails.js\");\n/**\n * @export\n */ exports.CreateUserRequestIdentitiesInnerTypeEnum = {\n    Email: \"email\",\n    Username: \"username\"\n};\n/**\n * Check if a given object implements the CreateUserRequestIdentitiesInner interface.\n */ function instanceOfCreateUserRequestIdentitiesInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateUserRequestIdentitiesInner = instanceOfCreateUserRequestIdentitiesInner;\nfunction CreateUserRequestIdentitiesInnerFromJSON(json) {\n    return CreateUserRequestIdentitiesInnerFromJSONTyped(json, false);\n}\nexports.CreateUserRequestIdentitiesInnerFromJSON = CreateUserRequestIdentitiesInnerFromJSON;\nfunction CreateUserRequestIdentitiesInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"details\": !(0, runtime_js_1.exists)(json, \"details\") ? undefined : (0, CreateUserRequestIdentitiesInnerDetails_js_1.CreateUserRequestIdentitiesInnerDetailsFromJSON)(json[\"details\"])\n    };\n}\nexports.CreateUserRequestIdentitiesInnerFromJSONTyped = CreateUserRequestIdentitiesInnerFromJSONTyped;\nfunction CreateUserRequestIdentitiesInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"type\": value.type,\n        \"details\": (0, CreateUserRequestIdentitiesInnerDetails_js_1.CreateUserRequestIdentitiesInnerDetailsToJSON)(value.details)\n    };\n}\nexports.CreateUserRequestIdentitiesInnerToJSON = CreateUserRequestIdentitiesInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDhDQUE4QyxHQUFHQSxxREFBcUQsR0FBR0EsZ0RBQWdELEdBQUdBLGtEQUFrRCxHQUFHQSxnREFBZ0QsR0FBRyxLQUFLO0FBQ3pRLElBQUlPLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLCtDQUErQ0QsbUJBQU9BLENBQUMscUtBQThDO0FBQ3pHOztDQUVDLEdBQ0RSLGdEQUFnRCxHQUFHO0lBQy9DVSxPQUFPO0lBQ1BDLFVBQVU7QUFDZDtBQUNBOztDQUVDLEdBQ0QsU0FBU04sMkNBQTJDSixLQUFLO0lBQ3JELElBQUlXLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBWixrREFBa0QsR0FBR0s7QUFDckQsU0FBU0QseUNBQXlDUyxJQUFJO0lBQ2xELE9BQU9WLDhDQUE4Q1UsTUFBTTtBQUMvRDtBQUNBYixnREFBZ0QsR0FBR0k7QUFDbkQsU0FBU0QsOENBQThDVSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM1RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdOLGFBQWFTLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxXQUFXLENBQUMsQ0FBQyxHQUFHTixhQUFhUyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWSxDQUFDLEdBQUdOLDZDQUE2Q1EsK0NBQStDLEVBQUVKLElBQUksQ0FBQyxVQUFVO0lBQ3pMO0FBQ0o7QUFDQWIscURBQXFELEdBQUdHO0FBQ3hELFNBQVNELHVDQUF1Q0QsS0FBSztJQUNqRCxJQUFJQSxVQUFVYyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJZCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1pQixJQUFJO1FBQ2xCLFdBQVcsQ0FBQyxHQUFHVCw2Q0FBNkNVLDZDQUE2QyxFQUFFbEIsTUFBTW1CLE9BQU87SUFDNUg7QUFDSjtBQUNBcEIsOENBQThDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXIuanM/YTlkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJUb0pTT04gPSBleHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyID0gZXhwb3J0cy5DcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lclR5cGVFbnVtID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc19qc18xID0gcmVxdWlyZShcIi4vQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzLmpzXCIpO1xuLyoqXG4gKiBAZXhwb3J0XG4gKi9cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJUeXBlRW51bSA9IHtcbiAgICBFbWFpbDogJ2VtYWlsJyxcbiAgICBVc2VybmFtZTogJ3VzZXJuYW1lJ1xufTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXIgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lciA9IGluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lcjtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5DcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckZyb21KU09OID0gQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3R5cGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd0eXBlJykgPyB1bmRlZmluZWQgOiBqc29uWyd0eXBlJ10sXG4gICAgICAgICdkZXRhaWxzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGV0YWlscycpID8gdW5kZWZpbmVkIDogKDAsIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc19qc18xLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc0Zyb21KU09OKShqc29uWydkZXRhaWxzJ10pLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZCA9IENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndHlwZSc6IHZhbHVlLnR5cGUsXG4gICAgICAgICdkZXRhaWxzJzogKDAsIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc19qc18xLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc1RvSlNPTikodmFsdWUuZGV0YWlscyksXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJUb0pTT04gPSBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lclRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyVG9KU09OIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJGcm9tSlNPTiIsImluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lciIsIkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyVHlwZUVudW0iLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzX2pzXzEiLCJFbWFpbCIsIlVzZXJuYW1lIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT04iLCJ0eXBlIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzVG9KU09OIiwiZGV0YWlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInnerDetails.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInnerDetails.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateUserRequestIdentitiesInnerDetailsToJSON = exports.CreateUserRequestIdentitiesInnerDetailsFromJSONTyped = exports.CreateUserRequestIdentitiesInnerDetailsFromJSON = exports.instanceOfCreateUserRequestIdentitiesInnerDetails = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateUserRequestIdentitiesInnerDetails interface.\n */ function instanceOfCreateUserRequestIdentitiesInnerDetails(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateUserRequestIdentitiesInnerDetails = instanceOfCreateUserRequestIdentitiesInnerDetails;\nfunction CreateUserRequestIdentitiesInnerDetailsFromJSON(json) {\n    return CreateUserRequestIdentitiesInnerDetailsFromJSONTyped(json, false);\n}\nexports.CreateUserRequestIdentitiesInnerDetailsFromJSON = CreateUserRequestIdentitiesInnerDetailsFromJSON;\nfunction CreateUserRequestIdentitiesInnerDetailsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"phone\": !(0, runtime_js_1.exists)(json, \"phone\") ? undefined : json[\"phone\"],\n        \"username\": !(0, runtime_js_1.exists)(json, \"username\") ? undefined : json[\"username\"]\n    };\n}\nexports.CreateUserRequestIdentitiesInnerDetailsFromJSONTyped = CreateUserRequestIdentitiesInnerDetailsFromJSONTyped;\nfunction CreateUserRequestIdentitiesInnerDetailsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"email\": value.email,\n        \"phone\": value.phone,\n        \"username\": value.username\n    };\n}\nexports.CreateUserRequestIdentitiesInnerDetailsToJSON = CreateUserRequestIdentitiesInnerDetailsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxREFBcUQsR0FBR0EsNERBQTRELEdBQUdBLHVEQUF1RCxHQUFHQSx5REFBeUQsR0FBRyxLQUFLO0FBQ2xQLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0Ysa0RBQWtESixLQUFLO0lBQzVELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUix5REFBeUQsR0FBR0s7QUFDNUQsU0FBU0QsZ0RBQWdESyxJQUFJO0lBQ3pELE9BQU9OLHFEQUFxRE0sTUFBTTtBQUN0RTtBQUNBVCx1REFBdUQsR0FBR0k7QUFDMUQsU0FBU0QscURBQXFETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNuRixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFZRixJQUFJLENBQUMsUUFBUTtRQUM3RSxTQUFTLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sV0FBV0UsWUFBWUYsSUFBSSxDQUFDLFFBQVE7UUFDN0UsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGNBQWNFLFlBQVlGLElBQUksQ0FBQyxXQUFXO0lBQzFGO0FBQ0o7QUFDQVQsNERBQTRELEdBQUdHO0FBQy9ELFNBQVNELDhDQUE4Q0QsS0FBSztJQUN4RCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVNBLE1BQU1ZLEtBQUs7UUFDcEIsU0FBU1osTUFBTWEsS0FBSztRQUNwQixZQUFZYixNQUFNYyxRQUFRO0lBQzlCO0FBQ0o7QUFDQWYscURBQXFELEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzLmpzPzc1N2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc1RvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHMgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlscyBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHModmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHMgPSBpbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzO1xuZnVuY3Rpb24gQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHNGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT04gPSBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHNGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc0Zyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdlbWFpbCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2VtYWlsJykgPyB1bmRlZmluZWQgOiBqc29uWydlbWFpbCddLFxuICAgICAgICAncGhvbmUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwaG9uZScpID8gdW5kZWZpbmVkIDoganNvblsncGhvbmUnXSxcbiAgICAgICAgJ3VzZXJuYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndXNlcm5hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3VzZXJuYW1lJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT05UeXBlZCA9IENyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc0Zyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBDcmVhdGVVc2VyUmVxdWVzdElkZW50aXRpZXNJbm5lckRldGFpbHNUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdlbWFpbCc6IHZhbHVlLmVtYWlsLFxuICAgICAgICAncGhvbmUnOiB2YWx1ZS5waG9uZSxcbiAgICAgICAgJ3VzZXJuYW1lJzogdmFsdWUudXNlcm5hbWUsXG4gICAgfTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzVG9KU09OID0gQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzVG9KU09OIiwiQ3JlYXRlVXNlclJlcXVlc3RJZGVudGl0aWVzSW5uZXJEZXRhaWxzRnJvbUpTT05UeXBlZCIsIkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlsc0Zyb21KU09OIiwiaW5zdGFuY2VPZkNyZWF0ZVVzZXJSZXF1ZXN0SWRlbnRpdGllc0lubmVyRGV0YWlscyIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJlbWFpbCIsInBob25lIiwidXNlcm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInnerDetails.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestProfile.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestProfile.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateUserRequestProfileToJSON = exports.CreateUserRequestProfileFromJSONTyped = exports.CreateUserRequestProfileFromJSON = exports.instanceOfCreateUserRequestProfile = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the CreateUserRequestProfile interface.\n */ function instanceOfCreateUserRequestProfile(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateUserRequestProfile = instanceOfCreateUserRequestProfile;\nfunction CreateUserRequestProfileFromJSON(json) {\n    return CreateUserRequestProfileFromJSONTyped(json, false);\n}\nexports.CreateUserRequestProfileFromJSON = CreateUserRequestProfileFromJSON;\nfunction CreateUserRequestProfileFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"givenName\": !(0, runtime_js_1.exists)(json, \"given_name\") ? undefined : json[\"given_name\"],\n        \"familyName\": !(0, runtime_js_1.exists)(json, \"family_name\") ? undefined : json[\"family_name\"]\n    };\n}\nexports.CreateUserRequestProfileFromJSONTyped = CreateUserRequestProfileFromJSONTyped;\nfunction CreateUserRequestProfileToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"given_name\": value.givenName,\n        \"family_name\": value.familyName\n    };\n}\nexports.CreateUserRequestProfileToJSON = CreateUserRequestProfileToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBRyxLQUFLO0FBQ3RMLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsbUNBQW1DSixLQUFLO0lBQzdDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDSyxJQUFJO0lBQzFDLE9BQU9OLHNDQUFzQ00sTUFBTTtBQUN2RDtBQUNBVCx3Q0FBd0MsR0FBR0k7QUFDM0MsU0FBU0Qsc0NBQXNDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNwRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO1FBQzNGLGNBQWMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO0lBQ2xHO0FBQ0o7QUFDQVQsNkNBQTZDLEdBQUdHO0FBQ2hELFNBQVNELCtCQUErQkQsS0FBSztJQUN6QyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILGNBQWNBLE1BQU1ZLFNBQVM7UUFDN0IsZUFBZVosTUFBTWEsVUFBVTtJQUNuQztBQUNKO0FBQ0FkLHNDQUFzQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0NyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZS5qcz85NDU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT04gPSBleHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGUgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlID0gaW5zdGFuY2VPZkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZTtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OID0gQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlRnJvbUpTT047XG5mdW5jdGlvbiBDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZ2l2ZW5OYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZ2l2ZW5fbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnZ2l2ZW5fbmFtZSddLFxuICAgICAgICAnZmFtaWx5TmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2ZhbWlseV9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydmYW1pbHlfbmFtZSddLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXF1ZXN0UHJvZmlsZUZyb21KU09OVHlwZWQgPSBDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZ2l2ZW5fbmFtZSc6IHZhbHVlLmdpdmVuTmFtZSxcbiAgICAgICAgJ2ZhbWlseV9uYW1lJzogdmFsdWUuZmFtaWx5TmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT04gPSBDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVUb0pTT04iLCJDcmVhdGVVc2VyUmVxdWVzdFByb2ZpbGVGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlRnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlVXNlclJlcXVlc3RQcm9maWxlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImdpdmVuTmFtZSIsImZhbWlseU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestProfile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateUserResponseToJSON = exports.CreateUserResponseFromJSONTyped = exports.CreateUserResponseFromJSON = exports.instanceOfCreateUserResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UserIdentity_js_1 = __webpack_require__(/*! ./UserIdentity.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentity.js\");\n/**\n * Check if a given object implements the CreateUserResponse interface.\n */ function instanceOfCreateUserResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfCreateUserResponse = instanceOfCreateUserResponse;\nfunction CreateUserResponseFromJSON(json) {\n    return CreateUserResponseFromJSONTyped(json, false);\n}\nexports.CreateUserResponseFromJSON = CreateUserResponseFromJSON;\nfunction CreateUserResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"created\": !(0, runtime_js_1.exists)(json, \"created\") ? undefined : json[\"created\"],\n        \"identities\": !(0, runtime_js_1.exists)(json, \"identities\") ? undefined : json[\"identities\"].map(UserIdentity_js_1.UserIdentityFromJSON)\n    };\n}\nexports.CreateUserResponseFromJSONTyped = CreateUserResponseFromJSONTyped;\nfunction CreateUserResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"created\": value.created,\n        \"identities\": value.identities === undefined ? undefined : value.identities.map(UserIdentity_js_1.UserIdentityToJSON)\n    };\n}\nexports.CreateUserResponseToJSON = CreateUserResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLG9CQUFvQkQsbUJBQU9BLENBQUMsK0dBQW1CO0FBQ25EOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCxvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCTSxJQUFJO0lBQ3BDLE9BQU9QLGdDQUFnQ08sTUFBTTtBQUNqRDtBQUNBVixrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsY0FBYyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBYUYsSUFBSSxDQUFDLGFBQWEsQ0FBQ0ksR0FBRyxDQUFDTixrQkFBa0JPLG9CQUFvQjtJQUM1STtBQUNKO0FBQ0FmLHVDQUF1QyxHQUFHRztBQUMxQyxTQUFTRCx5QkFBeUJELEtBQUs7SUFDbkMsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNZSxFQUFFO1FBQ2QsV0FBV2YsTUFBTWdCLE9BQU87UUFDeEIsY0FBY2hCLE1BQU1pQixVQUFVLEtBQUtOLFlBQVlBLFlBQWFYLE1BQU1pQixVQUFVLENBQUNKLEdBQUcsQ0FBQ04sa0JBQWtCVyxrQkFBa0I7SUFDekg7QUFDSjtBQUNBbkIsZ0NBQWdDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvQ3JlYXRlVXNlclJlc3BvbnNlLmpzP2RmMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuQ3JlYXRlVXNlclJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuQ3JlYXRlVXNlclJlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgVXNlcklkZW50aXR5X2pzXzEgPSByZXF1aXJlKFwiLi9Vc2VySWRlbnRpdHkuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENyZWF0ZVVzZXJSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDcmVhdGVVc2VyUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZDcmVhdGVVc2VyUmVzcG9uc2UgPSBpbnN0YW5jZU9mQ3JlYXRlVXNlclJlc3BvbnNlO1xuZnVuY3Rpb24gQ3JlYXRlVXNlclJlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBDcmVhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuQ3JlYXRlVXNlclJlc3BvbnNlRnJvbUpTT04gPSBDcmVhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIENyZWF0ZVVzZXJSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAnY3JlYXRlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NyZWF0ZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NyZWF0ZWQnXSxcbiAgICAgICAgJ2lkZW50aXRpZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZGVudGl0aWVzJykgPyB1bmRlZmluZWQgOiAoanNvblsnaWRlbnRpdGllcyddLm1hcChVc2VySWRlbnRpdHlfanNfMS5Vc2VySWRlbnRpdHlGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkNyZWF0ZVVzZXJSZXNwb25zZUZyb21KU09OVHlwZWQgPSBDcmVhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gQ3JlYXRlVXNlclJlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ2NyZWF0ZWQnOiB2YWx1ZS5jcmVhdGVkLFxuICAgICAgICAnaWRlbnRpdGllcyc6IHZhbHVlLmlkZW50aXRpZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5pZGVudGl0aWVzLm1hcChVc2VySWRlbnRpdHlfanNfMS5Vc2VySWRlbnRpdHlUb0pTT04pKSxcbiAgICB9O1xufVxuZXhwb3J0cy5DcmVhdGVVc2VyUmVzcG9uc2VUb0pTT04gPSBDcmVhdGVVc2VyUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVVc2VyUmVzcG9uc2VUb0pTT04iLCJDcmVhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiQ3JlYXRlVXNlclJlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mQ3JlYXRlVXNlclJlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIlVzZXJJZGVudGl0eV9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiVXNlcklkZW50aXR5RnJvbUpTT04iLCJpZCIsImNyZWF0ZWQiLCJpZGVudGl0aWVzIiwiVXNlcklkZW50aXR5VG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ErrorResponse.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ErrorResponse.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ErrorResponseToJSON = exports.ErrorResponseFromJSONTyped = exports.ErrorResponseFromJSON = exports.instanceOfErrorResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar ModelError_js_1 = __webpack_require__(/*! ./ModelError.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ModelError.js\");\n/**\n * Check if a given object implements the ErrorResponse interface.\n */ function instanceOfErrorResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfErrorResponse = instanceOfErrorResponse;\nfunction ErrorResponseFromJSON(json) {\n    return ErrorResponseFromJSONTyped(json, false);\n}\nexports.ErrorResponseFromJSON = ErrorResponseFromJSON;\nfunction ErrorResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"errors\": !(0, runtime_js_1.exists)(json, \"errors\") ? undefined : json[\"errors\"].map(ModelError_js_1.ModelErrorFromJSON)\n    };\n}\nexports.ErrorResponseFromJSONTyped = ErrorResponseFromJSONTyped;\nfunction ErrorResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"errors\": value.errors === undefined ? undefined : value.errors.map(ModelError_js_1.ModelErrorToJSON)\n    };\n}\nexports.ErrorResponseToJSON = ErrorResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvRXJyb3JSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGtDQUFrQyxHQUFHQSw2QkFBNkIsR0FBR0EsK0JBQStCLEdBQUcsS0FBSztBQUMxSSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxrQkFBa0JELG1CQUFPQSxDQUFDLDJHQUFpQjtBQUMvQzs7Q0FFQyxHQUNELFNBQVNGLHdCQUF3QkosS0FBSztJQUNsQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELHNCQUFzQk0sSUFBSTtJQUMvQixPQUFPUCwyQkFBMkJPLE1BQU07QUFDNUM7QUFDQVYsNkJBQTZCLEdBQUdJO0FBQ2hDLFNBQVNELDJCQUEyQk8sSUFBSSxFQUFFQyxtQkFBbUI7SUFDekQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxVQUFVLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sWUFBWUUsWUFBYUYsSUFBSSxDQUFDLFNBQVMsQ0FBQ0ksR0FBRyxDQUFDTixnQkFBZ0JPLGtCQUFrQjtJQUM1SDtBQUNKO0FBQ0FmLGtDQUFrQyxHQUFHRztBQUNyQyxTQUFTRCxvQkFBb0JELEtBQUs7SUFDOUIsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxVQUFVQSxNQUFNZSxNQUFNLEtBQUtKLFlBQVlBLFlBQWFYLE1BQU1lLE1BQU0sQ0FBQ0YsR0FBRyxDQUFDTixnQkFBZ0JTLGdCQUFnQjtJQUN6RztBQUNKO0FBQ0FqQiwyQkFBMkIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9FcnJvclJlc3BvbnNlLmpzPzQ2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVycm9yUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5FcnJvclJlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZFcnJvclJlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIE1vZGVsRXJyb3JfanNfMSA9IHJlcXVpcmUoXCIuL01vZGVsRXJyb3IuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEVycm9yUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mRXJyb3JSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkVycm9yUmVzcG9uc2UgPSBpbnN0YW5jZU9mRXJyb3JSZXNwb25zZTtcbmZ1bmN0aW9uIEVycm9yUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuRXJyb3JSZXNwb25zZUZyb21KU09OID0gRXJyb3JSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gRXJyb3JSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdlcnJvcnMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdlcnJvcnMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydlcnJvcnMnXS5tYXAoTW9kZWxFcnJvcl9qc18xLk1vZGVsRXJyb3JGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gRXJyb3JSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBFcnJvclJlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZXJyb3JzJzogdmFsdWUuZXJyb3JzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAodmFsdWUuZXJyb3JzLm1hcChNb2RlbEVycm9yX2pzXzEuTW9kZWxFcnJvclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkVycm9yUmVzcG9uc2VUb0pTT04gPSBFcnJvclJlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRXJyb3JSZXNwb25zZVRvSlNPTiIsIkVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiRXJyb3JSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkVycm9yUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiTW9kZWxFcnJvcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiTW9kZWxFcnJvckZyb21KU09OIiwiZXJyb3JzIiwiTW9kZWxFcnJvclRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ErrorResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetApplicationResponseToJSON = exports.GetApplicationResponseFromJSONTyped = exports.GetApplicationResponseFromJSON = exports.instanceOfGetApplicationResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar GetApplicationResponseApplication_js_1 = __webpack_require__(/*! ./GetApplicationResponseApplication.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponseApplication.js\");\n/**\n * Check if a given object implements the GetApplicationResponse interface.\n */ function instanceOfGetApplicationResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetApplicationResponse = instanceOfGetApplicationResponse;\nfunction GetApplicationResponseFromJSON(json) {\n    return GetApplicationResponseFromJSONTyped(json, false);\n}\nexports.GetApplicationResponseFromJSON = GetApplicationResponseFromJSON;\nfunction GetApplicationResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"application\": !(0, runtime_js_1.exists)(json, \"application\") ? undefined : (0, GetApplicationResponseApplication_js_1.GetApplicationResponseApplicationFromJSON)(json[\"application\"])\n    };\n}\nexports.GetApplicationResponseFromJSONTyped = GetApplicationResponseFromJSONTyped;\nfunction GetApplicationResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"application\": (0, GetApplicationResponseApplication_js_1.GetApplicationResponseApplicationToJSON)(value.application)\n    };\n}\nexports.GetApplicationResponseToJSON = GetApplicationResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0QXBwbGljYXRpb25SZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUM5SyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyx5Q0FBeUNELG1CQUFPQSxDQUFDLHlKQUF3QztBQUM3Rjs7Q0FFQyxHQUNELFNBQVNGLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQk0sSUFBSTtJQUN4QyxPQUFPUCxvQ0FBb0NPLE1BQU07QUFDckQ7QUFDQVYsc0NBQXNDLEdBQUdJO0FBQ3pDLFNBQVNELG9DQUFvQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDbEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGVBQWUsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVksQ0FBQyxHQUFHSix1Q0FBdUNNLHlDQUF5QyxFQUFFSixJQUFJLENBQUMsY0FBYztJQUN6TDtBQUNKO0FBQ0FWLDJDQUEyQyxHQUFHRztBQUM5QyxTQUFTRCw2QkFBNkJELEtBQUs7SUFDdkMsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNYyxJQUFJO1FBQ2xCLFdBQVdkLE1BQU1lLE9BQU87UUFDeEIsZUFBZSxDQUFDLEdBQUdSLHVDQUF1Q1MsdUNBQXVDLEVBQUVoQixNQUFNaUIsV0FBVztJQUN4SDtBQUNKO0FBQ0FsQixvQ0FBb0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRBcHBsaWNhdGlvblJlc3BvbnNlLmpzPzk2ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZHZXRBcHBsaWNhdGlvblJlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIEdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbl9qc18xID0gcmVxdWlyZShcIi4vR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBHZXRBcHBsaWNhdGlvblJlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldEFwcGxpY2F0aW9uUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRBcHBsaWNhdGlvblJlc3BvbnNlID0gaW5zdGFuY2VPZkdldEFwcGxpY2F0aW9uUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRBcHBsaWNhdGlvblJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTiA9IEdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdhcHBsaWNhdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2FwcGxpY2F0aW9uJykgPyB1bmRlZmluZWQgOiAoMCwgR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uX2pzXzEuR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04pKGpzb25bJ2FwcGxpY2F0aW9uJ10pLFxuICAgIH07XG59XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0QXBwbGljYXRpb25SZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRBcHBsaWNhdGlvblJlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ2FwcGxpY2F0aW9uJzogKDAsIEdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbl9qc18xLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvblRvSlNPTikodmFsdWUuYXBwbGljYXRpb24pLFxuICAgIH07XG59XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VUb0pTT04gPSBHZXRBcHBsaWNhdGlvblJlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2V0QXBwbGljYXRpb25SZXNwb25zZVRvSlNPTiIsIkdldEFwcGxpY2F0aW9uUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiR2V0QXBwbGljYXRpb25SZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkdldEFwcGxpY2F0aW9uUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTiIsImNvZGUiLCJtZXNzYWdlIiwiR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uVG9KU09OIiwiYXBwbGljYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponseApplication.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponseApplication.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetApplicationResponseApplicationToJSON = exports.GetApplicationResponseApplicationFromJSONTyped = exports.GetApplicationResponseApplicationFromJSON = exports.instanceOfGetApplicationResponseApplication = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the GetApplicationResponseApplication interface.\n */ function instanceOfGetApplicationResponseApplication(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetApplicationResponseApplication = instanceOfGetApplicationResponseApplication;\nfunction GetApplicationResponseApplicationFromJSON(json) {\n    return GetApplicationResponseApplicationFromJSONTyped(json, false);\n}\nexports.GetApplicationResponseApplicationFromJSON = GetApplicationResponseApplicationFromJSON;\nfunction GetApplicationResponseApplicationFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"clientId\": !(0, runtime_js_1.exists)(json, \"client_id\") ? undefined : json[\"client_id\"],\n        \"clientSecret\": !(0, runtime_js_1.exists)(json, \"client_secret\") ? undefined : json[\"client_secret\"]\n    };\n}\nexports.GetApplicationResponseApplicationFromJSONTyped = GetApplicationResponseApplicationFromJSONTyped;\nfunction GetApplicationResponseApplicationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name,\n        \"type\": value.type,\n        \"client_id\": value.clientId,\n        \"client_secret\": value.clientSecret\n    };\n}\nexports.GetApplicationResponseApplicationToJSON = GetApplicationResponseApplicationToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQ0FBK0MsR0FBR0Esc0RBQXNELEdBQUdBLGlEQUFpRCxHQUFHQSxtREFBbUQsR0FBRyxLQUFLO0FBQzFOLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNENBQTRDSixLQUFLO0lBQ3RELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixtREFBbUQsR0FBR0s7QUFDdEQsU0FBU0QsMENBQTBDSyxJQUFJO0lBQ25ELE9BQU9OLCtDQUErQ00sTUFBTTtBQUNoRTtBQUNBVCxpREFBaUQsR0FBR0k7QUFDcEQsU0FBU0QsK0NBQStDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM3RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFlBQVksQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtRQUN4RixnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxtQkFBbUJFLFlBQVlGLElBQUksQ0FBQyxnQkFBZ0I7SUFDeEc7QUFDSjtBQUNBVCxzREFBc0QsR0FBR0c7QUFDekQsU0FBU0Qsd0NBQXdDRCxLQUFLO0lBQ2xELElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLFFBQVFaLE1BQU1hLElBQUk7UUFDbEIsUUFBUWIsTUFBTWMsSUFBSTtRQUNsQixhQUFhZCxNQUFNZSxRQUFRO1FBQzNCLGlCQUFpQmYsTUFBTWdCLFlBQVk7SUFDdkM7QUFDSjtBQUNBakIsK0NBQStDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uLmpzPzg4MjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvblRvSlNPTiA9IGV4cG9ydHMuR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb24gPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb24odmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb24gPSBpbnN0YW5jZU9mR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uO1xuZnVuY3Rpb24gR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04gPSBHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTjtcbmZ1bmN0aW9uIEdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ3R5cGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd0eXBlJykgPyB1bmRlZmluZWQgOiBqc29uWyd0eXBlJ10sXG4gICAgICAgICdjbGllbnRJZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NsaWVudF9pZCcpID8gdW5kZWZpbmVkIDoganNvblsnY2xpZW50X2lkJ10sXG4gICAgICAgICdjbGllbnRTZWNyZXQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjbGllbnRfc2VjcmV0JykgPyB1bmRlZmluZWQgOiBqc29uWydjbGllbnRfc2VjcmV0J10sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT05UeXBlZCA9IEdldEFwcGxpY2F0aW9uUmVzcG9uc2VBcHBsaWNhdGlvbkZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Ub0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICd0eXBlJzogdmFsdWUudHlwZSxcbiAgICAgICAgJ2NsaWVudF9pZCc6IHZhbHVlLmNsaWVudElkLFxuICAgICAgICAnY2xpZW50X3NlY3JldCc6IHZhbHVlLmNsaWVudFNlY3JldCxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Ub0pTT04gPSBHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Ub0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Ub0pTT04iLCJHZXRBcHBsaWNhdGlvblJlc3BvbnNlQXBwbGljYXRpb25Gcm9tSlNPTlR5cGVkIiwiR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0QXBwbGljYXRpb25SZXNwb25zZUFwcGxpY2F0aW9uIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwibmFtZSIsInR5cGUiLCJjbGllbnRJZCIsImNsaWVudFNlY3JldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponseApplication.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationsResponse.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationsResponse.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetApplicationsResponseToJSON = exports.GetApplicationsResponseFromJSONTyped = exports.GetApplicationsResponseFromJSON = exports.instanceOfGetApplicationsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Applications_js_1 = __webpack_require__(/*! ./Applications.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Applications.js\");\n/**\n * Check if a given object implements the GetApplicationsResponse interface.\n */ function instanceOfGetApplicationsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetApplicationsResponse = instanceOfGetApplicationsResponse;\nfunction GetApplicationsResponseFromJSON(json) {\n    return GetApplicationsResponseFromJSONTyped(json, false);\n}\nexports.GetApplicationsResponseFromJSON = GetApplicationsResponseFromJSON;\nfunction GetApplicationsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"applications\": !(0, runtime_js_1.exists)(json, \"applications\") ? undefined : json[\"applications\"].map(Applications_js_1.ApplicationsFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetApplicationsResponseFromJSONTyped = GetApplicationsResponseFromJSONTyped;\nfunction GetApplicationsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"applications\": value.applications === undefined ? undefined : value.applications.map(Applications_js_1.ApplicationsToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetApplicationsResponseToJSON = GetApplicationsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0QXBwbGljYXRpb25zUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFDQUFxQyxHQUFHQSw0Q0FBNEMsR0FBR0EsdUNBQXVDLEdBQUdBLHlDQUF5QyxHQUFHLEtBQUs7QUFDbEwsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUMsSUFBSUMsb0JBQW9CRCxtQkFBT0EsQ0FBQywrR0FBbUI7QUFDbkQ7O0NBRUMsR0FDRCxTQUFTRixrQ0FBa0NKLEtBQUs7SUFDNUMsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULHlDQUF5QyxHQUFHSztBQUM1QyxTQUFTRCxnQ0FBZ0NNLElBQUk7SUFDekMsT0FBT1AscUNBQXFDTyxNQUFNO0FBQ3REO0FBQ0FWLHVDQUF1QyxHQUFHSTtBQUMxQyxTQUFTRCxxQ0FBcUNPLElBQUksRUFBRUMsbUJBQW1CO0lBQ25FLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFdBQVcsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxrQkFBa0JFLFlBQWFGLElBQUksQ0FBQyxlQUFlLENBQUNJLEdBQUcsQ0FBQ04sa0JBQWtCTyxvQkFBb0I7UUFDOUksYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBViw0Q0FBNEMsR0FBR0c7QUFDL0MsU0FBU0QsOEJBQThCRCxLQUFLO0lBQ3hDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixnQkFBZ0JoQixNQUFNaUIsWUFBWSxLQUFLTixZQUFZQSxZQUFhWCxNQUFNaUIsWUFBWSxDQUFDSixHQUFHLENBQUNOLGtCQUFrQlcsa0JBQWtCO1FBQzNILGNBQWNsQixNQUFNbUIsU0FBUztJQUNqQztBQUNKO0FBQ0FwQixxQ0FBcUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRBcHBsaWNhdGlvbnNSZXNwb25zZS5qcz81NTdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRBcHBsaWNhdGlvbnNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuR2V0QXBwbGljYXRpb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRBcHBsaWNhdGlvbnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0QXBwbGljYXRpb25zUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgQXBwbGljYXRpb25zX2pzXzEgPSByZXF1aXJlKFwiLi9BcHBsaWNhdGlvbnMuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mR2V0QXBwbGljYXRpb25zUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0QXBwbGljYXRpb25zUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRBcHBsaWNhdGlvbnNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gR2V0QXBwbGljYXRpb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0QXBwbGljYXRpb25zUmVzcG9uc2VGcm9tSlNPTiA9IEdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBHZXRBcHBsaWNhdGlvbnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ2FwcGxpY2F0aW9ucyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2FwcGxpY2F0aW9ucycpID8gdW5kZWZpbmVkIDogKGpzb25bJ2FwcGxpY2F0aW9ucyddLm1hcChBcHBsaWNhdGlvbnNfanNfMS5BcHBsaWNhdGlvbnNGcm9tSlNPTikpLFxuICAgICAgICAnbmV4dFRva2VuJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmV4dF90b2tlbicpID8gdW5kZWZpbmVkIDoganNvblsnbmV4dF90b2tlbiddLFxuICAgIH07XG59XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IEdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ2FwcGxpY2F0aW9ucyc6IHZhbHVlLmFwcGxpY2F0aW9ucyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLmFwcGxpY2F0aW9ucy5tYXAoQXBwbGljYXRpb25zX2pzXzEuQXBwbGljYXRpb25zVG9KU09OKSksXG4gICAgICAgICduZXh0X3Rva2VuJzogdmFsdWUubmV4dFRva2VuLFxuICAgIH07XG59XG5leHBvcnRzLkdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlVG9KU09OID0gR2V0QXBwbGljYXRpb25zUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRBcHBsaWNhdGlvbnNSZXNwb25zZVRvSlNPTiIsIkdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkdldEFwcGxpY2F0aW9uc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0QXBwbGljYXRpb25zUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQXBwbGljYXRpb25zX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJBcHBsaWNhdGlvbnNGcm9tSlNPTiIsImNvZGUiLCJtZXNzYWdlIiwiYXBwbGljYXRpb25zIiwiQXBwbGljYXRpb25zVG9KU09OIiwibmV4dFRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetCategoriesResponse.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetCategoriesResponse.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetCategoriesResponseToJSON = exports.GetCategoriesResponseFromJSONTyped = exports.GetCategoriesResponseFromJSON = exports.instanceOfGetCategoriesResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Category_js_1 = __webpack_require__(/*! ./Category.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Category.js\");\n/**\n * Check if a given object implements the GetCategoriesResponse interface.\n */ function instanceOfGetCategoriesResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetCategoriesResponse = instanceOfGetCategoriesResponse;\nfunction GetCategoriesResponseFromJSON(json) {\n    return GetCategoriesResponseFromJSONTyped(json, false);\n}\nexports.GetCategoriesResponseFromJSON = GetCategoriesResponseFromJSON;\nfunction GetCategoriesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"categories\": !(0, runtime_js_1.exists)(json, \"categories\") ? undefined : json[\"categories\"].map(Category_js_1.CategoryFromJSON),\n        \"hasMore\": !(0, runtime_js_1.exists)(json, \"has_more\") ? undefined : json[\"has_more\"]\n    };\n}\nexports.GetCategoriesResponseFromJSONTyped = GetCategoriesResponseFromJSONTyped;\nfunction GetCategoriesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"categories\": value.categories === undefined ? undefined : value.categories.map(Category_js_1.CategoryToJSON),\n        \"has_more\": value.hasMore\n    };\n}\nexports.GetCategoriesResponseToJSON = GetCategoriesResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLGdCQUFnQkQsbUJBQU9BLENBQUMsdUdBQWU7QUFDM0M7O0NBRUMsR0FDRCxTQUFTRixnQ0FBZ0NKLEtBQUs7SUFDMUMsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULHVDQUF1QyxHQUFHSztBQUMxQyxTQUFTRCw4QkFBOEJNLElBQUk7SUFDdkMsT0FBT1AsbUNBQW1DTyxNQUFNO0FBQ3BEO0FBQ0FWLHFDQUFxQyxHQUFHSTtBQUN4QyxTQUFTRCxtQ0FBbUNPLElBQUksRUFBRUMsbUJBQW1CO0lBQ2pFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFdBQVcsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixjQUFjLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFhRixJQUFJLENBQUMsYUFBYSxDQUFDSSxHQUFHLENBQUNOLGNBQWNPLGdCQUFnQjtRQUNoSSxXQUFXLENBQUMsQ0FBQyxHQUFHVCxhQUFhTyxNQUFNLEVBQUVILE1BQU0sY0FBY0UsWUFBWUYsSUFBSSxDQUFDLFdBQVc7SUFDekY7QUFDSjtBQUNBViwwQ0FBMEMsR0FBR0c7QUFDN0MsU0FBU0QsNEJBQTRCRCxLQUFLO0lBQ3RDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixjQUFjaEIsTUFBTWlCLFVBQVUsS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLFVBQVUsQ0FBQ0osR0FBRyxDQUFDTixjQUFjVyxjQUFjO1FBQzdHLFlBQVlsQixNQUFNbUIsT0FBTztJQUM3QjtBQUNKO0FBQ0FwQixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRDYXRlZ29yaWVzUmVzcG9uc2UuanM/YzNlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkdldENhdGVnb3JpZXNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBDYXRlZ29yeV9qc18xID0gcmVxdWlyZShcIi4vQ2F0ZWdvcnkuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldENhdGVnb3JpZXNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRDYXRlZ29yaWVzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRDYXRlZ29yaWVzUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlO1xuZnVuY3Rpb24gR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlRnJvbUpTT04gPSBHZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldENhdGVnb3JpZXNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ2NhdGVnb3JpZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjYXRlZ29yaWVzJykgPyB1bmRlZmluZWQgOiAoanNvblsnY2F0ZWdvcmllcyddLm1hcChDYXRlZ29yeV9qc18xLkNhdGVnb3J5RnJvbUpTT04pKSxcbiAgICAgICAgJ2hhc01vcmUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdoYXNfbW9yZScpID8gdW5kZWZpbmVkIDoganNvblsnaGFzX21vcmUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldENhdGVnb3JpZXNSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdjYXRlZ29yaWVzJzogdmFsdWUuY2F0ZWdvcmllcyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLmNhdGVnb3JpZXMubWFwKENhdGVnb3J5X2pzXzEuQ2F0ZWdvcnlUb0pTT04pKSxcbiAgICAgICAgJ2hhc19tb3JlJzogdmFsdWUuaGFzTW9yZSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRDYXRlZ29yaWVzUmVzcG9uc2VUb0pTT04gPSBHZXRDYXRlZ29yaWVzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRDYXRlZ29yaWVzUmVzcG9uc2VUb0pTT04iLCJHZXRDYXRlZ29yaWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0Q2F0ZWdvcmllc1Jlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIkNhdGVnb3J5X2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJDYXRlZ29yeUZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJjYXRlZ29yaWVzIiwiQ2F0ZWdvcnlUb0pTT04iLCJoYXNNb3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetCategoriesResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetEnvironmentFeatureFlagsResponse.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetEnvironmentFeatureFlagsResponse.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetEnvironmentFeatureFlagsResponseToJSON = exports.GetEnvironmentFeatureFlagsResponseFromJSONTyped = exports.GetEnvironmentFeatureFlagsResponseFromJSON = exports.instanceOfGetEnvironmentFeatureFlagsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1 = __webpack_require__(/*! ./GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js\");\n/**\n * Check if a given object implements the GetEnvironmentFeatureFlagsResponse interface.\n */ function instanceOfGetEnvironmentFeatureFlagsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetEnvironmentFeatureFlagsResponse = instanceOfGetEnvironmentFeatureFlagsResponse;\nfunction GetEnvironmentFeatureFlagsResponseFromJSON(json) {\n    return GetEnvironmentFeatureFlagsResponseFromJSONTyped(json, false);\n}\nexports.GetEnvironmentFeatureFlagsResponseFromJSON = GetEnvironmentFeatureFlagsResponseFromJSON;\nfunction GetEnvironmentFeatureFlagsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"featureFlags\": !(0, runtime_js_1.exists)(json, \"feature_flags\") ? undefined : (0, runtime_js_1.mapValues)(json[\"feature_flags\"], GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetEnvironmentFeatureFlagsResponseFromJSONTyped = GetEnvironmentFeatureFlagsResponseFromJSONTyped;\nfunction GetEnvironmentFeatureFlagsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"feature_flags\": value.featureFlags === undefined ? undefined : (0, runtime_js_1.mapValues)(value.featureFlags, GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1.GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetEnvironmentFeatureFlagsResponseToJSON = GetEnvironmentFeatureFlagsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0RBQWdELEdBQUdBLHVEQUF1RCxHQUFHQSxrREFBa0QsR0FBR0Esb0RBQW9ELEdBQUcsS0FBSztBQUM5TixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyw0REFBNERELG1CQUFPQSxDQUFDLCtMQUEyRDtBQUNuSTs7Q0FFQyxHQUNELFNBQVNGLDZDQUE2Q0osS0FBSztJQUN2RCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsb0RBQW9ELEdBQUdLO0FBQ3ZELFNBQVNELDJDQUEyQ00sSUFBSTtJQUNwRCxPQUFPUCxnREFBZ0RPLE1BQU07QUFDakU7QUFDQVYsa0RBQWtELEdBQUdJO0FBQ3JELFNBQVNELGdEQUFnRE8sSUFBSSxFQUFFQyxtQkFBbUI7SUFDOUUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGdCQUFnQixDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLG1CQUFtQkUsWUFBYSxDQUFDLEdBQUdOLGFBQWFRLFNBQVMsRUFBRUosSUFBSSxDQUFDLGdCQUFnQixFQUFFRiwwREFBMERPLDREQUE0RDtRQUN6UCxhQUFhLENBQUMsQ0FBQyxHQUFHVCxhQUFhTyxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZRixJQUFJLENBQUMsYUFBYTtJQUMvRjtBQUNKO0FBQ0FWLHVEQUF1RCxHQUFHRztBQUMxRCxTQUFTRCx5Q0FBeUNELEtBQUs7SUFDbkQsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNZSxJQUFJO1FBQ2xCLFdBQVdmLE1BQU1nQixPQUFPO1FBQ3hCLGlCQUFpQmhCLE1BQU1pQixZQUFZLEtBQUtOLFlBQVlBLFlBQWEsQ0FBQyxHQUFHTixhQUFhUSxTQUFTLEVBQUViLE1BQU1pQixZQUFZLEVBQUVWLDBEQUEwRFcsMERBQTBEO1FBQ3JPLGNBQWNsQixNQUFNbUIsU0FBUztJQUNqQztBQUNKO0FBQ0FwQixnREFBZ0QsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRFbnZpcm9ubWVudEZlYXR1cmVGbGFnc1Jlc3BvbnNlLmpzP2YxMjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRFbnZpcm9ubWVudEZlYXR1cmVGbGFnc1Jlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZHZXRFbnZpcm9ubWVudEZlYXR1cmVGbGFnc1Jlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVfanNfMSA9IHJlcXVpcmUoXCIuL0dldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZTtcbmZ1bmN0aW9uIEdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OID0gR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ2ZlYXR1cmVGbGFncyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2ZlYXR1cmVfZmxhZ3MnKSA/IHVuZGVmaW5lZCA6ICgoMCwgcnVudGltZV9qc18xLm1hcFZhbHVlcykoanNvblsnZmVhdHVyZV9mbGFncyddLCBHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlX2pzXzEuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OKSksXG4gICAgICAgICduZXh0VG9rZW4nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduZXh0X3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWyduZXh0X3Rva2VuJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQgPSBHZXRFbnZpcm9ubWVudEZlYXR1cmVGbGFnc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnZmVhdHVyZV9mbGFncyc6IHZhbHVlLmZlYXR1cmVGbGFncyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKCgwLCBydW50aW1lX2pzXzEubWFwVmFsdWVzKSh2YWx1ZS5mZWF0dXJlRmxhZ3MsIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVfanNfMS5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlVG9KU09OKSksXG4gICAgICAgICduZXh0X3Rva2VuJzogdmFsdWUubmV4dFRva2VuLFxuICAgIH07XG59XG5leHBvcnRzLkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VUb0pTT04gPSBHZXRFbnZpcm9ubWVudEZlYXR1cmVGbGFnc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZVRvSlNPTiIsIkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiR2V0RW52aXJvbm1lbnRGZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkdldEVudmlyb25tZW50RmVhdHVyZUZsYWdzUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZV9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwVmFsdWVzIiwiR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJmZWF0dXJlRmxhZ3MiLCJHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlVG9KU09OIiwibmV4dFRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetEnvironmentFeatureFlagsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponse.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponse.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationFeatureFlagsResponseToJSON = exports.GetOrganizationFeatureFlagsResponseFromJSONTyped = exports.GetOrganizationFeatureFlagsResponseFromJSON = exports.instanceOfGetOrganizationFeatureFlagsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1 = __webpack_require__(/*! ./GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js\");\n/**\n * Check if a given object implements the GetOrganizationFeatureFlagsResponse interface.\n */ function instanceOfGetOrganizationFeatureFlagsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationFeatureFlagsResponse = instanceOfGetOrganizationFeatureFlagsResponse;\nfunction GetOrganizationFeatureFlagsResponseFromJSON(json) {\n    return GetOrganizationFeatureFlagsResponseFromJSONTyped(json, false);\n}\nexports.GetOrganizationFeatureFlagsResponseFromJSON = GetOrganizationFeatureFlagsResponseFromJSON;\nfunction GetOrganizationFeatureFlagsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"featureFlags\": !(0, runtime_js_1.exists)(json, \"feature_flags\") ? undefined : (0, runtime_js_1.mapValues)(json[\"feature_flags\"], GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON)\n    };\n}\nexports.GetOrganizationFeatureFlagsResponseFromJSONTyped = GetOrganizationFeatureFlagsResponseFromJSONTyped;\nfunction GetOrganizationFeatureFlagsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"feature_flags\": value.featureFlags === undefined ? undefined : (0, runtime_js_1.mapValues)(value.featureFlags, GetOrganizationFeatureFlagsResponseFeatureFlagsValue_js_1.GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON)\n    };\n}\nexports.GetOrganizationFeatureFlagsResponseToJSON = GetOrganizationFeatureFlagsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlEQUFpRCxHQUFHQSx3REFBd0QsR0FBR0EsbURBQW1ELEdBQUdBLHFEQUFxRCxHQUFHLEtBQUs7QUFDbE8sSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUMsSUFBSUMsNERBQTRERCxtQkFBT0EsQ0FBQywrTEFBMkQ7QUFDbkk7O0NBRUMsR0FDRCxTQUFTRiw4Q0FBOENKLEtBQUs7SUFDeEQsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULHFEQUFxRCxHQUFHSztBQUN4RCxTQUFTRCw0Q0FBNENNLElBQUk7SUFDckQsT0FBT1AsaURBQWlETyxNQUFNO0FBQ2xFO0FBQ0FWLG1EQUFtRCxHQUFHSTtBQUN0RCxTQUFTRCxpREFBaURPLElBQUksRUFBRUMsbUJBQW1CO0lBQy9FLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFdBQVcsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxtQkFBbUJFLFlBQWEsQ0FBQyxHQUFHTixhQUFhUSxTQUFTLEVBQUVKLElBQUksQ0FBQyxnQkFBZ0IsRUFBRUYsMERBQTBETyw0REFBNEQ7SUFDN1A7QUFDSjtBQUNBZix3REFBd0QsR0FBR0c7QUFDM0QsU0FBU0QsMENBQTBDRCxLQUFLO0lBQ3BELElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixpQkFBaUJoQixNQUFNaUIsWUFBWSxLQUFLTixZQUFZQSxZQUFhLENBQUMsR0FBR04sYUFBYVEsU0FBUyxFQUFFYixNQUFNaUIsWUFBWSxFQUFFViwwREFBMERXLDBEQUEwRDtJQUN6TztBQUNKO0FBQ0FuQixpREFBaUQsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZS5qcz9hNGY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZV9qc18xID0gcmVxdWlyZShcIi4vR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZTtcbmZ1bmN0aW9uIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OID0gR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnZmVhdHVyZUZsYWdzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZmVhdHVyZV9mbGFncycpID8gdW5kZWZpbmVkIDogKCgwLCBydW50aW1lX2pzXzEubWFwVmFsdWVzKShqc29uWydmZWF0dXJlX2ZsYWdzJ10sIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVfanNfMS5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlRnJvbUpTT04pKSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQgPSBHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdmZWF0dXJlX2ZsYWdzJzogdmFsdWUuZmVhdHVyZUZsYWdzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAoKDAsIHJ1bnRpbWVfanNfMS5tYXBWYWx1ZXMpKHZhbHVlLmZlYXR1cmVGbGFncywgR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZV9qc18xLkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVUb0pTT04pKSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZVRvSlNPTiA9IEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VUb0pTT04iLCJHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcFZhbHVlcyIsIkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVGcm9tSlNPTiIsImNvZGUiLCJtZXNzYWdlIiwiZmVhdHVyZUZsYWdzIiwiR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON = exports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSONTyped = exports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON = exports.instanceOfGetOrganizationFeatureFlagsResponseFeatureFlagsValue = exports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueTypeEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueTypeEnum = {\n    Str: \"str\",\n    Int: \"int\",\n    Bool: \"bool\"\n};\n/**\n * Check if a given object implements the GetOrganizationFeatureFlagsResponseFeatureFlagsValue interface.\n */ function instanceOfGetOrganizationFeatureFlagsResponseFeatureFlagsValue(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationFeatureFlagsResponseFeatureFlagsValue = instanceOfGetOrganizationFeatureFlagsResponseFeatureFlagsValue;\nfunction GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON(json) {\n    return GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSONTyped(json, false);\n}\nexports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON = GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSON;\nfunction GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"value\": !(0, runtime_js_1.exists)(json, \"value\") ? undefined : json[\"value\"]\n    };\n}\nexports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSONTyped = GetOrganizationFeatureFlagsResponseFeatureFlagsValueFromJSONTyped;\nfunction GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"type\": value.type,\n        \"value\": value.value\n    };\n}\nexports.GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON = GetOrganizationFeatureFlagsResponseFeatureFlagsValueToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0VBQWtFLEdBQUdBLHlFQUF5RSxHQUFHQSxvRUFBb0UsR0FBR0Esc0VBQXNFLEdBQUdBLG9FQUFvRSxHQUFHLEtBQUs7QUFDN1csSUFBSU8sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRFIsb0VBQW9FLEdBQUc7SUFDbkVTLEtBQUs7SUFDTEMsS0FBSztJQUNMQyxNQUFNO0FBQ1Y7QUFDQTs7Q0FFQyxHQUNELFNBQVNOLCtEQUErREosS0FBSztJQUN6RSxJQUFJVyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVosc0VBQXNFLEdBQUdLO0FBQ3pFLFNBQVNELDZEQUE2RFMsSUFBSTtJQUN0RSxPQUFPVixrRUFBa0VVLE1BQU07QUFDbkY7QUFDQWIsb0VBQW9FLEdBQUdJO0FBQ3ZFLFNBQVNELGtFQUFrRVUsSUFBSSxFQUFFQyxtQkFBbUI7SUFDaEcsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHTixhQUFhUyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsU0FBUyxDQUFDLENBQUMsR0FBR04sYUFBYVMsTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQVlGLElBQUksQ0FBQyxRQUFRO0lBQ2pGO0FBQ0o7QUFDQWIseUVBQXlFLEdBQUdHO0FBQzVFLFNBQVNELDJEQUEyREQsS0FBSztJQUNyRSxJQUFJQSxVQUFVYyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJZCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1nQixJQUFJO1FBQ2xCLFNBQVNoQixNQUFNQSxLQUFLO0lBQ3hCO0FBQ0o7QUFDQUQsa0VBQWtFLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZS5qcz85ODgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlVG9KU09OID0gZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZSA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVR5cGVFbnVtID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBAZXhwb3J0XG4gKi9cbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVR5cGVFbnVtID0ge1xuICAgIFN0cjogJ3N0cicsXG4gICAgSW50OiAnaW50JyxcbiAgICBCb29sOiAnYm9vbCdcbn07XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWUgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWUgPSBpbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZTtcbmZ1bmN0aW9uIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OID0gR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd0eXBlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndHlwZScpID8gdW5kZWZpbmVkIDoganNvblsndHlwZSddLFxuICAgICAgICAndmFsdWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd2YWx1ZScpID8gdW5kZWZpbmVkIDoganNvblsndmFsdWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlRnJvbUpTT05UeXBlZCA9IEdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgICAgICAndmFsdWUnOiB2YWx1ZS52YWx1ZSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlVG9KU09OID0gR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVUb0pTT04iLCJHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlRnJvbUpTT05UeXBlZCIsIkdldE9yZ2FuaXphdGlvbkZlYXR1cmVGbGFnc1Jlc3BvbnNlRmVhdHVyZUZsYWdzVmFsdWVGcm9tSlNPTiIsImluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25GZWF0dXJlRmxhZ3NSZXNwb25zZUZlYXR1cmVGbGFnc1ZhbHVlIiwiR2V0T3JnYW5pemF0aW9uRmVhdHVyZUZsYWdzUmVzcG9uc2VGZWF0dXJlRmxhZ3NWYWx1ZVR5cGVFbnVtIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIlN0ciIsIkludCIsIkJvb2wiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationUsersResponse.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationUsersResponse.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationUsersResponseToJSON = exports.GetOrganizationUsersResponseFromJSONTyped = exports.GetOrganizationUsersResponseFromJSON = exports.instanceOfGetOrganizationUsersResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar OrganizationUser_js_1 = __webpack_require__(/*! ./OrganizationUser.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUser.js\");\n/**\n * Check if a given object implements the GetOrganizationUsersResponse interface.\n */ function instanceOfGetOrganizationUsersResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationUsersResponse = instanceOfGetOrganizationUsersResponse;\nfunction GetOrganizationUsersResponseFromJSON(json) {\n    return GetOrganizationUsersResponseFromJSONTyped(json, false);\n}\nexports.GetOrganizationUsersResponseFromJSON = GetOrganizationUsersResponseFromJSON;\nfunction GetOrganizationUsersResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"organizationUsers\": !(0, runtime_js_1.exists)(json, \"organization_users\") ? undefined : json[\"organization_users\"].map(OrganizationUser_js_1.OrganizationUserFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetOrganizationUsersResponseFromJSONTyped = GetOrganizationUsersResponseFromJSONTyped;\nfunction GetOrganizationUsersResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"organization_users\": value.organizationUsers === undefined ? undefined : value.organizationUsers.map(OrganizationUser_js_1.OrganizationUserToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetOrganizationUsersResponseToJSON = GetOrganizationUsersResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMENBQTBDLEdBQUdBLGlEQUFpRCxHQUFHQSw0Q0FBNEMsR0FBR0EsOENBQThDLEdBQUcsS0FBSztBQUN0TSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyx3QkFBd0JELG1CQUFPQSxDQUFDLHVIQUF1QjtBQUMzRDs7Q0FFQyxHQUNELFNBQVNGLHVDQUF1Q0osS0FBSztJQUNqRCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsOENBQThDLEdBQUdLO0FBQ2pELFNBQVNELHFDQUFxQ00sSUFBSTtJQUM5QyxPQUFPUCwwQ0FBMENPLE1BQU07QUFDM0Q7QUFDQVYsNENBQTRDLEdBQUdJO0FBQy9DLFNBQVNELDBDQUEwQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDeEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLHFCQUFxQixDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLHdCQUF3QkUsWUFBYUYsSUFBSSxDQUFDLHFCQUFxQixDQUFDSSxHQUFHLENBQUNOLHNCQUFzQk8sd0JBQXdCO1FBQ3ZLLGFBQWEsQ0FBQyxDQUFDLEdBQUdULGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO0lBQy9GO0FBQ0o7QUFDQVYsaURBQWlELEdBQUdHO0FBQ3BELFNBQVNELG1DQUFtQ0QsS0FBSztJQUM3QyxJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1lLElBQUk7UUFDbEIsV0FBV2YsTUFBTWdCLE9BQU87UUFDeEIsc0JBQXNCaEIsTUFBTWlCLGlCQUFpQixLQUFLTixZQUFZQSxZQUFhWCxNQUFNaUIsaUJBQWlCLENBQUNKLEdBQUcsQ0FBQ04sc0JBQXNCVyxzQkFBc0I7UUFDbkosY0FBY2xCLE1BQU1tQixTQUFTO0lBQ2pDO0FBQ0o7QUFDQXBCLDBDQUEwQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0dldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2UuanM/MDA5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgT3JnYW5pemF0aW9uVXNlcl9qc18xID0gcmVxdWlyZShcIi4vT3JnYW5pemF0aW9uVXNlci5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT04gPSBHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnb3JnYW5pemF0aW9uVXNlcnMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdvcmdhbml6YXRpb25fdXNlcnMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydvcmdhbml6YXRpb25fdXNlcnMnXS5tYXAoT3JnYW5pemF0aW9uVXNlcl9qc18xLk9yZ2FuaXphdGlvblVzZXJGcm9tSlNPTikpLFxuICAgICAgICAnbmV4dFRva2VuJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmV4dF90b2tlbicpID8gdW5kZWZpbmVkIDoganNvblsnbmV4dF90b2tlbiddLFxuICAgIH07XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ29yZ2FuaXphdGlvbl91c2Vycyc6IHZhbHVlLm9yZ2FuaXphdGlvblVzZXJzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAodmFsdWUub3JnYW5pemF0aW9uVXNlcnMubWFwKE9yZ2FuaXphdGlvblVzZXJfanNfMS5Pcmdhbml6YXRpb25Vc2VyVG9KU09OKSksXG4gICAgICAgICduZXh0X3Rva2VuJzogdmFsdWUubmV4dFRva2VuLFxuICAgIH07XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VUb0pTT04gPSBHZXRPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZVRvSlNPTiIsIkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiR2V0T3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiT3JnYW5pemF0aW9uVXNlcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiT3JnYW5pemF0aW9uVXNlckZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJvcmdhbml6YXRpb25Vc2VycyIsIk9yZ2FuaXphdGlvblVzZXJUb0pTT04iLCJuZXh0VG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationUsersResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsResponse.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsResponse.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationsResponseToJSON = exports.GetOrganizationsResponseFromJSONTyped = exports.GetOrganizationsResponseFromJSON = exports.instanceOfGetOrganizationsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Organization_js_1 = __webpack_require__(/*! ./Organization.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Organization.js\");\n/**\n * Check if a given object implements the GetOrganizationsResponse interface.\n */ function instanceOfGetOrganizationsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationsResponse = instanceOfGetOrganizationsResponse;\nfunction GetOrganizationsResponseFromJSON(json) {\n    return GetOrganizationsResponseFromJSONTyped(json, false);\n}\nexports.GetOrganizationsResponseFromJSON = GetOrganizationsResponseFromJSON;\nfunction GetOrganizationsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"organizations\": !(0, runtime_js_1.exists)(json, \"organizations\") ? undefined : json[\"organizations\"].map(Organization_js_1.OrganizationFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetOrganizationsResponseFromJSONTyped = GetOrganizationsResponseFromJSONTyped;\nfunction GetOrganizationsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"organizations\": value.organizations === undefined ? undefined : value.organizations.map(Organization_js_1.OrganizationToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetOrganizationsResponseToJSON = GetOrganizationsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBRyxLQUFLO0FBQ3RMLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLG9CQUFvQkQsbUJBQU9BLENBQUMsK0dBQW1CO0FBQ25EOztDQUVDLEdBQ0QsU0FBU0YsbUNBQW1DSixLQUFLO0lBQzdDLElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDTSxJQUFJO0lBQzFDLE9BQU9QLHNDQUFzQ08sTUFBTTtBQUN2RDtBQUNBVix3Q0FBd0MsR0FBR0k7QUFDM0MsU0FBU0Qsc0NBQXNDTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUNwRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsaUJBQWlCLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFhRixJQUFJLENBQUMsZ0JBQWdCLENBQUNJLEdBQUcsQ0FBQ04sa0JBQWtCTyxvQkFBb0I7UUFDakosYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBViw2Q0FBNkMsR0FBR0c7QUFDaEQsU0FBU0QsK0JBQStCRCxLQUFLO0lBQ3pDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixpQkFBaUJoQixNQUFNaUIsYUFBYSxLQUFLTixZQUFZQSxZQUFhWCxNQUFNaUIsYUFBYSxDQUFDSixHQUFHLENBQUNOLGtCQUFrQlcsa0JBQWtCO1FBQzlILGNBQWNsQixNQUFNbUIsU0FBUztJQUNqQztBQUNKO0FBQ0FwQixzQ0FBc0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRPcmdhbml6YXRpb25zUmVzcG9uc2UuanM/MGMyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRPcmdhbml6YXRpb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRPcmdhbml6YXRpb25zUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBPcmdhbml6YXRpb25fanNfMSA9IHJlcXVpcmUoXCIuL09yZ2FuaXphdGlvbi5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25zUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25zUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEdldE9yZ2FuaXphdGlvbnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25zUmVzcG9uc2VGcm9tSlNPTiA9IEdldE9yZ2FuaXphdGlvbnNSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnb3JnYW5pemF0aW9ucyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ29yZ2FuaXphdGlvbnMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydvcmdhbml6YXRpb25zJ10ubWFwKE9yZ2FuaXphdGlvbl9qc18xLk9yZ2FuaXphdGlvbkZyb21KU09OKSksXG4gICAgICAgICduZXh0VG9rZW4nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduZXh0X3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWyduZXh0X3Rva2VuJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IEdldE9yZ2FuaXphdGlvbnNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25zUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnb3JnYW5pemF0aW9ucyc6IHZhbHVlLm9yZ2FuaXphdGlvbnMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5vcmdhbml6YXRpb25zLm1hcChPcmdhbml6YXRpb25fanNfMS5Pcmdhbml6YXRpb25Ub0pTT04pKSxcbiAgICAgICAgJ25leHRfdG9rZW4nOiB2YWx1ZS5uZXh0VG9rZW4sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlVG9KU09OID0gR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlVG9KU09OIiwiR2V0T3JnYW5pemF0aW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkdldE9yZ2FuaXphdGlvbnNSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJPcmdhbml6YXRpb25fanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIk9yZ2FuaXphdGlvbkZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJvcmdhbml6YXRpb25zIiwiT3JnYW5pemF0aW9uVG9KU09OIiwibmV4dFRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserPermissionsResponse.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserPermissionsResponse.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationsUserPermissionsResponseToJSON = exports.GetOrganizationsUserPermissionsResponseFromJSONTyped = exports.GetOrganizationsUserPermissionsResponseFromJSON = exports.instanceOfGetOrganizationsUserPermissionsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar OrganizationUserPermission_js_1 = __webpack_require__(/*! ./OrganizationUserPermission.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermission.js\");\n/**\n * Check if a given object implements the GetOrganizationsUserPermissionsResponse interface.\n */ function instanceOfGetOrganizationsUserPermissionsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationsUserPermissionsResponse = instanceOfGetOrganizationsUserPermissionsResponse;\nfunction GetOrganizationsUserPermissionsResponseFromJSON(json) {\n    return GetOrganizationsUserPermissionsResponseFromJSONTyped(json, false);\n}\nexports.GetOrganizationsUserPermissionsResponseFromJSON = GetOrganizationsUserPermissionsResponseFromJSON;\nfunction GetOrganizationsUserPermissionsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : json[\"permissions\"].map(OrganizationUserPermission_js_1.OrganizationUserPermissionFromJSON)\n    };\n}\nexports.GetOrganizationsUserPermissionsResponseFromJSONTyped = GetOrganizationsUserPermissionsResponseFromJSONTyped;\nfunction GetOrganizationsUserPermissionsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"permissions\": value.permissions === undefined ? undefined : value.permissions.map(OrganizationUserPermission_js_1.OrganizationUserPermissionToJSON)\n    };\n}\nexports.GetOrganizationsUserPermissionsResponseToJSON = GetOrganizationsUserPermissionsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uc1VzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxREFBcUQsR0FBR0EsNERBQTRELEdBQUdBLHVEQUF1RCxHQUFHQSx5REFBeUQsR0FBRyxLQUFLO0FBQ2xQLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLGtDQUFrQ0QsbUJBQU9BLENBQUMsMklBQWlDO0FBQy9FOztDQUVDLEdBQ0QsU0FBU0Ysa0RBQWtESixLQUFLO0lBQzVELElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCx5REFBeUQsR0FBR0s7QUFDNUQsU0FBU0QsZ0RBQWdETSxJQUFJO0lBQ3pELE9BQU9QLHFEQUFxRE8sTUFBTTtBQUN0RTtBQUNBVix1REFBdUQsR0FBR0k7QUFDMUQsU0FBU0QscURBQXFETyxJQUFJLEVBQUVDLG1CQUFtQjtJQUNuRixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsZUFBZSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBYUYsSUFBSSxDQUFDLGNBQWMsQ0FBQ0ksR0FBRyxDQUFDTixnQ0FBZ0NPLGtDQUFrQztJQUMzSztBQUNKO0FBQ0FmLDREQUE0RCxHQUFHRztBQUMvRCxTQUFTRCw4Q0FBOENELEtBQUs7SUFDeEQsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNZSxJQUFJO1FBQ2xCLFdBQVdmLE1BQU1nQixPQUFPO1FBQ3hCLGVBQWVoQixNQUFNaUIsV0FBVyxLQUFLTixZQUFZQSxZQUFhWCxNQUFNaUIsV0FBVyxDQUFDSixHQUFHLENBQUNOLGdDQUFnQ1csZ0NBQWdDO0lBQ3hKO0FBQ0o7QUFDQW5CLHFEQUFxRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0dldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZS5qcz9hOGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uc1VzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uX2pzXzEgPSByZXF1aXJlKFwiLi9Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbi5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0T3JnYW5pemF0aW9uc1VzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTiA9IEdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uc1VzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAncGVybWlzc2lvbnMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwZXJtaXNzaW9ucycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3Blcm1pc3Npb25zJ10ubWFwKE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uX2pzXzEuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBHZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gR2V0T3JnYW5pemF0aW9uc1VzZXJQZXJtaXNzaW9uc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ3Blcm1pc3Npb25zJzogdmFsdWUucGVybWlzc2lvbnMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5wZXJtaXNzaW9ucy5tYXAoT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25fanNfMS5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTiA9IEdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTiIsIkdldE9yZ2FuaXphdGlvbnNVc2VyUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25zVXNlclBlcm1pc3Npb25zUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25fanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT04iLCJjb2RlIiwibWVzc2FnZSIsInBlcm1pc3Npb25zIiwiT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Ub0pTT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserPermissionsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserRolesResponse.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserRolesResponse.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetOrganizationsUserRolesResponseToJSON = exports.GetOrganizationsUserRolesResponseFromJSONTyped = exports.GetOrganizationsUserRolesResponseFromJSON = exports.instanceOfGetOrganizationsUserRolesResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar OrganizationUserRole_js_1 = __webpack_require__(/*! ./OrganizationUserRole.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRole.js\");\n/**\n * Check if a given object implements the GetOrganizationsUserRolesResponse interface.\n */ function instanceOfGetOrganizationsUserRolesResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetOrganizationsUserRolesResponse = instanceOfGetOrganizationsUserRolesResponse;\nfunction GetOrganizationsUserRolesResponseFromJSON(json) {\n    return GetOrganizationsUserRolesResponseFromJSONTyped(json, false);\n}\nexports.GetOrganizationsUserRolesResponseFromJSON = GetOrganizationsUserRolesResponseFromJSON;\nfunction GetOrganizationsUserRolesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"].map(OrganizationUserRole_js_1.OrganizationUserRoleFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetOrganizationsUserRolesResponseFromJSONTyped = GetOrganizationsUserRolesResponseFromJSONTyped;\nfunction GetOrganizationsUserRolesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"roles\": value.roles === undefined ? undefined : value.roles.map(OrganizationUserRole_js_1.OrganizationUserRoleToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetOrganizationsUserRolesResponseToJSON = GetOrganizationsUserRolesResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQ0FBK0MsR0FBR0Esc0RBQXNELEdBQUdBLGlEQUFpRCxHQUFHQSxtREFBbUQsR0FBRyxLQUFLO0FBQzFOLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLDRCQUE0QkQsbUJBQU9BLENBQUMsK0hBQTJCO0FBQ25FOztDQUVDLEdBQ0QsU0FBU0YsNENBQTRDSixLQUFLO0lBQ3RELElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCxtREFBbUQsR0FBR0s7QUFDdEQsU0FBU0QsMENBQTBDTSxJQUFJO0lBQ25ELE9BQU9QLCtDQUErQ08sTUFBTTtBQUNoRTtBQUNBVixpREFBaUQsR0FBR0k7QUFDcEQsU0FBU0QsK0NBQStDTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUM3RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsU0FBUyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQWFGLElBQUksQ0FBQyxRQUFRLENBQUNJLEdBQUcsQ0FBQ04sMEJBQTBCTyw0QkFBNEI7UUFDekksYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBVixzREFBc0QsR0FBR0c7QUFDekQsU0FBU0Qsd0NBQXdDRCxLQUFLO0lBQ2xELElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixTQUFTaEIsTUFBTWlCLEtBQUssS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLEtBQUssQ0FBQ0osR0FBRyxDQUFDTiwwQkFBMEJXLDBCQUEwQjtRQUN0SCxjQUFjbEIsTUFBTW1CLFNBQVM7SUFDakM7QUFDSjtBQUNBcEIsK0NBQStDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlLmpzP2ZkNmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgT3JnYW5pemF0aW9uVXNlclJvbGVfanNfMSA9IHJlcXVpcmUoXCIuL09yZ2FuaXphdGlvblVzZXJSb2xlLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlID0gaW5zdGFuY2VPZkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZTtcbmZ1bmN0aW9uIEdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZUZyb21KU09OID0gR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdyb2xlcyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3JvbGVzJykgPyB1bmRlZmluZWQgOiAoanNvblsncm9sZXMnXS5tYXAoT3JnYW5pemF0aW9uVXNlclJvbGVfanNfMS5Pcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OKSksXG4gICAgICAgICduZXh0VG9rZW4nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduZXh0X3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWyduZXh0X3Rva2VuJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0T3JnYW5pemF0aW9uc1VzZXJSb2xlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IEdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAncm9sZXMnOiB2YWx1ZS5yb2xlcyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnJvbGVzLm1hcChPcmdhbml6YXRpb25Vc2VyUm9sZV9qc18xLk9yZ2FuaXphdGlvblVzZXJSb2xlVG9KU09OKSksXG4gICAgICAgICduZXh0X3Rva2VuJzogdmFsdWUubmV4dFRva2VuLFxuICAgIH07XG59XG5leHBvcnRzLkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZVRvSlNPTiA9IEdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZVRvSlNPTiIsIkdldE9yZ2FuaXphdGlvbnNVc2VyUm9sZXNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZHZXRPcmdhbml6YXRpb25zVXNlclJvbGVzUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiT3JnYW5pemF0aW9uVXNlclJvbGVfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIk9yZ2FuaXphdGlvblVzZXJSb2xlRnJvbUpTT04iLCJjb2RlIiwibWVzc2FnZSIsInJvbGVzIiwiT3JnYW5pemF0aW9uVXNlclJvbGVUb0pTT04iLCJuZXh0VG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserRolesResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPermissionsResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPermissionsResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetPermissionsResponseToJSON = exports.GetPermissionsResponseFromJSONTyped = exports.GetPermissionsResponseFromJSON = exports.instanceOfGetPermissionsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Permissions_js_1 = __webpack_require__(/*! ./Permissions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Permissions.js\");\n/**\n * Check if a given object implements the GetPermissionsResponse interface.\n */ function instanceOfGetPermissionsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetPermissionsResponse = instanceOfGetPermissionsResponse;\nfunction GetPermissionsResponseFromJSON(json) {\n    return GetPermissionsResponseFromJSONTyped(json, false);\n}\nexports.GetPermissionsResponseFromJSON = GetPermissionsResponseFromJSON;\nfunction GetPermissionsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : json[\"permissions\"].map(Permissions_js_1.PermissionsFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetPermissionsResponseFromJSONTyped = GetPermissionsResponseFromJSONTyped;\nfunction GetPermissionsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"permissions\": value.permissions === undefined ? undefined : value.permissions.map(Permissions_js_1.PermissionsToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetPermissionsResponseToJSON = GetPermissionsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UGVybWlzc2lvbnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUM5SyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxtQkFBbUJELG1CQUFPQSxDQUFDLDZHQUFrQjtBQUNqRDs7Q0FFQyxHQUNELFNBQVNGLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQk0sSUFBSTtJQUN4QyxPQUFPUCxvQ0FBb0NPLE1BQU07QUFDckQ7QUFDQVYsc0NBQXNDLEdBQUdJO0FBQ3pDLFNBQVNELG9DQUFvQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDbEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGVBQWUsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQWFGLElBQUksQ0FBQyxjQUFjLENBQUNJLEdBQUcsQ0FBQ04saUJBQWlCTyxtQkFBbUI7UUFDekksYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBViwyQ0FBMkMsR0FBR0c7QUFDOUMsU0FBU0QsNkJBQTZCRCxLQUFLO0lBQ3ZDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixlQUFlaEIsTUFBTWlCLFdBQVcsS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLFdBQVcsQ0FBQ0osR0FBRyxDQUFDTixpQkFBaUJXLGlCQUFpQjtRQUN0SCxjQUFjbEIsTUFBTW1CLFNBQVM7SUFDakM7QUFDSjtBQUNBcEIsb0NBQW9DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UGVybWlzc2lvbnNSZXNwb25zZS5qcz9iNmZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRQZXJtaXNzaW9uc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0UGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0UGVybWlzc2lvbnNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBQZXJtaXNzaW9uc19qc18xID0gcmVxdWlyZShcIi4vUGVybWlzc2lvbnMuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldFBlcm1pc3Npb25zUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mR2V0UGVybWlzc2lvbnNSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkdldFBlcm1pc3Npb25zUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0UGVybWlzc2lvbnNSZXNwb25zZTtcbmZ1bmN0aW9uIEdldFBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEdldFBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0UGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OID0gR2V0UGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gR2V0UGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ3Blcm1pc3Npb25zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncGVybWlzc2lvbnMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydwZXJtaXNzaW9ucyddLm1hcChQZXJtaXNzaW9uc19qc18xLlBlcm1pc3Npb25zRnJvbUpTT04pKSxcbiAgICAgICAgJ25leHRUb2tlbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25leHRfdG9rZW4nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25leHRfdG9rZW4nXSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IEdldFBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gR2V0UGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdwZXJtaXNzaW9ucyc6IHZhbHVlLnBlcm1pc3Npb25zID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAodmFsdWUucGVybWlzc2lvbnMubWFwKFBlcm1pc3Npb25zX2pzXzEuUGVybWlzc2lvbnNUb0pTT04pKSxcbiAgICAgICAgJ25leHRfdG9rZW4nOiB2YWx1ZS5uZXh0VG9rZW4sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0UGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTiA9IEdldFBlcm1pc3Npb25zUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRQZXJtaXNzaW9uc1Jlc3BvbnNlVG9KU09OIiwiR2V0UGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0UGVybWlzc2lvbnNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJQZXJtaXNzaW9uc19qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiUGVybWlzc2lvbnNGcm9tSlNPTiIsImNvZGUiLCJtZXNzYWdlIiwicGVybWlzc2lvbnMiLCJQZXJtaXNzaW9uc1RvSlNPTiIsIm5leHRUb2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPermissionsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertiesResponse.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertiesResponse.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetPropertiesResponseToJSON = exports.GetPropertiesResponseFromJSONTyped = exports.GetPropertiesResponseFromJSON = exports.instanceOfGetPropertiesResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Property_js_1 = __webpack_require__(/*! ./Property.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Property.js\");\n/**\n * Check if a given object implements the GetPropertiesResponse interface.\n */ function instanceOfGetPropertiesResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetPropertiesResponse = instanceOfGetPropertiesResponse;\nfunction GetPropertiesResponseFromJSON(json) {\n    return GetPropertiesResponseFromJSONTyped(json, false);\n}\nexports.GetPropertiesResponseFromJSON = GetPropertiesResponseFromJSON;\nfunction GetPropertiesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"properties\": !(0, runtime_js_1.exists)(json, \"properties\") ? undefined : json[\"properties\"].map(Property_js_1.PropertyFromJSON),\n        \"hasMore\": !(0, runtime_js_1.exists)(json, \"has_more\") ? undefined : json[\"has_more\"]\n    };\n}\nexports.GetPropertiesResponseFromJSONTyped = GetPropertiesResponseFromJSONTyped;\nfunction GetPropertiesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"properties\": value.properties === undefined ? undefined : value.properties.map(Property_js_1.PropertyToJSON),\n        \"has_more\": value.hasMore\n    };\n}\nexports.GetPropertiesResponseToJSON = GetPropertiesResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UHJvcGVydGllc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLGdCQUFnQkQsbUJBQU9BLENBQUMsdUdBQWU7QUFDM0M7O0NBRUMsR0FDRCxTQUFTRixnQ0FBZ0NKLEtBQUs7SUFDMUMsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULHVDQUF1QyxHQUFHSztBQUMxQyxTQUFTRCw4QkFBOEJNLElBQUk7SUFDdkMsT0FBT1AsbUNBQW1DTyxNQUFNO0FBQ3BEO0FBQ0FWLHFDQUFxQyxHQUFHSTtBQUN4QyxTQUFTRCxtQ0FBbUNPLElBQUksRUFBRUMsbUJBQW1CO0lBQ2pFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFdBQVcsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixjQUFjLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFhRixJQUFJLENBQUMsYUFBYSxDQUFDSSxHQUFHLENBQUNOLGNBQWNPLGdCQUFnQjtRQUNoSSxXQUFXLENBQUMsQ0FBQyxHQUFHVCxhQUFhTyxNQUFNLEVBQUVILE1BQU0sY0FBY0UsWUFBWUYsSUFBSSxDQUFDLFdBQVc7SUFDekY7QUFDSjtBQUNBViwwQ0FBMEMsR0FBR0c7QUFDN0MsU0FBU0QsNEJBQTRCRCxLQUFLO0lBQ3RDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixjQUFjaEIsTUFBTWlCLFVBQVUsS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLFVBQVUsQ0FBQ0osR0FBRyxDQUFDTixjQUFjVyxjQUFjO1FBQzdHLFlBQVlsQixNQUFNbUIsT0FBTztJQUM3QjtBQUNKO0FBQ0FwQixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRQcm9wZXJ0aWVzUmVzcG9uc2UuanM/NTBlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2V0UHJvcGVydGllc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkdldFByb3BlcnRpZXNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBQcm9wZXJ0eV9qc18xID0gcmVxdWlyZShcIi4vUHJvcGVydHkuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldFByb3BlcnRpZXNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRQcm9wZXJ0aWVzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRQcm9wZXJ0aWVzUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0UHJvcGVydGllc1Jlc3BvbnNlO1xuZnVuY3Rpb24gR2V0UHJvcGVydGllc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0UHJvcGVydGllc1Jlc3BvbnNlRnJvbUpTT04gPSBHZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldFByb3BlcnRpZXNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ3Byb3BlcnRpZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwcm9wZXJ0aWVzJykgPyB1bmRlZmluZWQgOiAoanNvblsncHJvcGVydGllcyddLm1hcChQcm9wZXJ0eV9qc18xLlByb3BlcnR5RnJvbUpTT04pKSxcbiAgICAgICAgJ2hhc01vcmUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdoYXNfbW9yZScpID8gdW5kZWZpbmVkIDoganNvblsnaGFzX21vcmUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0UHJvcGVydGllc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldFByb3BlcnRpZXNSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdwcm9wZXJ0aWVzJzogdmFsdWUucHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnByb3BlcnRpZXMubWFwKFByb3BlcnR5X2pzXzEuUHJvcGVydHlUb0pTT04pKSxcbiAgICAgICAgJ2hhc19tb3JlJzogdmFsdWUuaGFzTW9yZSxcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRQcm9wZXJ0aWVzUmVzcG9uc2VUb0pTT04gPSBHZXRQcm9wZXJ0aWVzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRQcm9wZXJ0aWVzUmVzcG9uc2VUb0pTT04iLCJHZXRQcm9wZXJ0aWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiR2V0UHJvcGVydGllc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0UHJvcGVydGllc1Jlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIlByb3BlcnR5X2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJQcm9wZXJ0eUZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJwcm9wZXJ0aWVzIiwiUHJvcGVydHlUb0pTT04iLCJoYXNNb3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertiesResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertyValuesResponse.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertyValuesResponse.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetPropertyValuesResponseToJSON = exports.GetPropertyValuesResponseFromJSONTyped = exports.GetPropertyValuesResponseFromJSON = exports.instanceOfGetPropertyValuesResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar PropertyValue_js_1 = __webpack_require__(/*! ./PropertyValue.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/PropertyValue.js\");\n/**\n * Check if a given object implements the GetPropertyValuesResponse interface.\n */ function instanceOfGetPropertyValuesResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetPropertyValuesResponse = instanceOfGetPropertyValuesResponse;\nfunction GetPropertyValuesResponseFromJSON(json) {\n    return GetPropertyValuesResponseFromJSONTyped(json, false);\n}\nexports.GetPropertyValuesResponseFromJSON = GetPropertyValuesResponseFromJSON;\nfunction GetPropertyValuesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"properties\": !(0, runtime_js_1.exists)(json, \"properties\") ? undefined : json[\"properties\"].map(PropertyValue_js_1.PropertyValueFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetPropertyValuesResponseFromJSONTyped = GetPropertyValuesResponseFromJSONTyped;\nfunction GetPropertyValuesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"properties\": value.properties === undefined ? undefined : value.properties.map(PropertyValue_js_1.PropertyValueToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetPropertyValuesResponseToJSON = GetPropertyValuesResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUNBQXVDLEdBQUdBLDhDQUE4QyxHQUFHQSx5Q0FBeUMsR0FBR0EsMkNBQTJDLEdBQUcsS0FBSztBQUMxTCxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxxQkFBcUJELG1CQUFPQSxDQUFDLGlIQUFvQjtBQUNyRDs7Q0FFQyxHQUNELFNBQVNGLG9DQUFvQ0osS0FBSztJQUM5QyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsMkNBQTJDLEdBQUdLO0FBQzlDLFNBQVNELGtDQUFrQ00sSUFBSTtJQUMzQyxPQUFPUCx1Q0FBdUNPLE1BQU07QUFDeEQ7QUFDQVYseUNBQXlDLEdBQUdJO0FBQzVDLFNBQVNELHVDQUF1Q08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDckUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGNBQWMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQWFGLElBQUksQ0FBQyxhQUFhLENBQUNJLEdBQUcsQ0FBQ04sbUJBQW1CTyxxQkFBcUI7UUFDMUksYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBViw4Q0FBOEMsR0FBR0c7QUFDakQsU0FBU0QsZ0NBQWdDRCxLQUFLO0lBQzFDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixjQUFjaEIsTUFBTWlCLFVBQVUsS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLFVBQVUsQ0FBQ0osR0FBRyxDQUFDTixtQkFBbUJXLG1CQUFtQjtRQUN2SCxjQUFjbEIsTUFBTW1CLFNBQVM7SUFDakM7QUFDSjtBQUNBcEIsdUNBQXVDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZS5qcz8zMDdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBQcm9wZXJ0eVZhbHVlX2pzXzEgPSByZXF1aXJlKFwiLi9Qcm9wZXJ0eVZhbHVlLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlID0gaW5zdGFuY2VPZkdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2VGcm9tSlNPTiA9IEdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICdwcm9wZXJ0aWVzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncHJvcGVydGllcycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3Byb3BlcnRpZXMnXS5tYXAoUHJvcGVydHlWYWx1ZV9qc18xLlByb3BlcnR5VmFsdWVGcm9tSlNPTikpLFxuICAgICAgICAnbmV4dFRva2VuJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmV4dF90b2tlbicpID8gdW5kZWZpbmVkIDoganNvblsnbmV4dF90b2tlbiddLFxuICAgIH07XG59XG5leHBvcnRzLkdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ3Byb3BlcnRpZXMnOiB2YWx1ZS5wcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAodmFsdWUucHJvcGVydGllcy5tYXAoUHJvcGVydHlWYWx1ZV9qc18xLlByb3BlcnR5VmFsdWVUb0pTT04pKSxcbiAgICAgICAgJ25leHRfdG9rZW4nOiB2YWx1ZS5uZXh0VG9rZW4sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZVRvSlNPTiA9IEdldFByb3BlcnR5VmFsdWVzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlVG9KU09OIiwiR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRQcm9wZXJ0eVZhbHVlc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0UHJvcGVydHlWYWx1ZXNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJQcm9wZXJ0eVZhbHVlX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJQcm9wZXJ0eVZhbHVlRnJvbUpTT04iLCJjb2RlIiwibWVzc2FnZSIsInByb3BlcnRpZXMiLCJQcm9wZXJ0eVZhbHVlVG9KU09OIiwibmV4dFRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertyValuesResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRedirectCallbackUrlsResponse.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRedirectCallbackUrlsResponse.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetRedirectCallbackUrlsResponseToJSON = exports.GetRedirectCallbackUrlsResponseFromJSONTyped = exports.GetRedirectCallbackUrlsResponseFromJSON = exports.instanceOfGetRedirectCallbackUrlsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar RedirectCallbackUrls_js_1 = __webpack_require__(/*! ./RedirectCallbackUrls.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RedirectCallbackUrls.js\");\n/**\n * Check if a given object implements the GetRedirectCallbackUrlsResponse interface.\n */ function instanceOfGetRedirectCallbackUrlsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetRedirectCallbackUrlsResponse = instanceOfGetRedirectCallbackUrlsResponse;\nfunction GetRedirectCallbackUrlsResponseFromJSON(json) {\n    return GetRedirectCallbackUrlsResponseFromJSONTyped(json, false);\n}\nexports.GetRedirectCallbackUrlsResponseFromJSON = GetRedirectCallbackUrlsResponseFromJSON;\nfunction GetRedirectCallbackUrlsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"redirectUrls\": !(0, runtime_js_1.exists)(json, \"redirect_urls\") ? undefined : json[\"redirect_urls\"].map(RedirectCallbackUrls_js_1.RedirectCallbackUrlsFromJSON)\n    };\n}\nexports.GetRedirectCallbackUrlsResponseFromJSONTyped = GetRedirectCallbackUrlsResponseFromJSONTyped;\nfunction GetRedirectCallbackUrlsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"redirect_urls\": value.redirectUrls === undefined ? undefined : value.redirectUrls.map(RedirectCallbackUrls_js_1.RedirectCallbackUrlsToJSON)\n    };\n}\nexports.GetRedirectCallbackUrlsResponseToJSON = GetRedirectCallbackUrlsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNkNBQTZDLEdBQUdBLG9EQUFvRCxHQUFHQSwrQ0FBK0MsR0FBR0EsaURBQWlELEdBQUcsS0FBSztBQUNsTixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyw0QkFBNEJELG1CQUFPQSxDQUFDLCtIQUEyQjtBQUNuRTs7Q0FFQyxHQUNELFNBQVNGLDBDQUEwQ0osS0FBSztJQUNwRCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsaURBQWlELEdBQUdLO0FBQ3BELFNBQVNELHdDQUF3Q00sSUFBSTtJQUNqRCxPQUFPUCw2Q0FBNkNPLE1BQU07QUFDOUQ7QUFDQVYsK0NBQStDLEdBQUdJO0FBQ2xELFNBQVNELDZDQUE2Q08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDM0UsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxtQkFBbUJFLFlBQWFGLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQ0ksR0FBRyxDQUFDTiwwQkFBMEJPLDRCQUE0QjtJQUNwSztBQUNKO0FBQ0FmLG9EQUFvRCxHQUFHRztBQUN2RCxTQUFTRCxzQ0FBc0NELEtBQUs7SUFDaEQsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxpQkFBaUJBLE1BQU1lLFlBQVksS0FBS0osWUFBWUEsWUFBYVgsTUFBTWUsWUFBWSxDQUFDRixHQUFHLENBQUNOLDBCQUEwQlMsMEJBQTBCO0lBQ2hKO0FBQ0o7QUFDQWpCLDZDQUE2QyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0dldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2UuanM/OTQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgUmVkaXJlY3RDYWxsYmFja1VybHNfanNfMSA9IHJlcXVpcmUoXCIuL1JlZGlyZWN0Q2FsbGJhY2tVcmxzLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlID0gaW5zdGFuY2VPZkdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2U7XG5mdW5jdGlvbiBHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLkdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VGcm9tSlNPTiA9IEdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncmVkaXJlY3RVcmxzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncmVkaXJlY3RfdXJscycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3JlZGlyZWN0X3VybHMnXS5tYXAoUmVkaXJlY3RDYWxsYmFja1VybHNfanNfMS5SZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdyZWRpcmVjdF91cmxzJzogdmFsdWUucmVkaXJlY3RVcmxzID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiAodmFsdWUucmVkaXJlY3RVcmxzLm1hcChSZWRpcmVjdENhbGxiYWNrVXJsc19qc18xLlJlZGlyZWN0Q2FsbGJhY2tVcmxzVG9KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZVRvSlNPTiA9IEdldFJlZGlyZWN0Q2FsbGJhY2tVcmxzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlVG9KU09OIiwiR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRSZWRpcmVjdENhbGxiYWNrVXJsc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0UmVkaXJlY3RDYWxsYmFja1VybHNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJSZWRpcmVjdENhbGxiYWNrVXJsc19qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiUmVkaXJlY3RDYWxsYmFja1VybHNGcm9tSlNPTiIsInJlZGlyZWN0VXJscyIsIlJlZGlyZWN0Q2FsbGJhY2tVcmxzVG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRedirectCallbackUrlsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRolesResponse.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRolesResponse.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetRolesResponseToJSON = exports.GetRolesResponseFromJSONTyped = exports.GetRolesResponseFromJSON = exports.instanceOfGetRolesResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Roles_js_1 = __webpack_require__(/*! ./Roles.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Roles.js\");\n/**\n * Check if a given object implements the GetRolesResponse interface.\n */ function instanceOfGetRolesResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetRolesResponse = instanceOfGetRolesResponse;\nfunction GetRolesResponseFromJSON(json) {\n    return GetRolesResponseFromJSONTyped(json, false);\n}\nexports.GetRolesResponseFromJSON = GetRolesResponseFromJSON;\nfunction GetRolesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"].map(Roles_js_1.RolesFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetRolesResponseFromJSONTyped = GetRolesResponseFromJSONTyped;\nfunction GetRolesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"roles\": value.roles === undefined ? undefined : value.roles.map(Roles_js_1.RolesToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetRolesResponseToJSON = GetRolesResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0Um9sZXNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsOEJBQThCLEdBQUdBLHFDQUFxQyxHQUFHQSxnQ0FBZ0MsR0FBR0Esa0NBQWtDLEdBQUcsS0FBSztBQUN0SixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxhQUFhRCxtQkFBT0EsQ0FBQyxpR0FBWTtBQUNyQzs7Q0FFQyxHQUNELFNBQVNGLDJCQUEyQkosS0FBSztJQUNyQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsa0NBQWtDLEdBQUdLO0FBQ3JDLFNBQVNELHlCQUF5Qk0sSUFBSTtJQUNsQyxPQUFPUCw4QkFBOEJPLE1BQU07QUFDL0M7QUFDQVYsZ0NBQWdDLEdBQUdJO0FBQ25DLFNBQVNELDhCQUE4Qk8sSUFBSSxFQUFFQyxtQkFBbUI7SUFDNUQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLFNBQVMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFhRixJQUFJLENBQUMsUUFBUSxDQUFDSSxHQUFHLENBQUNOLFdBQVdPLGFBQWE7UUFDM0csYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBVixxQ0FBcUMsR0FBR0c7QUFDeEMsU0FBU0QsdUJBQXVCRCxLQUFLO0lBQ2pDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixTQUFTaEIsTUFBTWlCLEtBQUssS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLEtBQUssQ0FBQ0osR0FBRyxDQUFDTixXQUFXVyxXQUFXO1FBQ3hGLGNBQWNsQixNQUFNbUIsU0FBUztJQUNqQztBQUNKO0FBQ0FwQiw4QkFBOEIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9HZXRSb2xlc1Jlc3BvbnNlLmpzP2Y5N2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdldFJvbGVzUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkdldFJvbGVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5HZXRSb2xlc1Jlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZHZXRSb2xlc1Jlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIFJvbGVzX2pzXzEgPSByZXF1aXJlKFwiLi9Sb2xlcy5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0Um9sZXNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRSb2xlc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mR2V0Um9sZXNSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRSb2xlc1Jlc3BvbnNlO1xuZnVuY3Rpb24gR2V0Um9sZXNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gR2V0Um9sZXNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRSb2xlc1Jlc3BvbnNlRnJvbUpTT04gPSBHZXRSb2xlc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBHZXRSb2xlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAncm9sZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdyb2xlcycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3JvbGVzJ10ubWFwKFJvbGVzX2pzXzEuUm9sZXNGcm9tSlNPTikpLFxuICAgICAgICAnbmV4dFRva2VuJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmV4dF90b2tlbicpID8gdW5kZWZpbmVkIDoganNvblsnbmV4dF90b2tlbiddLFxuICAgIH07XG59XG5leHBvcnRzLkdldFJvbGVzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gR2V0Um9sZXNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRSb2xlc1Jlc3BvbnNlVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICdtZXNzYWdlJzogdmFsdWUubWVzc2FnZSxcbiAgICAgICAgJ3JvbGVzJzogdmFsdWUucm9sZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5yb2xlcy5tYXAoUm9sZXNfanNfMS5Sb2xlc1RvSlNPTikpLFxuICAgICAgICAnbmV4dF90b2tlbic6IHZhbHVlLm5leHRUb2tlbixcbiAgICB9O1xufVxuZXhwb3J0cy5HZXRSb2xlc1Jlc3BvbnNlVG9KU09OID0gR2V0Um9sZXNSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldFJvbGVzUmVzcG9uc2VUb0pTT04iLCJHZXRSb2xlc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIkdldFJvbGVzUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZHZXRSb2xlc1Jlc3BvbnNlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIlJvbGVzX2pzXzEiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtYXAiLCJSb2xlc0Zyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJyb2xlcyIsIlJvbGVzVG9KU09OIiwibmV4dFRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRolesResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscriberResponse.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscriberResponse.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetSubscriberResponseToJSON = exports.GetSubscriberResponseFromJSONTyped = exports.GetSubscriberResponseFromJSON = exports.instanceOfGetSubscriberResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar Subscriber_js_1 = __webpack_require__(/*! ./Subscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Subscriber.js\");\n/**\n * Check if a given object implements the GetSubscriberResponse interface.\n */ function instanceOfGetSubscriberResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetSubscriberResponse = instanceOfGetSubscriberResponse;\nfunction GetSubscriberResponseFromJSON(json) {\n    return GetSubscriberResponseFromJSONTyped(json, false);\n}\nexports.GetSubscriberResponseFromJSON = GetSubscriberResponseFromJSON;\nfunction GetSubscriberResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"subscribers\": !(0, runtime_js_1.exists)(json, \"subscribers\") ? undefined : json[\"subscribers\"].map(Subscriber_js_1.SubscriberFromJSON)\n    };\n}\nexports.GetSubscriberResponseFromJSONTyped = GetSubscriberResponseFromJSONTyped;\nfunction GetSubscriberResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"subscribers\": value.subscribers === undefined ? undefined : value.subscribers.map(Subscriber_js_1.SubscriberToJSON)\n    };\n}\nexports.GetSubscriberResponseToJSON = GetSubscriberResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0U3Vic2NyaWJlclJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLGtCQUFrQkQsbUJBQU9BLENBQUMsMkdBQWlCO0FBQy9DOztDQUVDLEdBQ0QsU0FBU0YsZ0NBQWdDSixLQUFLO0lBQzFDLElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCx1Q0FBdUMsR0FBR0s7QUFDMUMsU0FBU0QsOEJBQThCTSxJQUFJO0lBQ3ZDLE9BQU9QLG1DQUFtQ08sTUFBTTtBQUNwRDtBQUNBVixxQ0FBcUMsR0FBR0k7QUFDeEMsU0FBU0QsbUNBQW1DTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUNqRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsZUFBZSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBYUYsSUFBSSxDQUFDLGNBQWMsQ0FBQ0ksR0FBRyxDQUFDTixnQkFBZ0JPLGtCQUFrQjtJQUMzSTtBQUNKO0FBQ0FmLDBDQUEwQyxHQUFHRztBQUM3QyxTQUFTRCw0QkFBNEJELEtBQUs7SUFDdEMsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNZSxJQUFJO1FBQ2xCLFdBQVdmLE1BQU1nQixPQUFPO1FBQ3hCLGVBQWVoQixNQUFNaUIsV0FBVyxLQUFLTixZQUFZQSxZQUFhWCxNQUFNaUIsV0FBVyxDQUFDSixHQUFHLENBQUNOLGdCQUFnQlcsZ0JBQWdCO0lBQ3hIO0FBQ0o7QUFDQW5CLG1DQUFtQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL0dldFN1YnNjcmliZXJSZXNwb25zZS5qcz81MzlmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRTdWJzY3JpYmVyUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLkdldFN1YnNjcmliZXJSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLkdldFN1YnNjcmliZXJSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0U3Vic2NyaWJlclJlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIFN1YnNjcmliZXJfanNfMSA9IHJlcXVpcmUoXCIuL1N1YnNjcmliZXIuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEdldFN1YnNjcmliZXJSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRTdWJzY3JpYmVyUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZHZXRTdWJzY3JpYmVyUmVzcG9uc2UgPSBpbnN0YW5jZU9mR2V0U3Vic2NyaWJlclJlc3BvbnNlO1xuZnVuY3Rpb24gR2V0U3Vic2NyaWJlclJlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBHZXRTdWJzY3JpYmVyUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuR2V0U3Vic2NyaWJlclJlc3BvbnNlRnJvbUpTT04gPSBHZXRTdWJzY3JpYmVyUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIEdldFN1YnNjcmliZXJSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ3N1YnNjcmliZXJzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnc3Vic2NyaWJlcnMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydzdWJzY3JpYmVycyddLm1hcChTdWJzY3JpYmVyX2pzXzEuU3Vic2NyaWJlckZyb21KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0U3Vic2NyaWJlclJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IEdldFN1YnNjcmliZXJSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBHZXRTdWJzY3JpYmVyUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnc3Vic2NyaWJlcnMnOiB2YWx1ZS5zdWJzY3JpYmVycyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnN1YnNjcmliZXJzLm1hcChTdWJzY3JpYmVyX2pzXzEuU3Vic2NyaWJlclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLkdldFN1YnNjcmliZXJSZXNwb25zZVRvSlNPTiA9IEdldFN1YnNjcmliZXJSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdldFN1YnNjcmliZXJSZXNwb25zZVRvSlNPTiIsIkdldFN1YnNjcmliZXJSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRTdWJzY3JpYmVyUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZHZXRTdWJzY3JpYmVyUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiU3Vic2NyaWJlcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiU3Vic2NyaWJlckZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJzdWJzY3JpYmVycyIsIlN1YnNjcmliZXJUb0pTT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscriberResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscribersResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscribersResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GetSubscribersResponseToJSON = exports.GetSubscribersResponseFromJSONTyped = exports.GetSubscribersResponseFromJSON = exports.instanceOfGetSubscribersResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar SubscribersSubscriber_js_1 = __webpack_require__(/*! ./SubscribersSubscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SubscribersSubscriber.js\");\n/**\n * Check if a given object implements the GetSubscribersResponse interface.\n */ function instanceOfGetSubscribersResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfGetSubscribersResponse = instanceOfGetSubscribersResponse;\nfunction GetSubscribersResponseFromJSON(json) {\n    return GetSubscribersResponseFromJSONTyped(json, false);\n}\nexports.GetSubscribersResponseFromJSON = GetSubscribersResponseFromJSON;\nfunction GetSubscribersResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"subscribers\": !(0, runtime_js_1.exists)(json, \"subscribers\") ? undefined : json[\"subscribers\"].map(SubscribersSubscriber_js_1.SubscribersSubscriberFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.GetSubscribersResponseFromJSONTyped = GetSubscribersResponseFromJSONTyped;\nfunction GetSubscribersResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"subscribers\": value.subscribers === undefined ? undefined : value.subscribers.map(SubscribersSubscriber_js_1.SubscribersSubscriberToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.GetSubscribersResponseToJSON = GetSubscribersResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0U3Vic2NyaWJlcnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUcsS0FBSztBQUM5SyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyw2QkFBNkJELG1CQUFPQSxDQUFDLGlJQUE0QjtBQUNyRTs7Q0FFQyxHQUNELFNBQVNGLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQk0sSUFBSTtJQUN4QyxPQUFPUCxvQ0FBb0NPLE1BQU07QUFDckQ7QUFDQVYsc0NBQXNDLEdBQUdJO0FBQ3pDLFNBQVNELG9DQUFvQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDbEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLGVBQWUsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQWFGLElBQUksQ0FBQyxjQUFjLENBQUNJLEdBQUcsQ0FBQ04sMkJBQTJCTyw2QkFBNkI7UUFDN0osYUFBYSxDQUFDLENBQUMsR0FBR1QsYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7SUFDL0Y7QUFDSjtBQUNBViwyQ0FBMkMsR0FBR0c7QUFDOUMsU0FBU0QsNkJBQTZCRCxLQUFLO0lBQ3ZDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTWUsSUFBSTtRQUNsQixXQUFXZixNQUFNZ0IsT0FBTztRQUN4QixlQUFlaEIsTUFBTWlCLFdBQVcsS0FBS04sWUFBWUEsWUFBYVgsTUFBTWlCLFdBQVcsQ0FBQ0osR0FBRyxDQUFDTiwyQkFBMkJXLDJCQUEyQjtRQUMxSSxjQUFjbEIsTUFBTW1CLFNBQVM7SUFDakM7QUFDSjtBQUNBcEIsb0NBQW9DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvR2V0U3Vic2NyaWJlcnNSZXNwb25zZS5qcz9jNGI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZXRTdWJzY3JpYmVyc1Jlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5HZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuR2V0U3Vic2NyaWJlcnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mR2V0U3Vic2NyaWJlcnNSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBTdWJzY3JpYmVyc1N1YnNjcmliZXJfanNfMSA9IHJlcXVpcmUoXCIuL1N1YnNjcmliZXJzU3Vic2NyaWJlci5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgR2V0U3Vic2NyaWJlcnNSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mR2V0U3Vic2NyaWJlcnNSZXNwb25zZSA9IGluc3RhbmNlT2ZHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlO1xuZnVuY3Rpb24gR2V0U3Vic2NyaWJlcnNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gR2V0U3Vic2NyaWJlcnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5HZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT04gPSBHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnc3Vic2NyaWJlcnMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdzdWJzY3JpYmVycycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3N1YnNjcmliZXJzJ10ubWFwKFN1YnNjcmliZXJzU3Vic2NyaWJlcl9qc18xLlN1YnNjcmliZXJzU3Vic2NyaWJlckZyb21KU09OKSksXG4gICAgICAgICduZXh0VG9rZW4nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduZXh0X3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWyduZXh0X3Rva2VuJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0U3Vic2NyaWJlcnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIEdldFN1YnNjcmliZXJzUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnc3Vic2NyaWJlcnMnOiB2YWx1ZS5zdWJzY3JpYmVycyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnN1YnNjcmliZXJzLm1hcChTdWJzY3JpYmVyc1N1YnNjcmliZXJfanNfMS5TdWJzY3JpYmVyc1N1YnNjcmliZXJUb0pTT04pKSxcbiAgICAgICAgJ25leHRfdG9rZW4nOiB2YWx1ZS5uZXh0VG9rZW4sXG4gICAgfTtcbn1cbmV4cG9ydHMuR2V0U3Vic2NyaWJlcnNSZXNwb25zZVRvSlNPTiA9IEdldFN1YnNjcmliZXJzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlVG9KU09OIiwiR2V0U3Vic2NyaWJlcnNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJHZXRTdWJzY3JpYmVyc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mR2V0U3Vic2NyaWJlcnNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJTdWJzY3JpYmVyc1N1YnNjcmliZXJfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIlN1YnNjcmliZXJzU3Vic2NyaWJlckZyb21KU09OIiwiY29kZSIsIm1lc3NhZ2UiLCJzdWJzY3JpYmVycyIsIlN1YnNjcmliZXJzU3Vic2NyaWJlclRvSlNPTiIsIm5leHRUb2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscribersResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/LogoutRedirectUrls.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/LogoutRedirectUrls.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.LogoutRedirectUrlsToJSON = exports.LogoutRedirectUrlsFromJSONTyped = exports.LogoutRedirectUrlsFromJSON = exports.instanceOfLogoutRedirectUrls = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the LogoutRedirectUrls interface.\n */ function instanceOfLogoutRedirectUrls(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfLogoutRedirectUrls = instanceOfLogoutRedirectUrls;\nfunction LogoutRedirectUrlsFromJSON(json) {\n    return LogoutRedirectUrlsFromJSONTyped(json, false);\n}\nexports.LogoutRedirectUrlsFromJSON = LogoutRedirectUrlsFromJSON;\nfunction LogoutRedirectUrlsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"redirectUrls\": !(0, runtime_js_1.exists)(json, \"redirect_urls\") ? undefined : json[\"redirect_urls\"]\n    };\n}\nexports.LogoutRedirectUrlsFromJSONTyped = LogoutRedirectUrlsFromJSONTyped;\nfunction LogoutRedirectUrlsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"redirect_urls\": value.redirectUrls\n    };\n}\nexports.LogoutRedirectUrlsToJSON = LogoutRedirectUrlsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvTG9nb3V0UmVkaXJlY3RVcmxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCSyxJQUFJO0lBQ3BDLE9BQU9OLGdDQUFnQ00sTUFBTTtBQUNqRDtBQUNBVCxrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILGdCQUFnQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLG1CQUFtQkUsWUFBWUYsSUFBSSxDQUFDLGdCQUFnQjtJQUN4RztBQUNKO0FBQ0FULHVDQUF1QyxHQUFHRztBQUMxQyxTQUFTRCx5QkFBeUJELEtBQUs7SUFDbkMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxpQkFBaUJBLE1BQU1ZLFlBQVk7SUFDdkM7QUFDSjtBQUNBYixnQ0FBZ0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Mb2dvdXRSZWRpcmVjdFVybHMuanM/OTZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nb3V0UmVkaXJlY3RVcmxzVG9KU09OID0gZXhwb3J0cy5Mb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Mb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZkxvZ291dFJlZGlyZWN0VXJscyA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgTG9nb3V0UmVkaXJlY3RVcmxzIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkxvZ291dFJlZGlyZWN0VXJscyh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZkxvZ291dFJlZGlyZWN0VXJscyA9IGluc3RhbmNlT2ZMb2dvdXRSZWRpcmVjdFVybHM7XG5mdW5jdGlvbiBMb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIExvZ291dFJlZGlyZWN0VXJsc0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Mb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTiA9IExvZ291dFJlZGlyZWN0VXJsc0Zyb21KU09OO1xuZnVuY3Rpb24gTG9nb3V0UmVkaXJlY3RVcmxzRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3JlZGlyZWN0VXJscyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3JlZGlyZWN0X3VybHMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3JlZGlyZWN0X3VybHMnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Mb2dvdXRSZWRpcmVjdFVybHNGcm9tSlNPTlR5cGVkID0gTG9nb3V0UmVkaXJlY3RVcmxzRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIExvZ291dFJlZGlyZWN0VXJsc1RvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3JlZGlyZWN0X3VybHMnOiB2YWx1ZS5yZWRpcmVjdFVybHMsXG4gICAgfTtcbn1cbmV4cG9ydHMuTG9nb3V0UmVkaXJlY3RVcmxzVG9KU09OID0gTG9nb3V0UmVkaXJlY3RVcmxzVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTG9nb3V0UmVkaXJlY3RVcmxzVG9KU09OIiwiTG9nb3V0UmVkaXJlY3RVcmxzRnJvbUpTT05UeXBlZCIsIkxvZ291dFJlZGlyZWN0VXJsc0Zyb21KU09OIiwiaW5zdGFuY2VPZkxvZ291dFJlZGlyZWN0VXJscyIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJyZWRpcmVjdFVybHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/LogoutRedirectUrls.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ModelError.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ModelError.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ModelErrorToJSON = exports.ModelErrorFromJSONTyped = exports.ModelErrorFromJSON = exports.instanceOfModelError = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ModelError interface.\n */ function instanceOfModelError(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfModelError = instanceOfModelError;\nfunction ModelErrorFromJSON(json) {\n    return ModelErrorFromJSONTyped(json, false);\n}\nexports.ModelErrorFromJSON = ModelErrorFromJSON;\nfunction ModelErrorFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"]\n    };\n}\nexports.ModelErrorFromJSONTyped = ModelErrorFromJSONTyped;\nfunction ModelErrorToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message\n    };\n}\nexports.ModelErrorToJSON = ModelErrorToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvTW9kZWxFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUdBLCtCQUErQixHQUFHQSwwQkFBMEIsR0FBR0EsNEJBQTRCLEdBQUcsS0FBSztBQUM5SCxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHFCQUFxQkosS0FBSztJQUMvQixJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsNEJBQTRCLEdBQUdLO0FBQy9CLFNBQVNELG1CQUFtQkssSUFBSTtJQUM1QixPQUFPTix3QkFBd0JNLE1BQU07QUFDekM7QUFDQVQsMEJBQTBCLEdBQUdJO0FBQzdCLFNBQVNELHdCQUF3Qk0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDdEQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO0lBQ3ZGO0FBQ0o7QUFDQVQsK0JBQStCLEdBQUdHO0FBQ2xDLFNBQVNELGlCQUFpQkQsS0FBSztJQUMzQixJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7UUFDbEIsV0FBV1osTUFBTWEsT0FBTztJQUM1QjtBQUNKO0FBQ0FkLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL01vZGVsRXJyb3IuanM/MjUyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTW9kZWxFcnJvclRvSlNPTiA9IGV4cG9ydHMuTW9kZWxFcnJvckZyb21KU09OVHlwZWQgPSBleHBvcnRzLk1vZGVsRXJyb3JGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZk1vZGVsRXJyb3IgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIE1vZGVsRXJyb3IgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mTW9kZWxFcnJvcih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZk1vZGVsRXJyb3IgPSBpbnN0YW5jZU9mTW9kZWxFcnJvcjtcbmZ1bmN0aW9uIE1vZGVsRXJyb3JGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIE1vZGVsRXJyb3JGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuTW9kZWxFcnJvckZyb21KU09OID0gTW9kZWxFcnJvckZyb21KU09OO1xuZnVuY3Rpb24gTW9kZWxFcnJvckZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Nb2RlbEVycm9yRnJvbUpTT05UeXBlZCA9IE1vZGVsRXJyb3JGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gTW9kZWxFcnJvclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgfTtcbn1cbmV4cG9ydHMuTW9kZWxFcnJvclRvSlNPTiA9IE1vZGVsRXJyb3JUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJNb2RlbEVycm9yVG9KU09OIiwiTW9kZWxFcnJvckZyb21KU09OVHlwZWQiLCJNb2RlbEVycm9yRnJvbUpTT04iLCJpbnN0YW5jZU9mTW9kZWxFcnJvciIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJjb2RlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ModelError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Organization.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Organization.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationToJSON = exports.OrganizationFromJSONTyped = exports.OrganizationFromJSON = exports.instanceOfOrganization = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Organization interface.\n */ function instanceOfOrganization(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganization = instanceOfOrganization;\nfunction OrganizationFromJSON(json) {\n    return OrganizationFromJSONTyped(json, false);\n}\nexports.OrganizationFromJSON = OrganizationFromJSON;\nfunction OrganizationFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"isDefault\": !(0, runtime_js_1.exists)(json, \"is_default\") ? undefined : json[\"is_default\"],\n        \"externalId\": !(0, runtime_js_1.exists)(json, \"external_id\") ? undefined : json[\"external_id\"]\n    };\n}\nexports.OrganizationFromJSONTyped = OrganizationFromJSONTyped;\nfunction OrganizationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"name\": value.name,\n        \"is_default\": value.isDefault,\n        \"external_id\": value.externalId\n    };\n}\nexports.OrganizationToJSON = OrganizationToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwwQkFBMEIsR0FBR0EsaUNBQWlDLEdBQUdBLDRCQUE0QixHQUFHQSw4QkFBOEIsR0FBRyxLQUFLO0FBQ3RJLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsdUJBQXVCSixLQUFLO0lBQ2pDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiw4QkFBOEIsR0FBR0s7QUFDakMsU0FBU0QscUJBQXFCSyxJQUFJO0lBQzlCLE9BQU9OLDBCQUEwQk0sTUFBTTtBQUMzQztBQUNBVCw0QkFBNEIsR0FBR0k7QUFDL0IsU0FBU0QsMEJBQTBCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUN4RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsYUFBYSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7UUFDM0YsY0FBYyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7SUFDbEc7QUFDSjtBQUNBVCxpQ0FBaUMsR0FBR0c7QUFDcEMsU0FBU0QsbUJBQW1CRCxLQUFLO0lBQzdCLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVksSUFBSTtRQUNsQixRQUFRWixNQUFNYSxJQUFJO1FBQ2xCLGNBQWNiLE1BQU1jLFNBQVM7UUFDN0IsZUFBZWQsTUFBTWUsVUFBVTtJQUNuQztBQUNKO0FBQ0FoQiwwQkFBMEIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Pcmdhbml6YXRpb24uanM/MWRhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3JnYW5pemF0aW9uVG9KU09OID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Gcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Gcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvbiA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgT3JnYW5pemF0aW9uIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZk9yZ2FuaXphdGlvbih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvbiA9IGluc3RhbmNlT2ZPcmdhbml6YXRpb247XG5mdW5jdGlvbiBPcmdhbml6YXRpb25Gcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIE9yZ2FuaXphdGlvbkZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Gcm9tSlNPTiA9IE9yZ2FuaXphdGlvbkZyb21KU09OO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjb2RlJykgPyB1bmRlZmluZWQgOiBqc29uWydjb2RlJ10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnaXNEZWZhdWx0JzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfZGVmYXVsdCcpID8gdW5kZWZpbmVkIDoganNvblsnaXNfZGVmYXVsdCddLFxuICAgICAgICAnZXh0ZXJuYWxJZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2V4dGVybmFsX2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydleHRlcm5hbF9pZCddLFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvbkZyb21KU09OVHlwZWQgPSBPcmdhbml6YXRpb25Gcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICAgICAgJ2lzX2RlZmF1bHQnOiB2YWx1ZS5pc0RlZmF1bHQsXG4gICAgICAgICdleHRlcm5hbF9pZCc6IHZhbHVlLmV4dGVybmFsSWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuT3JnYW5pemF0aW9uVG9KU09OID0gT3JnYW5pemF0aW9uVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT3JnYW5pemF0aW9uVG9KU09OIiwiT3JnYW5pemF0aW9uRnJvbUpTT05UeXBlZCIsIk9yZ2FuaXphdGlvbkZyb21KU09OIiwiaW5zdGFuY2VPZk9yZ2FuaXphdGlvbiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJjb2RlIiwibmFtZSIsImlzRGVmYXVsdCIsImV4dGVybmFsSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Organization.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUser.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUser.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserToJSON = exports.OrganizationUserFromJSONTyped = exports.OrganizationUserFromJSON = exports.instanceOfOrganizationUser = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the OrganizationUser interface.\n */ function instanceOfOrganizationUser(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUser = instanceOfOrganizationUser;\nfunction OrganizationUserFromJSON(json) {\n    return OrganizationUserFromJSONTyped(json, false);\n}\nexports.OrganizationUserFromJSON = OrganizationUserFromJSON;\nfunction OrganizationUserFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"fullName\": !(0, runtime_js_1.exists)(json, \"full_name\") ? undefined : json[\"full_name\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"]\n    };\n}\nexports.OrganizationUserFromJSONTyped = OrganizationUserFromJSONTyped;\nfunction OrganizationUserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"email\": value.email,\n        \"full_name\": value.fullName,\n        \"last_name\": value.lastName,\n        \"first_name\": value.firstName,\n        \"roles\": value.roles\n    };\n}\nexports.OrganizationUserToJSON = OrganizationUserToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsOEJBQThCLEdBQUdBLHFDQUFxQyxHQUFHQSxnQ0FBZ0MsR0FBR0Esa0NBQWtDLEdBQUcsS0FBSztBQUN0SixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLDJCQUEyQkosS0FBSztJQUNyQyxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsa0NBQWtDLEdBQUdLO0FBQ3JDLFNBQVNELHlCQUF5QkssSUFBSTtJQUNsQyxPQUFPTiw4QkFBOEJNLE1BQU07QUFDL0M7QUFDQVQsZ0NBQWdDLEdBQUdJO0FBQ25DLFNBQVNELDhCQUE4Qk0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDNUQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsU0FBUyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQVlGLElBQUksQ0FBQyxRQUFRO1FBQzdFLFlBQVksQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtRQUN4RixZQUFZLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sZUFBZUUsWUFBWUYsSUFBSSxDQUFDLFlBQVk7UUFDeEYsYUFBYSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7UUFDM0YsU0FBUyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQVlGLElBQUksQ0FBQyxRQUFRO0lBQ2pGO0FBQ0o7QUFDQVQscUNBQXFDLEdBQUdHO0FBQ3hDLFNBQVNELHVCQUF1QkQsS0FBSztJQUNqQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxTQUFTWixNQUFNYSxLQUFLO1FBQ3BCLGFBQWFiLE1BQU1jLFFBQVE7UUFDM0IsYUFBYWQsTUFBTWUsUUFBUTtRQUMzQixjQUFjZixNQUFNZ0IsU0FBUztRQUM3QixTQUFTaEIsTUFBTWlCLEtBQUs7SUFDeEI7QUFDSjtBQUNBbEIsOEJBQThCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlci5qcz9lMDJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyVG9KU09OID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuT3JnYW5pemF0aW9uVXNlckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgT3JnYW5pemF0aW9uVXNlciBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlciA9IGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlckZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gT3JnYW5pemF0aW9uVXNlckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyRnJvbUpTT04gPSBPcmdhbml6YXRpb25Vc2VyRnJvbUpTT047XG5mdW5jdGlvbiBPcmdhbml6YXRpb25Vc2VyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdlbWFpbCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2VtYWlsJykgPyB1bmRlZmluZWQgOiBqc29uWydlbWFpbCddLFxuICAgICAgICAnZnVsbE5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdmdWxsX25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Z1bGxfbmFtZSddLFxuICAgICAgICAnbGFzdE5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdsYXN0X25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2xhc3RfbmFtZSddLFxuICAgICAgICAnZmlyc3ROYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZmlyc3RfbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnZmlyc3RfbmFtZSddLFxuICAgICAgICAncm9sZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdyb2xlcycpID8gdW5kZWZpbmVkIDoganNvblsncm9sZXMnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyRnJvbUpTT05UeXBlZCA9IE9yZ2FuaXphdGlvblVzZXJGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdlbWFpbCc6IHZhbHVlLmVtYWlsLFxuICAgICAgICAnZnVsbF9uYW1lJzogdmFsdWUuZnVsbE5hbWUsXG4gICAgICAgICdsYXN0X25hbWUnOiB2YWx1ZS5sYXN0TmFtZSxcbiAgICAgICAgJ2ZpcnN0X25hbWUnOiB2YWx1ZS5maXJzdE5hbWUsXG4gICAgICAgICdyb2xlcyc6IHZhbHVlLnJvbGVzLFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJUb0pTT04gPSBPcmdhbml6YXRpb25Vc2VyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT3JnYW5pemF0aW9uVXNlclRvSlNPTiIsIk9yZ2FuaXphdGlvblVzZXJGcm9tSlNPTlR5cGVkIiwiT3JnYW5pemF0aW9uVXNlckZyb21KU09OIiwiaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJlbWFpbCIsImZ1bGxOYW1lIiwibGFzdE5hbWUiLCJmaXJzdE5hbWUiLCJyb2xlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermission.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermission.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserPermissionToJSON = exports.OrganizationUserPermissionFromJSONTyped = exports.OrganizationUserPermissionFromJSON = exports.instanceOfOrganizationUserPermission = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar OrganizationUserPermissionRolesInner_js_1 = __webpack_require__(/*! ./OrganizationUserPermissionRolesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermissionRolesInner.js\");\n/**\n * Check if a given object implements the OrganizationUserPermission interface.\n */ function instanceOfOrganizationUserPermission(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUserPermission = instanceOfOrganizationUserPermission;\nfunction OrganizationUserPermissionFromJSON(json) {\n    return OrganizationUserPermissionFromJSONTyped(json, false);\n}\nexports.OrganizationUserPermissionFromJSON = OrganizationUserPermissionFromJSON;\nfunction OrganizationUserPermissionFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"].map(OrganizationUserPermissionRolesInner_js_1.OrganizationUserPermissionRolesInnerFromJSON)\n    };\n}\nexports.OrganizationUserPermissionFromJSONTyped = OrganizationUserPermissionFromJSONTyped;\nfunction OrganizationUserPermissionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"description\": value.description,\n        \"roles\": value.roles === undefined ? undefined : value.roles.map(OrganizationUserPermissionRolesInner_js_1.OrganizationUserPermissionRolesInnerToJSON)\n    };\n}\nexports.OrganizationUserPermissionToJSON = OrganizationUserPermissionToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdDQUF3QyxHQUFHQSwrQ0FBK0MsR0FBR0EsMENBQTBDLEdBQUdBLDRDQUE0QyxHQUFHLEtBQUs7QUFDOUwsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUMsSUFBSUMsNENBQTRDRCxtQkFBT0EsQ0FBQywrSkFBMkM7QUFDbkc7O0NBRUMsR0FDRCxTQUFTRixxQ0FBcUNKLEtBQUs7SUFDL0MsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULDRDQUE0QyxHQUFHSztBQUMvQyxTQUFTRCxtQ0FBbUNNLElBQUk7SUFDNUMsT0FBT1Asd0NBQXdDTyxNQUFNO0FBQ3pEO0FBQ0FWLDBDQUEwQyxHQUFHSTtBQUM3QyxTQUFTRCx3Q0FBd0NPLElBQUksRUFBRUMsbUJBQW1CO0lBQ3RFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLE9BQU8sQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsZUFBZSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDL0YsU0FBUyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFdBQVdFLFlBQWFGLElBQUksQ0FBQyxRQUFRLENBQUNJLEdBQUcsQ0FBQ04sMENBQTBDTyw0Q0FBNEM7SUFDN0s7QUFDSjtBQUNBZiwrQ0FBK0MsR0FBR0c7QUFDbEQsU0FBU0QsaUNBQWlDRCxLQUFLO0lBQzNDLElBQUlBLFVBQVVXLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlYLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTWUsRUFBRTtRQUNkLE9BQU9mLE1BQU1nQixHQUFHO1FBQ2hCLFFBQVFoQixNQUFNaUIsSUFBSTtRQUNsQixlQUFlakIsTUFBTWtCLFdBQVc7UUFDaEMsU0FBU2xCLE1BQU1tQixLQUFLLEtBQUtSLFlBQVlBLFlBQWFYLE1BQU1tQixLQUFLLENBQUNOLEdBQUcsQ0FBQ04sMENBQTBDYSwwQ0FBMEM7SUFDMUo7QUFDSjtBQUNBckIsd0NBQXdDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24uanM/MTY1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Ub0pTT04gPSBleHBvcnRzLk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lcl9qc18xID0gcmVxdWlyZShcIi4vT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uID0gaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT04gPSBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbkZyb21KU09OO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ2tleSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2tleScpID8gdW5kZWZpbmVkIDoganNvblsna2V5J10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdkZXNjcmlwdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgJ3JvbGVzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncm9sZXMnKSA/IHVuZGVmaW5lZCA6IChqc29uWydyb2xlcyddLm1hcChPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJfanNfMS5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT05UeXBlZCA9IE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ3JvbGVzJzogdmFsdWUucm9sZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5yb2xlcy5tYXAoT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyX2pzXzEuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyVG9KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Ub0pTT04gPSBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uVG9KU09OIiwiT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTlR5cGVkIiwiT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Gcm9tSlNPTiIsImluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lckZyb21KU09OIiwiaWQiLCJrZXkiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJyb2xlcyIsIk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lclRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermission.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermissionRolesInner.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermissionRolesInner.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserPermissionRolesInnerToJSON = exports.OrganizationUserPermissionRolesInnerFromJSONTyped = exports.OrganizationUserPermissionRolesInnerFromJSON = exports.instanceOfOrganizationUserPermissionRolesInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the OrganizationUserPermissionRolesInner interface.\n */ function instanceOfOrganizationUserPermissionRolesInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUserPermissionRolesInner = instanceOfOrganizationUserPermissionRolesInner;\nfunction OrganizationUserPermissionRolesInnerFromJSON(json) {\n    return OrganizationUserPermissionRolesInnerFromJSONTyped(json, false);\n}\nexports.OrganizationUserPermissionRolesInnerFromJSON = OrganizationUserPermissionRolesInnerFromJSON;\nfunction OrganizationUserPermissionRolesInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"]\n    };\n}\nexports.OrganizationUserPermissionRolesInnerFromJSONTyped = OrganizationUserPermissionRolesInnerFromJSONTyped;\nfunction OrganizationUserPermissionRolesInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key\n    };\n}\nexports.OrganizationUserPermissionRolesInnerToJSON = OrganizationUserPermissionRolesInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrREFBa0QsR0FBR0EseURBQXlELEdBQUdBLG9EQUFvRCxHQUFHQSxzREFBc0QsR0FBRyxLQUFLO0FBQ3RPLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsK0NBQStDSixLQUFLO0lBQ3pELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixzREFBc0QsR0FBR0s7QUFDekQsU0FBU0QsNkNBQTZDSyxJQUFJO0lBQ3RELE9BQU9OLGtEQUFrRE0sTUFBTTtBQUNuRTtBQUNBVCxvREFBb0QsR0FBR0k7QUFDdkQsU0FBU0Qsa0RBQWtETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNoRixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxPQUFPLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sU0FBU0UsWUFBWUYsSUFBSSxDQUFDLE1BQU07SUFDM0U7QUFDSjtBQUNBVCx5REFBeUQsR0FBR0c7QUFDNUQsU0FBU0QsMkNBQTJDRCxLQUFLO0lBQ3JELElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLE9BQU9aLE1BQU1hLEdBQUc7SUFDcEI7QUFDSjtBQUNBZCxrREFBa0QsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXIuanM/YzQ4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyVG9KU09OID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lcih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lciA9IGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXI7XG5mdW5jdGlvbiBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTiA9IE9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lckZyb21KU09OO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uUm9sZXNJbm5lckZyb21KU09OVHlwZWQgPSBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICB9O1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJUb0pTT04gPSBPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJUb0pTT04iLCJPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvblJvbGVzSW5uZXJGcm9tSlNPTlR5cGVkIiwiT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyRnJvbUpTT04iLCJpbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb25Sb2xlc0lubmVyIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermissionRolesInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRole.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRole.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserRoleToJSON = exports.OrganizationUserRoleFromJSONTyped = exports.OrganizationUserRoleFromJSON = exports.instanceOfOrganizationUserRole = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the OrganizationUserRole interface.\n */ function instanceOfOrganizationUserRole(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUserRole = instanceOfOrganizationUserRole;\nfunction OrganizationUserRoleFromJSON(json) {\n    return OrganizationUserRoleFromJSONTyped(json, false);\n}\nexports.OrganizationUserRoleFromJSON = OrganizationUserRoleFromJSON;\nfunction OrganizationUserRoleFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"]\n    };\n}\nexports.OrganizationUserRoleFromJSONTyped = OrganizationUserRoleFromJSONTyped;\nfunction OrganizationUserRoleToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name\n    };\n}\nexports.OrganizationUserRoleToJSON = OrganizationUserRoleToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclJvbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtDQUFrQyxHQUFHQSx5Q0FBeUMsR0FBR0Esb0NBQW9DLEdBQUdBLHNDQUFzQyxHQUFHLEtBQUs7QUFDdEssSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiwrQkFBK0JKLEtBQUs7SUFDekMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNDQUFzQyxHQUFHSztBQUN6QyxTQUFTRCw2QkFBNkJLLElBQUk7SUFDdEMsT0FBT04sa0NBQWtDTSxNQUFNO0FBQ25EO0FBQ0FULG9DQUFvQyxHQUFHSTtBQUN2QyxTQUFTRCxrQ0FBa0NNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2hFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87SUFDOUU7QUFDSjtBQUNBVCx5Q0FBeUMsR0FBR0c7QUFDNUMsU0FBU0QsMkJBQTJCRCxLQUFLO0lBQ3JDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLE9BQU9aLE1BQU1hLEdBQUc7UUFDaEIsUUFBUWIsTUFBTWMsSUFBSTtJQUN0QjtBQUNKO0FBQ0FmLGtDQUFrQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL09yZ2FuaXphdGlvblVzZXJSb2xlLmpzPzIyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlVG9KU09OID0gZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgT3JnYW5pemF0aW9uVXNlclJvbGUgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlclJvbGUodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZSA9IGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZTtcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJSb2xlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBPcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OID0gT3JnYW5pemF0aW9uVXNlclJvbGVGcm9tSlNPTjtcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJSb2xlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OVHlwZWQgPSBPcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBPcmdhbml6YXRpb25Vc2VyUm9sZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdrZXknOiB2YWx1ZS5rZXksXG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUm9sZVRvSlNPTiA9IE9yZ2FuaXphdGlvblVzZXJSb2xlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT3JnYW5pemF0aW9uVXNlclJvbGVUb0pTT04iLCJPcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OVHlwZWQiLCJPcmdhbml6YXRpb25Vc2VyUm9sZUZyb21KU09OIiwiaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJSb2xlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwia2V5IiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRole.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissions.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissions.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserRolePermissionsToJSON = exports.OrganizationUserRolePermissionsFromJSONTyped = exports.OrganizationUserRolePermissionsFromJSON = exports.instanceOfOrganizationUserRolePermissions = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar OrganizationUserRolePermissionsPermissions_js_1 = __webpack_require__(/*! ./OrganizationUserRolePermissionsPermissions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissionsPermissions.js\");\n/**\n * Check if a given object implements the OrganizationUserRolePermissions interface.\n */ function instanceOfOrganizationUserRolePermissions(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUserRolePermissions = instanceOfOrganizationUserRolePermissions;\nfunction OrganizationUserRolePermissionsFromJSON(json) {\n    return OrganizationUserRolePermissionsFromJSONTyped(json, false);\n}\nexports.OrganizationUserRolePermissionsFromJSON = OrganizationUserRolePermissionsFromJSON;\nfunction OrganizationUserRolePermissionsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"role\": !(0, runtime_js_1.exists)(json, \"role\") ? undefined : json[\"role\"],\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : (0, OrganizationUserRolePermissionsPermissions_js_1.OrganizationUserRolePermissionsPermissionsFromJSON)(json[\"permissions\"])\n    };\n}\nexports.OrganizationUserRolePermissionsFromJSONTyped = OrganizationUserRolePermissionsFromJSONTyped;\nfunction OrganizationUserRolePermissionsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"role\": value.role,\n        \"permissions\": (0, OrganizationUserRolePermissionsPermissions_js_1.OrganizationUserRolePermissionsPermissionsToJSON)(value.permissions)\n    };\n}\nexports.OrganizationUserRolePermissionsToJSON = OrganizationUserRolePermissionsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNkNBQTZDLEdBQUdBLG9EQUFvRCxHQUFHQSwrQ0FBK0MsR0FBR0EsaURBQWlELEdBQUcsS0FBSztBQUNsTixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxrREFBa0RELG1CQUFPQSxDQUFDLDJLQUFpRDtBQUMvRzs7Q0FFQyxHQUNELFNBQVNGLDBDQUEwQ0osS0FBSztJQUNwRCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsaURBQWlELEdBQUdLO0FBQ3BELFNBQVNELHdDQUF3Q00sSUFBSTtJQUNqRCxPQUFPUCw2Q0FBNkNPLE1BQU07QUFDOUQ7QUFDQVYsK0NBQStDLEdBQUdJO0FBQ2xELFNBQVNELDZDQUE2Q08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDM0UsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsUUFBUSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVksQ0FBQyxHQUFHSixnREFBZ0RNLGtEQUFrRCxFQUFFSixJQUFJLENBQUMsY0FBYztJQUMzTTtBQUNKO0FBQ0FWLG9EQUFvRCxHQUFHRztBQUN2RCxTQUFTRCxzQ0FBc0NELEtBQUs7SUFDaEQsSUFBSUEsVUFBVVcsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVgsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNYyxFQUFFO1FBQ2QsUUFBUWQsTUFBTWUsSUFBSTtRQUNsQixlQUFlLENBQUMsR0FBR1IsZ0RBQWdEUyxnREFBZ0QsRUFBRWhCLE1BQU1pQixXQUFXO0lBQzFJO0FBQ0o7QUFDQWxCLDZDQUE2QyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL09yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnMuanM/NTIwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1RvSlNPTiA9IGV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQgPSBleHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnMgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zX2pzXzEgPSByZXF1aXJlKFwiLi9Pcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnMuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnMgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9ucyh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnMgPSBpbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9ucztcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc0Zyb21KU09OID0gT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc0Zyb21KU09OO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAncm9sZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3JvbGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3JvbGUnXSxcbiAgICAgICAgJ3Blcm1pc3Npb25zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncGVybWlzc2lvbnMnKSA/IHVuZGVmaW5lZCA6ICgwLCBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNfanNfMS5Pcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNGcm9tSlNPTikoanNvblsncGVybWlzc2lvbnMnXSksXG4gICAgfTtcbn1cbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQgPSBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAncm9sZSc6IHZhbHVlLnJvbGUsXG4gICAgICAgICdwZXJtaXNzaW9ucyc6ICgwLCBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNfanNfMS5Pcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNUb0pTT04pKHZhbHVlLnBlcm1pc3Npb25zKSxcbiAgICB9O1xufVxuZXhwb3J0cy5Pcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zVG9KU09OID0gT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1RvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNUb0pTT04iLCJPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zRnJvbUpTT05UeXBlZCIsIk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNGcm9tSlNPTiIsImluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsIk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc19qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zRnJvbUpTT04iLCJpZCIsInJvbGUiLCJPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNUb0pTT04iLCJwZXJtaXNzaW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissionsPermissions.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissionsPermissions.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OrganizationUserRolePermissionsPermissionsToJSON = exports.OrganizationUserRolePermissionsPermissionsFromJSONTyped = exports.OrganizationUserRolePermissionsPermissionsFromJSON = exports.instanceOfOrganizationUserRolePermissionsPermissions = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the OrganizationUserRolePermissionsPermissions interface.\n */ function instanceOfOrganizationUserRolePermissionsPermissions(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfOrganizationUserRolePermissionsPermissions = instanceOfOrganizationUserRolePermissionsPermissions;\nfunction OrganizationUserRolePermissionsPermissionsFromJSON(json) {\n    return OrganizationUserRolePermissionsPermissionsFromJSONTyped(json, false);\n}\nexports.OrganizationUserRolePermissionsPermissionsFromJSON = OrganizationUserRolePermissionsPermissionsFromJSON;\nfunction OrganizationUserRolePermissionsPermissionsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"]\n    };\n}\nexports.OrganizationUserRolePermissionsPermissionsFromJSONTyped = OrganizationUserRolePermissionsPermissionsFromJSONTyped;\nfunction OrganizationUserRolePermissionsPermissionsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"key\": value.key\n    };\n}\nexports.OrganizationUserRolePermissionsPermissionsToJSON = OrganizationUserRolePermissionsPermissionsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx3REFBd0QsR0FBR0EsK0RBQStELEdBQUdBLDBEQUEwRCxHQUFHQSw0REFBNEQsR0FBRyxLQUFLO0FBQzlQLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YscURBQXFESixLQUFLO0lBQy9ELElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiw0REFBNEQsR0FBR0s7QUFDL0QsU0FBU0QsbURBQW1ESyxJQUFJO0lBQzVELE9BQU9OLHdEQUF3RE0sTUFBTTtBQUN6RTtBQUNBVCwwREFBMEQsR0FBR0k7QUFDN0QsU0FBU0Qsd0RBQXdETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUN0RixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtJQUMzRTtBQUNKO0FBQ0FULCtEQUErRCxHQUFHRztBQUNsRSxTQUFTRCxpREFBaURELEtBQUs7SUFDM0QsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxPQUFPQSxNQUFNWSxHQUFHO0lBQ3BCO0FBQ0o7QUFDQWIsd0RBQXdELEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zLmpzP2NmYzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc1RvSlNPTiA9IGV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnMgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9ucyBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnModmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnMgPSBpbnN0YW5jZU9mT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zRnJvbUpTT04gPSBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNGcm9tSlNPTjtcbmZ1bmN0aW9uIE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQgPSBPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gT3JnYW5pemF0aW9uVXNlclJvbGVQZXJtaXNzaW9uc1Blcm1pc3Npb25zVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgIH07XG59XG5leHBvcnRzLk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc1RvSlNPTiA9IE9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc1RvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc1RvSlNPTiIsIk9yZ2FuaXphdGlvblVzZXJSb2xlUGVybWlzc2lvbnNQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQiLCJPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnNGcm9tSlNPTiIsImluc3RhbmNlT2ZPcmdhbml6YXRpb25Vc2VyUm9sZVBlcm1pc3Npb25zUGVybWlzc2lvbnMiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissionsPermissions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Permissions.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Permissions.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PermissionsToJSON = exports.PermissionsFromJSONTyped = exports.PermissionsFromJSON = exports.instanceOfPermissions = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Permissions interface.\n */ function instanceOfPermissions(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfPermissions = instanceOfPermissions;\nfunction PermissionsFromJSON(json) {\n    return PermissionsFromJSONTyped(json, false);\n}\nexports.PermissionsFromJSON = PermissionsFromJSON;\nfunction PermissionsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"]\n    };\n}\nexports.PermissionsFromJSONTyped = PermissionsFromJSONTyped;\nfunction PermissionsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"description\": value.description\n    };\n}\nexports.PermissionsToJSON = PermissionsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUGVybWlzc2lvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHlCQUF5QixHQUFHQSxnQ0FBZ0MsR0FBR0EsMkJBQTJCLEdBQUdBLDZCQUE2QixHQUFHLEtBQUs7QUFDbEksSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixzQkFBc0JKLEtBQUs7SUFDaEMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDZCQUE2QixHQUFHSztBQUNoQyxTQUFTRCxvQkFBb0JLLElBQUk7SUFDN0IsT0FBT04seUJBQXlCTSxNQUFNO0FBQzFDO0FBQ0FULDJCQUEyQixHQUFHSTtBQUM5QixTQUFTRCx5QkFBeUJNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3ZELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsZUFBZSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7SUFDbkc7QUFDSjtBQUNBVCxnQ0FBZ0MsR0FBR0c7QUFDbkMsU0FBU0Qsa0JBQWtCRCxLQUFLO0lBQzVCLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLE9BQU9aLE1BQU1hLEdBQUc7UUFDaEIsUUFBUWIsTUFBTWMsSUFBSTtRQUNsQixlQUFlZCxNQUFNZSxXQUFXO0lBQ3BDO0FBQ0o7QUFDQWhCLHlCQUF5QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1Blcm1pc3Npb25zLmpzPzBjNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBlcm1pc3Npb25zVG9KU09OID0gZXhwb3J0cy5QZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQgPSBleHBvcnRzLlBlcm1pc3Npb25zRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZQZXJtaXNzaW9ucyA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgUGVybWlzc2lvbnMgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mUGVybWlzc2lvbnModmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZQZXJtaXNzaW9ucyA9IGluc3RhbmNlT2ZQZXJtaXNzaW9ucztcbmZ1bmN0aW9uIFBlcm1pc3Npb25zRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBQZXJtaXNzaW9uc0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5QZXJtaXNzaW9uc0Zyb21KU09OID0gUGVybWlzc2lvbnNGcm9tSlNPTjtcbmZ1bmN0aW9uIFBlcm1pc3Npb25zRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGVzY3JpcHRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuUGVybWlzc2lvbnNGcm9tSlNPTlR5cGVkID0gUGVybWlzc2lvbnNGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gUGVybWlzc2lvbnNUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdkZXNjcmlwdGlvbic6IHZhbHVlLmRlc2NyaXB0aW9uLFxuICAgIH07XG59XG5leHBvcnRzLlBlcm1pc3Npb25zVG9KU09OID0gUGVybWlzc2lvbnNUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJQZXJtaXNzaW9uc1RvSlNPTiIsIlBlcm1pc3Npb25zRnJvbUpTT05UeXBlZCIsIlBlcm1pc3Npb25zRnJvbUpTT04iLCJpbnN0YW5jZU9mUGVybWlzc2lvbnMiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJrZXkiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Permissions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Property.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Property.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PropertyToJSON = exports.PropertyFromJSONTyped = exports.PropertyFromJSON = exports.instanceOfProperty = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Property interface.\n */ function instanceOfProperty(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfProperty = instanceOfProperty;\nfunction PropertyFromJSON(json) {\n    return PropertyFromJSONTyped(json, false);\n}\nexports.PropertyFromJSON = PropertyFromJSON;\nfunction PropertyFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"isPrivate\": !(0, runtime_js_1.exists)(json, \"is_private\") ? undefined : json[\"is_private\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"isKindeProperty\": !(0, runtime_js_1.exists)(json, \"is_kinde_property\") ? undefined : json[\"is_kinde_property\"]\n    };\n}\nexports.PropertyFromJSONTyped = PropertyFromJSONTyped;\nfunction PropertyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"is_private\": value.isPrivate,\n        \"description\": value.description,\n        \"is_kinde_property\": value.isKindeProperty\n    };\n}\nexports.PropertyToJSON = PropertyToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUHJvcGVydHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHQSw2QkFBNkIsR0FBR0Esd0JBQXdCLEdBQUdBLDBCQUEwQixHQUFHLEtBQUs7QUFDdEgsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixtQkFBbUJKLEtBQUs7SUFDN0IsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDBCQUEwQixHQUFHSztBQUM3QixTQUFTRCxpQkFBaUJLLElBQUk7SUFDMUIsT0FBT04sc0JBQXNCTSxNQUFNO0FBQ3ZDO0FBQ0FULHdCQUF3QixHQUFHSTtBQUMzQixTQUFTRCxzQkFBc0JNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3BELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsYUFBYSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7UUFDM0YsZUFBZSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDL0YsbUJBQW1CLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sdUJBQXVCRSxZQUFZRixJQUFJLENBQUMsb0JBQW9CO0lBQ25IO0FBQ0o7QUFDQVQsNkJBQTZCLEdBQUdHO0FBQ2hDLFNBQVNELGVBQWVELEtBQUs7SUFDekIsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsT0FBT1osTUFBTWEsR0FBRztRQUNoQixRQUFRYixNQUFNYyxJQUFJO1FBQ2xCLGNBQWNkLE1BQU1lLFNBQVM7UUFDN0IsZUFBZWYsTUFBTWdCLFdBQVc7UUFDaEMscUJBQXFCaEIsTUFBTWlCLGVBQWU7SUFDOUM7QUFDSjtBQUNBbEIsc0JBQXNCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUHJvcGVydHkuanM/MmM0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvcGVydHlUb0pTT04gPSBleHBvcnRzLlByb3BlcnR5RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuUHJvcGVydHlGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlByb3BlcnR5ID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBQcm9wZXJ0eSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZQcm9wZXJ0eSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlByb3BlcnR5ID0gaW5zdGFuY2VPZlByb3BlcnR5O1xuZnVuY3Rpb24gUHJvcGVydHlGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFByb3BlcnR5RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlByb3BlcnR5RnJvbUpTT04gPSBQcm9wZXJ0eUZyb21KU09OO1xuZnVuY3Rpb24gUHJvcGVydHlGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ2tleSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2tleScpID8gdW5kZWZpbmVkIDoganNvblsna2V5J10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnaXNQcml2YXRlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfcHJpdmF0ZScpID8gdW5kZWZpbmVkIDoganNvblsnaXNfcHJpdmF0ZSddLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdkZXNjcmlwdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgJ2lzS2luZGVQcm9wZXJ0eSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lzX2tpbmRlX3Byb3BlcnR5JykgPyB1bmRlZmluZWQgOiBqc29uWydpc19raW5kZV9wcm9wZXJ0eSddLFxuICAgIH07XG59XG5leHBvcnRzLlByb3BlcnR5RnJvbUpTT05UeXBlZCA9IFByb3BlcnR5RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFByb3BlcnR5VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnaXNfcHJpdmF0ZSc6IHZhbHVlLmlzUHJpdmF0ZSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogdmFsdWUuZGVzY3JpcHRpb24sXG4gICAgICAgICdpc19raW5kZV9wcm9wZXJ0eSc6IHZhbHVlLmlzS2luZGVQcm9wZXJ0eSxcbiAgICB9O1xufVxuZXhwb3J0cy5Qcm9wZXJ0eVRvSlNPTiA9IFByb3BlcnR5VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUHJvcGVydHlUb0pTT04iLCJQcm9wZXJ0eUZyb21KU09OVHlwZWQiLCJQcm9wZXJ0eUZyb21KU09OIiwiaW5zdGFuY2VPZlByb3BlcnR5IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwia2V5IiwibmFtZSIsImlzUHJpdmF0ZSIsImRlc2NyaXB0aW9uIiwiaXNLaW5kZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Property.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/PropertyValue.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/PropertyValue.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PropertyValueToJSON = exports.PropertyValueFromJSONTyped = exports.PropertyValueFromJSON = exports.instanceOfPropertyValue = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the PropertyValue interface.\n */ function instanceOfPropertyValue(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfPropertyValue = instanceOfPropertyValue;\nfunction PropertyValueFromJSON(json) {\n    return PropertyValueFromJSONTyped(json, false);\n}\nexports.PropertyValueFromJSON = PropertyValueFromJSON;\nfunction PropertyValueFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"value\": !(0, runtime_js_1.exists)(json, \"value\") ? undefined : json[\"value\"]\n    };\n}\nexports.PropertyValueFromJSONTyped = PropertyValueFromJSONTyped;\nfunction PropertyValueToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key,\n        \"value\": value.value\n    };\n}\nexports.PropertyValueToJSON = PropertyValueToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUHJvcGVydHlWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGtDQUFrQyxHQUFHQSw2QkFBNkIsR0FBR0EsK0JBQStCLEdBQUcsS0FBSztBQUMxSSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHdCQUF3QkosS0FBSztJQUNsQyxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELHNCQUFzQkssSUFBSTtJQUMvQixPQUFPTiwyQkFBMkJNLE1BQU07QUFDNUM7QUFDQVQsNkJBQTZCLEdBQUdJO0FBQ2hDLFNBQVNELDJCQUEyQk0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDekQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO1FBQy9GLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxTQUFTLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sV0FBV0UsWUFBWUYsSUFBSSxDQUFDLFFBQVE7SUFDakY7QUFDSjtBQUNBVCxrQ0FBa0MsR0FBR0c7QUFDckMsU0FBU0Qsb0JBQW9CRCxLQUFLO0lBQzlCLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTUEsTUFBTVksRUFBRTtRQUNkLFFBQVFaLE1BQU1hLElBQUk7UUFDbEIsZUFBZWIsTUFBTWMsV0FBVztRQUNoQyxPQUFPZCxNQUFNZSxHQUFHO1FBQ2hCLFNBQVNmLE1BQU1BLEtBQUs7SUFDeEI7QUFDSjtBQUNBRCwyQkFBMkIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Qcm9wZXJ0eVZhbHVlLmpzP2VlYTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByb3BlcnR5VmFsdWVUb0pTT04gPSBleHBvcnRzLlByb3BlcnR5VmFsdWVGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Qcm9wZXJ0eVZhbHVlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZQcm9wZXJ0eVZhbHVlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBQcm9wZXJ0eVZhbHVlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlByb3BlcnR5VmFsdWUodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZQcm9wZXJ0eVZhbHVlID0gaW5zdGFuY2VPZlByb3BlcnR5VmFsdWU7XG5mdW5jdGlvbiBQcm9wZXJ0eVZhbHVlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBQcm9wZXJ0eVZhbHVlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlByb3BlcnR5VmFsdWVGcm9tSlNPTiA9IFByb3BlcnR5VmFsdWVGcm9tSlNPTjtcbmZ1bmN0aW9uIFByb3BlcnR5VmFsdWVGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ25hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWyduYW1lJ10sXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2Rlc2NyaXB0aW9uJykgPyB1bmRlZmluZWQgOiBqc29uWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAna2V5JzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAna2V5JykgPyB1bmRlZmluZWQgOiBqc29uWydrZXknXSxcbiAgICAgICAgJ3ZhbHVlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndmFsdWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3ZhbHVlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuUHJvcGVydHlWYWx1ZUZyb21KU09OVHlwZWQgPSBQcm9wZXJ0eVZhbHVlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFByb3BlcnR5VmFsdWVUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdkZXNjcmlwdGlvbic6IHZhbHVlLmRlc2NyaXB0aW9uLFxuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgICAgICAndmFsdWUnOiB2YWx1ZS52YWx1ZSxcbiAgICB9O1xufVxuZXhwb3J0cy5Qcm9wZXJ0eVZhbHVlVG9KU09OID0gUHJvcGVydHlWYWx1ZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlByb3BlcnR5VmFsdWVUb0pTT04iLCJQcm9wZXJ0eVZhbHVlRnJvbUpTT05UeXBlZCIsIlByb3BlcnR5VmFsdWVGcm9tSlNPTiIsImluc3RhbmNlT2ZQcm9wZXJ0eVZhbHVlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/PropertyValue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RedirectCallbackUrls.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RedirectCallbackUrls.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RedirectCallbackUrlsToJSON = exports.RedirectCallbackUrlsFromJSONTyped = exports.RedirectCallbackUrlsFromJSON = exports.instanceOfRedirectCallbackUrls = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the RedirectCallbackUrls interface.\n */ function instanceOfRedirectCallbackUrls(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfRedirectCallbackUrls = instanceOfRedirectCallbackUrls;\nfunction RedirectCallbackUrlsFromJSON(json) {\n    return RedirectCallbackUrlsFromJSONTyped(json, false);\n}\nexports.RedirectCallbackUrlsFromJSON = RedirectCallbackUrlsFromJSON;\nfunction RedirectCallbackUrlsFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"redirectUrls\": !(0, runtime_js_1.exists)(json, \"redirect_urls\") ? undefined : json[\"redirect_urls\"]\n    };\n}\nexports.RedirectCallbackUrlsFromJSONTyped = RedirectCallbackUrlsFromJSONTyped;\nfunction RedirectCallbackUrlsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"redirect_urls\": value.redirectUrls\n    };\n}\nexports.RedirectCallbackUrlsToJSON = RedirectCallbackUrlsToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUmVkaXJlY3RDYWxsYmFja1VybHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtDQUFrQyxHQUFHQSx5Q0FBeUMsR0FBR0Esb0NBQW9DLEdBQUdBLHNDQUFzQyxHQUFHLEtBQUs7QUFDdEssSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiwrQkFBK0JKLEtBQUs7SUFDekMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNDQUFzQyxHQUFHSztBQUN6QyxTQUFTRCw2QkFBNkJLLElBQUk7SUFDdEMsT0FBT04sa0NBQWtDTSxNQUFNO0FBQ25EO0FBQ0FULG9DQUFvQyxHQUFHSTtBQUN2QyxTQUFTRCxrQ0FBa0NNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2hFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO0lBQ3hHO0FBQ0o7QUFDQVQseUNBQXlDLEdBQUdHO0FBQzVDLFNBQVNELDJCQUEyQkQsS0FBSztJQUNyQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILGlCQUFpQkEsTUFBTVksWUFBWTtJQUN2QztBQUNKO0FBQ0FiLGtDQUFrQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1JlZGlyZWN0Q2FsbGJhY2tVcmxzLmpzPzczMWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlZGlyZWN0Q2FsbGJhY2tVcmxzVG9KU09OID0gZXhwb3J0cy5SZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OVHlwZWQgPSBleHBvcnRzLlJlZGlyZWN0Q2FsbGJhY2tVcmxzRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZSZWRpcmVjdENhbGxiYWNrVXJscyA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgUmVkaXJlY3RDYWxsYmFja1VybHMgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mUmVkaXJlY3RDYWxsYmFja1VybHModmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZSZWRpcmVjdENhbGxiYWNrVXJscyA9IGluc3RhbmNlT2ZSZWRpcmVjdENhbGxiYWNrVXJscztcbmZ1bmN0aW9uIFJlZGlyZWN0Q2FsbGJhY2tVcmxzRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBSZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5SZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OID0gUmVkaXJlY3RDYWxsYmFja1VybHNGcm9tSlNPTjtcbmZ1bmN0aW9uIFJlZGlyZWN0Q2FsbGJhY2tVcmxzRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3JlZGlyZWN0VXJscyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3JlZGlyZWN0X3VybHMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3JlZGlyZWN0X3VybHMnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5SZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OVHlwZWQgPSBSZWRpcmVjdENhbGxiYWNrVXJsc0Zyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBSZWRpcmVjdENhbGxiYWNrVXJsc1RvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3JlZGlyZWN0X3VybHMnOiB2YWx1ZS5yZWRpcmVjdFVybHMsXG4gICAgfTtcbn1cbmV4cG9ydHMuUmVkaXJlY3RDYWxsYmFja1VybHNUb0pTT04gPSBSZWRpcmVjdENhbGxiYWNrVXJsc1RvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlJlZGlyZWN0Q2FsbGJhY2tVcmxzVG9KU09OIiwiUmVkaXJlY3RDYWxsYmFja1VybHNGcm9tSlNPTlR5cGVkIiwiUmVkaXJlY3RDYWxsYmFja1VybHNGcm9tSlNPTiIsImluc3RhbmNlT2ZSZWRpcmVjdENhbGxiYWNrVXJscyIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJyZWRpcmVjdFVybHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RedirectCallbackUrls.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceLogoutRedirectURLsRequest.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceLogoutRedirectURLsRequest.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ReplaceLogoutRedirectURLsRequestToJSON = exports.ReplaceLogoutRedirectURLsRequestFromJSONTyped = exports.ReplaceLogoutRedirectURLsRequestFromJSON = exports.instanceOfReplaceLogoutRedirectURLsRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ReplaceLogoutRedirectURLsRequest interface.\n */ function instanceOfReplaceLogoutRedirectURLsRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfReplaceLogoutRedirectURLsRequest = instanceOfReplaceLogoutRedirectURLsRequest;\nfunction ReplaceLogoutRedirectURLsRequestFromJSON(json) {\n    return ReplaceLogoutRedirectURLsRequestFromJSONTyped(json, false);\n}\nexports.ReplaceLogoutRedirectURLsRequestFromJSON = ReplaceLogoutRedirectURLsRequestFromJSON;\nfunction ReplaceLogoutRedirectURLsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"urls\": !(0, runtime_js_1.exists)(json, \"urls\") ? undefined : json[\"urls\"]\n    };\n}\nexports.ReplaceLogoutRedirectURLsRequestFromJSONTyped = ReplaceLogoutRedirectURLsRequestFromJSONTyped;\nfunction ReplaceLogoutRedirectURLsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"urls\": value.urls\n    };\n}\nexports.ReplaceLogoutRedirectURLsRequestToJSON = ReplaceLogoutRedirectURLsRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDhDQUE4QyxHQUFHQSxxREFBcUQsR0FBR0EsZ0RBQWdELEdBQUdBLGtEQUFrRCxHQUFHLEtBQUs7QUFDdE4sSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiwyQ0FBMkNKLEtBQUs7SUFDckQsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLGtEQUFrRCxHQUFHSztBQUNyRCxTQUFTRCx5Q0FBeUNLLElBQUk7SUFDbEQsT0FBT04sOENBQThDTSxNQUFNO0FBQy9EO0FBQ0FULGdEQUFnRCxHQUFHSTtBQUNuRCxTQUFTRCw4Q0FBOENNLElBQUksRUFBRUMsbUJBQW1CO0lBQzVFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO0lBQzlFO0FBQ0o7QUFDQVQscURBQXFELEdBQUdHO0FBQ3hELFNBQVNELHVDQUF1Q0QsS0FBSztJQUNqRCxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7SUFDdEI7QUFDSjtBQUNBYiw4Q0FBOEMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9SZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdC5qcz80OGFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5SZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdEZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0KHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3QgPSBpbnN0YW5jZU9mUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3Q7XG5mdW5jdGlvbiBSZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RGcm9tSlNPTiA9IFJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBSZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd1cmxzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndXJscycpID8gdW5kZWZpbmVkIDoganNvblsndXJscyddLFxuICAgIH07XG59XG5leHBvcnRzLlJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IFJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndXJscyc6IHZhbHVlLnVybHMsXG4gICAgfTtcbn1cbmV4cG9ydHMuUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RUb0pTT04gPSBSZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlJlcGxhY2VMb2dvdXRSZWRpcmVjdFVSTHNSZXF1ZXN0VG9KU09OIiwiUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RGcm9tSlNPTlR5cGVkIiwiUmVwbGFjZUxvZ291dFJlZGlyZWN0VVJMc1JlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZSZXBsYWNlTG9nb3V0UmVkaXJlY3RVUkxzUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJ1cmxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceLogoutRedirectURLsRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceRedirectCallbackURLsRequest.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceRedirectCallbackURLsRequest.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ReplaceRedirectCallbackURLsRequestToJSON = exports.ReplaceRedirectCallbackURLsRequestFromJSONTyped = exports.ReplaceRedirectCallbackURLsRequestFromJSON = exports.instanceOfReplaceRedirectCallbackURLsRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the ReplaceRedirectCallbackURLsRequest interface.\n */ function instanceOfReplaceRedirectCallbackURLsRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfReplaceRedirectCallbackURLsRequest = instanceOfReplaceRedirectCallbackURLsRequest;\nfunction ReplaceRedirectCallbackURLsRequestFromJSON(json) {\n    return ReplaceRedirectCallbackURLsRequestFromJSONTyped(json, false);\n}\nexports.ReplaceRedirectCallbackURLsRequestFromJSON = ReplaceRedirectCallbackURLsRequestFromJSON;\nfunction ReplaceRedirectCallbackURLsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"urls\": !(0, runtime_js_1.exists)(json, \"urls\") ? undefined : json[\"urls\"]\n    };\n}\nexports.ReplaceRedirectCallbackURLsRequestFromJSONTyped = ReplaceRedirectCallbackURLsRequestFromJSONTyped;\nfunction ReplaceRedirectCallbackURLsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"urls\": value.urls\n    };\n}\nexports.ReplaceRedirectCallbackURLsRequestToJSON = ReplaceRedirectCallbackURLsRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0RBQWdELEdBQUdBLHVEQUF1RCxHQUFHQSxrREFBa0QsR0FBR0Esb0RBQW9ELEdBQUcsS0FBSztBQUM5TixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLDZDQUE2Q0osS0FBSztJQUN2RCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsb0RBQW9ELEdBQUdLO0FBQ3ZELFNBQVNELDJDQUEyQ0ssSUFBSTtJQUNwRCxPQUFPTixnREFBZ0RNLE1BQU07QUFDakU7QUFDQVQsa0RBQWtELEdBQUdJO0FBQ3JELFNBQVNELGdEQUFnRE0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDOUUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87SUFDOUU7QUFDSjtBQUNBVCx1REFBdUQsR0FBR0c7QUFDMUQsU0FBU0QseUNBQXlDRCxLQUFLO0lBQ25ELElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVksSUFBSTtJQUN0QjtBQUNKO0FBQ0FiLGdEQUFnRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1JlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3QuanM/MjQ2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3QgPSBpbnN0YW5jZU9mUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdDtcbmZ1bmN0aW9uIFJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OID0gUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OO1xuZnVuY3Rpb24gUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd1cmxzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndXJscycpID8gdW5kZWZpbmVkIDoganNvblsndXJscyddLFxuICAgIH07XG59XG5leHBvcnRzLlJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBSZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndXJscyc6IHZhbHVlLnVybHMsXG4gICAgfTtcbn1cbmV4cG9ydHMuUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdFRvSlNPTiA9IFJlcGxhY2VSZWRpcmVjdENhbGxiYWNrVVJMc1JlcXVlc3RUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJSZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0VG9KU09OIiwiUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdEZyb21KU09OVHlwZWQiLCJSZXBsYWNlUmVkaXJlY3RDYWxsYmFja1VSTHNSZXF1ZXN0RnJvbUpTT04iLCJpbnN0YW5jZU9mUmVwbGFjZVJlZGlyZWN0Q2FsbGJhY2tVUkxzUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJ1cmxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceRedirectCallbackURLsRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Role.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Role.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RoleToJSON = exports.RoleFromJSONTyped = exports.RoleFromJSON = exports.instanceOfRole = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Role interface.\n */ function instanceOfRole(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfRole = instanceOfRole;\nfunction RoleFromJSON(json) {\n    return RoleFromJSONTyped(json, false);\n}\nexports.RoleFromJSON = RoleFromJSON;\nfunction RoleFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"]\n    };\n}\nexports.RoleFromJSONTyped = RoleFromJSONTyped;\nfunction RoleToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"description\": value.description\n    };\n}\nexports.RoleToJSON = RoleToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUdBLHlCQUF5QixHQUFHQSxvQkFBb0IsR0FBR0Esc0JBQXNCLEdBQUcsS0FBSztBQUN0RyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLGVBQWVKLEtBQUs7SUFDekIsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHNCQUFzQixHQUFHSztBQUN6QixTQUFTRCxhQUFhSyxJQUFJO0lBQ3RCLE9BQU9OLGtCQUFrQk0sTUFBTTtBQUNuQztBQUNBVCxvQkFBb0IsR0FBR0k7QUFDdkIsU0FBU0Qsa0JBQWtCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNoRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxPQUFPLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sU0FBU0UsWUFBWUYsSUFBSSxDQUFDLE1BQU07UUFDdkUsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO0lBQ25HO0FBQ0o7QUFDQVQseUJBQXlCLEdBQUdHO0FBQzVCLFNBQVNELFdBQVdELEtBQUs7SUFDckIsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsT0FBT1osTUFBTWEsR0FBRztRQUNoQixRQUFRYixNQUFNYyxJQUFJO1FBQ2xCLGVBQWVkLE1BQU1lLFdBQVc7SUFDcEM7QUFDSjtBQUNBaEIsa0JBQWtCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZS5qcz84ZTc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Sb2xlVG9KU09OID0gZXhwb3J0cy5Sb2xlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuUm9sZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mUm9sZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgUm9sZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZSb2xlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mUm9sZSA9IGluc3RhbmNlT2ZSb2xlO1xuZnVuY3Rpb24gUm9sZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gUm9sZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Sb2xlRnJvbUpTT04gPSBSb2xlRnJvbUpTT047XG5mdW5jdGlvbiBSb2xlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGVzY3JpcHRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuUm9sZUZyb21KU09OVHlwZWQgPSBSb2xlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFJvbGVUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdkZXNjcmlwdGlvbic6IHZhbHVlLmRlc2NyaXB0aW9uLFxuICAgIH07XG59XG5leHBvcnRzLlJvbGVUb0pTT04gPSBSb2xlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUm9sZVRvSlNPTiIsIlJvbGVGcm9tSlNPTlR5cGVkIiwiUm9sZUZyb21KU09OIiwiaW5zdGFuY2VPZlJvbGUiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJrZXkiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Role.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Roles.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Roles.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RolesToJSON = exports.RolesFromJSONTyped = exports.RolesFromJSON = exports.instanceOfRoles = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Roles interface.\n */ function instanceOfRoles(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfRoles = instanceOfRoles;\nfunction RolesFromJSON(json) {\n    return RolesFromJSONTyped(json, false);\n}\nexports.RolesFromJSON = RolesFromJSON;\nfunction RolesFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"]\n    };\n}\nexports.RolesFromJSONTyped = RolesFromJSONTyped;\nfunction RolesToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"description\": value.description\n    };\n}\nexports.RolesToJSON = RolesToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHQSwwQkFBMEIsR0FBR0EscUJBQXFCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDMUcsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixnQkFBZ0JKLEtBQUs7SUFDMUIsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLHVCQUF1QixHQUFHSztBQUMxQixTQUFTRCxjQUFjSyxJQUFJO0lBQ3ZCLE9BQU9OLG1CQUFtQk0sTUFBTTtBQUNwQztBQUNBVCxxQkFBcUIsR0FBR0k7QUFDeEIsU0FBU0QsbUJBQW1CTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNqRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxPQUFPLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sU0FBU0UsWUFBWUYsSUFBSSxDQUFDLE1BQU07UUFDdkUsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO0lBQ25HO0FBQ0o7QUFDQVQsMEJBQTBCLEdBQUdHO0FBQzdCLFNBQVNELFlBQVlELEtBQUs7SUFDdEIsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsT0FBT1osTUFBTWEsR0FBRztRQUNoQixRQUFRYixNQUFNYyxJQUFJO1FBQ2xCLGVBQWVkLE1BQU1lLFdBQVc7SUFDcEM7QUFDSjtBQUNBaEIsbUJBQW1CLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZXMuanM/MzA4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUm9sZXNUb0pTT04gPSBleHBvcnRzLlJvbGVzRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuUm9sZXNGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlJvbGVzID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBSb2xlcyBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZSb2xlcyh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlJvbGVzID0gaW5zdGFuY2VPZlJvbGVzO1xuZnVuY3Rpb24gUm9sZXNGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFJvbGVzRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlJvbGVzRnJvbUpTT04gPSBSb2xlc0Zyb21KU09OO1xuZnVuY3Rpb24gUm9sZXNGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ2tleSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2tleScpID8gdW5kZWZpbmVkIDoganNvblsna2V5J10sXG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdkZXNjcmlwdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnZGVzY3JpcHRpb24nXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Sb2xlc0Zyb21KU09OVHlwZWQgPSBSb2xlc0Zyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBSb2xlc1RvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdrZXknOiB2YWx1ZS5rZXksXG4gICAgICAgICduYW1lJzogdmFsdWUubmFtZSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogdmFsdWUuZGVzY3JpcHRpb24sXG4gICAgfTtcbn1cbmV4cG9ydHMuUm9sZXNUb0pTT04gPSBSb2xlc1RvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlJvbGVzVG9KU09OIiwiUm9sZXNGcm9tSlNPTlR5cGVkIiwiUm9sZXNGcm9tSlNPTiIsImluc3RhbmNlT2ZSb2xlcyIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJpZCIsImtleSIsIm5hbWUiLCJkZXNjcmlwdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Roles.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RolesPermissionResponseInner.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RolesPermissionResponseInner.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.RolesPermissionResponseInnerToJSON = exports.RolesPermissionResponseInnerFromJSONTyped = exports.RolesPermissionResponseInnerFromJSON = exports.instanceOfRolesPermissionResponseInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the RolesPermissionResponseInner interface.\n */ function instanceOfRolesPermissionResponseInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfRolesPermissionResponseInner = instanceOfRolesPermissionResponseInner;\nfunction RolesPermissionResponseInnerFromJSON(json) {\n    return RolesPermissionResponseInnerFromJSONTyped(json, false);\n}\nexports.RolesPermissionResponseInnerFromJSON = RolesPermissionResponseInnerFromJSON;\nfunction RolesPermissionResponseInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"key\": !(0, runtime_js_1.exists)(json, \"key\") ? undefined : json[\"key\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"]\n    };\n}\nexports.RolesPermissionResponseInnerFromJSONTyped = RolesPermissionResponseInnerFromJSONTyped;\nfunction RolesPermissionResponseInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"key\": value.key,\n        \"name\": value.name,\n        \"description\": value.description\n    };\n}\nexports.RolesPermissionResponseInnerToJSON = RolesPermissionResponseInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMENBQTBDLEdBQUdBLGlEQUFpRCxHQUFHQSw0Q0FBNEMsR0FBR0EsOENBQThDLEdBQUcsS0FBSztBQUN0TSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHVDQUF1Q0osS0FBSztJQUNqRCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsOENBQThDLEdBQUdLO0FBQ2pELFNBQVNELHFDQUFxQ0ssSUFBSTtJQUM5QyxPQUFPTiwwQ0FBMENNLE1BQU07QUFDM0Q7QUFDQVQsNENBQTRDLEdBQUdJO0FBQy9DLFNBQVNELDBDQUEwQ00sSUFBSSxFQUFFQyxtQkFBbUI7SUFDeEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsT0FBTyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFNBQVNFLFlBQVlGLElBQUksQ0FBQyxNQUFNO1FBQ3ZFLFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxlQUFlLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztJQUNuRztBQUNKO0FBQ0FULGlEQUFpRCxHQUFHRztBQUNwRCxTQUFTRCxtQ0FBbUNELEtBQUs7SUFDN0MsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsT0FBT1osTUFBTWEsR0FBRztRQUNoQixRQUFRYixNQUFNYyxJQUFJO1FBQ2xCLGVBQWVkLE1BQU1lLFdBQVc7SUFDcEM7QUFDSjtBQUNBaEIsMENBQTBDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lci5qcz8yN2EyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Sb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyVG9KU09OID0gZXhwb3J0cy5Sb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lciBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lciA9IGluc3RhbmNlT2ZSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyO1xuZnVuY3Rpb24gUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lckZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Sb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyRnJvbUpTT04gPSBSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyRnJvbUpTT047XG5mdW5jdGlvbiBSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdrZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdrZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2tleSddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGVzY3JpcHRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lckZyb21KU09OVHlwZWQgPSBSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFJvbGVzUGVybWlzc2lvblJlc3BvbnNlSW5uZXJUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAna2V5JzogdmFsdWUua2V5LFxuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdkZXNjcmlwdGlvbic6IHZhbHVlLmRlc2NyaXB0aW9uLFxuICAgIH07XG59XG5leHBvcnRzLlJvbGVzUGVybWlzc2lvblJlc3BvbnNlSW5uZXJUb0pTT04gPSBSb2xlc1Blcm1pc3Npb25SZXNwb25zZUlubmVyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lclRvSlNPTiIsIlJvbGVzUGVybWlzc2lvblJlc3BvbnNlSW5uZXJGcm9tSlNPTlR5cGVkIiwiUm9sZXNQZXJtaXNzaW9uUmVzcG9uc2VJbm5lckZyb21KU09OIiwiaW5zdGFuY2VPZlJvbGVzUGVybWlzc2lvblJlc3BvbnNlSW5uZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJrZXkiLCJuYW1lIiwiZGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RolesPermissionResponseInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SetUserPasswordRequest.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SetUserPasswordRequest.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SetUserPasswordRequestToJSON = exports.SetUserPasswordRequestFromJSONTyped = exports.SetUserPasswordRequestFromJSON = exports.instanceOfSetUserPasswordRequest = exports.SetUserPasswordRequestSaltPositionEnum = exports.SetUserPasswordRequestHashingMethodEnum = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * @export\n */ exports.SetUserPasswordRequestHashingMethodEnum = {\n    Bcrypt: \"bcrypt\",\n    Crypt: \"crypt\",\n    Md5: \"md5\",\n    Wordpress: \"wordpress\"\n};\n/**\n * @export\n */ exports.SetUserPasswordRequestSaltPositionEnum = {\n    Prefix: \"prefix\",\n    Suffix: \"suffix\"\n};\n/**\n * Check if a given object implements the SetUserPasswordRequest interface.\n */ function instanceOfSetUserPasswordRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"hashedPassword\" in value;\n    return isInstance;\n}\nexports.instanceOfSetUserPasswordRequest = instanceOfSetUserPasswordRequest;\nfunction SetUserPasswordRequestFromJSON(json) {\n    return SetUserPasswordRequestFromJSONTyped(json, false);\n}\nexports.SetUserPasswordRequestFromJSON = SetUserPasswordRequestFromJSON;\nfunction SetUserPasswordRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"hashedPassword\": json[\"hashed_password\"],\n        \"hashingMethod\": !(0, runtime_js_1.exists)(json, \"hashing_method\") ? undefined : json[\"hashing_method\"],\n        \"salt\": !(0, runtime_js_1.exists)(json, \"salt\") ? undefined : json[\"salt\"],\n        \"saltPosition\": !(0, runtime_js_1.exists)(json, \"salt_position\") ? undefined : json[\"salt_position\"],\n        \"isTemporaryPassword\": !(0, runtime_js_1.exists)(json, \"is_temporary_password\") ? undefined : json[\"is_temporary_password\"]\n    };\n}\nexports.SetUserPasswordRequestFromJSONTyped = SetUserPasswordRequestFromJSONTyped;\nfunction SetUserPasswordRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"hashed_password\": value.hashedPassword,\n        \"hashing_method\": value.hashingMethod,\n        \"salt\": value.salt,\n        \"salt_position\": value.saltPosition,\n        \"is_temporary_password\": value.isTemporaryPassword\n    };\n}\nexports.SetUserPasswordRequestToJSON = SetUserPasswordRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU2V0VXNlclBhc3N3b3JkUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0NBQW9DLEdBQUdBLDJDQUEyQyxHQUFHQSxzQ0FBc0MsR0FBR0Esd0NBQXdDLEdBQUdBLDhDQUE4QyxHQUFHQSwrQ0FBK0MsR0FBRyxLQUFLO0FBQ2pSLElBQUlRLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0RULCtDQUErQyxHQUFHO0lBQzlDVSxRQUFRO0lBQ1JDLE9BQU87SUFDUEMsS0FBSztJQUNMQyxXQUFXO0FBQ2Y7QUFDQTs7Q0FFQyxHQUNEYiw4Q0FBOEMsR0FBRztJQUM3Q2MsUUFBUTtJQUNSQyxRQUFRO0FBQ1o7QUFDQTs7Q0FFQyxHQUNELFNBQVNWLGlDQUFpQ0osS0FBSztJQUMzQyxJQUFJZSxhQUFhO0lBQ2pCQSxhQUFhQSxjQUFjLG9CQUFvQmY7SUFDL0MsT0FBT2U7QUFDWDtBQUNBaEIsd0NBQXdDLEdBQUdLO0FBQzNDLFNBQVNELCtCQUErQmEsSUFBSTtJQUN4QyxPQUFPZCxvQ0FBb0NjLE1BQU07QUFDckQ7QUFDQWpCLHNDQUFzQyxHQUFHSTtBQUN6QyxTQUFTRCxvQ0FBb0NjLElBQUksRUFBRUMsbUJBQW1CO0lBQ2xFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsa0JBQWtCQSxJQUFJLENBQUMsa0JBQWtCO1FBQ3pDLGlCQUFpQixDQUFDLENBQUMsR0FBR1QsYUFBYVksTUFBTSxFQUFFSCxNQUFNLG9CQUFvQkUsWUFBWUYsSUFBSSxDQUFDLGlCQUFpQjtRQUN2RyxRQUFRLENBQUMsQ0FBQyxHQUFHVCxhQUFhWSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHVCxhQUFhWSxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO1FBQ3BHLHVCQUF1QixDQUFDLENBQUMsR0FBR1QsYUFBYVksTUFBTSxFQUFFSCxNQUFNLDJCQUEyQkUsWUFBWUYsSUFBSSxDQUFDLHdCQUF3QjtJQUMvSDtBQUNKO0FBQ0FqQiwyQ0FBMkMsR0FBR0c7QUFDOUMsU0FBU0QsNkJBQTZCRCxLQUFLO0lBQ3ZDLElBQUlBLFVBQVVrQixXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJbEIsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxtQkFBbUJBLE1BQU1vQixjQUFjO1FBQ3ZDLGtCQUFrQnBCLE1BQU1xQixhQUFhO1FBQ3JDLFFBQVFyQixNQUFNc0IsSUFBSTtRQUNsQixpQkFBaUJ0QixNQUFNdUIsWUFBWTtRQUNuQyx5QkFBeUJ2QixNQUFNd0IsbUJBQW1CO0lBQ3REO0FBQ0o7QUFDQXpCLG9DQUFvQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1NldFVzZXJQYXNzd29yZFJlcXVlc3QuanM/NGI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2V0VXNlclBhc3N3b3JkUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuU2V0VXNlclBhc3N3b3JkUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlNldFVzZXJQYXNzd29yZFJlcXVlc3QgPSBleHBvcnRzLlNldFVzZXJQYXNzd29yZFJlcXVlc3RTYWx0UG9zaXRpb25FbnVtID0gZXhwb3J0cy5TZXRVc2VyUGFzc3dvcmRSZXF1ZXN0SGFzaGluZ01ldGhvZEVudW0gPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIEBleHBvcnRcbiAqL1xuZXhwb3J0cy5TZXRVc2VyUGFzc3dvcmRSZXF1ZXN0SGFzaGluZ01ldGhvZEVudW0gPSB7XG4gICAgQmNyeXB0OiAnYmNyeXB0JyxcbiAgICBDcnlwdDogJ2NyeXB0JyxcbiAgICBNZDU6ICdtZDUnLFxuICAgIFdvcmRwcmVzczogJ3dvcmRwcmVzcydcbn07XG4vKipcbiAqIEBleHBvcnRcbiAqL1xuZXhwb3J0cy5TZXRVc2VyUGFzc3dvcmRSZXF1ZXN0U2FsdFBvc2l0aW9uRW51bSA9IHtcbiAgICBQcmVmaXg6ICdwcmVmaXgnLFxuICAgIFN1ZmZpeDogJ3N1ZmZpeCdcbn07XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFNldFVzZXJQYXNzd29yZFJlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mU2V0VXNlclBhc3N3b3JkUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImhhc2hlZFBhc3N3b3JkXCIgaW4gdmFsdWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0ID0gaW5zdGFuY2VPZlNldFVzZXJQYXNzd29yZFJlcXVlc3Q7XG5mdW5jdGlvbiBTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTiA9IFNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIFNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaGFzaGVkUGFzc3dvcmQnOiBqc29uWydoYXNoZWRfcGFzc3dvcmQnXSxcbiAgICAgICAgJ2hhc2hpbmdNZXRob2QnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdoYXNoaW5nX21ldGhvZCcpID8gdW5kZWZpbmVkIDoganNvblsnaGFzaGluZ19tZXRob2QnXSxcbiAgICAgICAgJ3NhbHQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdzYWx0JykgPyB1bmRlZmluZWQgOiBqc29uWydzYWx0J10sXG4gICAgICAgICdzYWx0UG9zaXRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdzYWx0X3Bvc2l0aW9uJykgPyB1bmRlZmluZWQgOiBqc29uWydzYWx0X3Bvc2l0aW9uJ10sXG4gICAgICAgICdpc1RlbXBvcmFyeVBhc3N3b3JkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfdGVtcG9yYXJ5X3Bhc3N3b3JkJykgPyB1bmRlZmluZWQgOiBqc29uWydpc190ZW1wb3JhcnlfcGFzc3dvcmQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5TZXRVc2VyUGFzc3dvcmRSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IFNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gU2V0VXNlclBhc3N3b3JkUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2hhc2hlZF9wYXNzd29yZCc6IHZhbHVlLmhhc2hlZFBhc3N3b3JkLFxuICAgICAgICAnaGFzaGluZ19tZXRob2QnOiB2YWx1ZS5oYXNoaW5nTWV0aG9kLFxuICAgICAgICAnc2FsdCc6IHZhbHVlLnNhbHQsXG4gICAgICAgICdzYWx0X3Bvc2l0aW9uJzogdmFsdWUuc2FsdFBvc2l0aW9uLFxuICAgICAgICAnaXNfdGVtcG9yYXJ5X3Bhc3N3b3JkJzogdmFsdWUuaXNUZW1wb3JhcnlQYXNzd29yZCxcbiAgICB9O1xufVxuZXhwb3J0cy5TZXRVc2VyUGFzc3dvcmRSZXF1ZXN0VG9KU09OID0gU2V0VXNlclBhc3N3b3JkUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNldFVzZXJQYXNzd29yZFJlcXVlc3RUb0pTT04iLCJTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlNldFVzZXJQYXNzd29yZFJlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0IiwiU2V0VXNlclBhc3N3b3JkUmVxdWVzdFNhbHRQb3NpdGlvbkVudW0iLCJTZXRVc2VyUGFzc3dvcmRSZXF1ZXN0SGFzaGluZ01ldGhvZEVudW0iLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiQmNyeXB0IiwiQ3J5cHQiLCJNZDUiLCJXb3JkcHJlc3MiLCJQcmVmaXgiLCJTdWZmaXgiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJoYXNoZWRQYXNzd29yZCIsImhhc2hpbmdNZXRob2QiLCJzYWx0Iiwic2FsdFBvc2l0aW9uIiwiaXNUZW1wb3JhcnlQYXNzd29yZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SetUserPasswordRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Subscriber.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Subscriber.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SubscriberToJSON = exports.SubscriberFromJSONTyped = exports.SubscriberFromJSON = exports.instanceOfSubscriber = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the Subscriber interface.\n */ function instanceOfSubscriber(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfSubscriber = instanceOfSubscriber;\nfunction SubscriberFromJSON(json) {\n    return SubscriberFromJSONTyped(json, false);\n}\nexports.SubscriberFromJSON = SubscriberFromJSON;\nfunction SubscriberFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"preferredEmail\": !(0, runtime_js_1.exists)(json, \"preferred_email\") ? undefined : json[\"preferred_email\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"]\n    };\n}\nexports.SubscriberFromJSONTyped = SubscriberFromJSONTyped;\nfunction SubscriberToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"preferred_email\": value.preferredEmail,\n        \"first_name\": value.firstName,\n        \"last_name\": value.lastName\n    };\n}\nexports.SubscriberToJSON = SubscriberToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU3Vic2NyaWJlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUdBLCtCQUErQixHQUFHQSwwQkFBMEIsR0FBR0EsNEJBQTRCLEdBQUcsS0FBSztBQUM5SCxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHFCQUFxQkosS0FBSztJQUMvQixJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsNEJBQTRCLEdBQUdLO0FBQy9CLFNBQVNELG1CQUFtQkssSUFBSTtJQUM1QixPQUFPTix3QkFBd0JNLE1BQU07QUFDekM7QUFDQVQsMEJBQTBCLEdBQUdJO0FBQzdCLFNBQVNELHdCQUF3Qk0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDdEQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsa0JBQWtCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0scUJBQXFCRSxZQUFZRixJQUFJLENBQUMsa0JBQWtCO1FBQzFHLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO1FBQzNGLFlBQVksQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtJQUM1RjtBQUNKO0FBQ0FULCtCQUErQixHQUFHRztBQUNsQyxTQUFTRCxpQkFBaUJELEtBQUs7SUFDM0IsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsbUJBQW1CWixNQUFNYSxjQUFjO1FBQ3ZDLGNBQWNiLE1BQU1jLFNBQVM7UUFDN0IsYUFBYWQsTUFBTWUsUUFBUTtJQUMvQjtBQUNKO0FBQ0FoQix3QkFBd0IsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9TdWJzY3JpYmVyLmpzP2ZkZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1YnNjcmliZXJUb0pTT04gPSBleHBvcnRzLlN1YnNjcmliZXJGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5TdWJzY3JpYmVyRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZTdWJzY3JpYmVyID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBTdWJzY3JpYmVyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlN1YnNjcmliZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZTdWJzY3JpYmVyID0gaW5zdGFuY2VPZlN1YnNjcmliZXI7XG5mdW5jdGlvbiBTdWJzY3JpYmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTdWJzY3JpYmVyRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlN1YnNjcmliZXJGcm9tSlNPTiA9IFN1YnNjcmliZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIFN1YnNjcmliZXJGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ3ByZWZlcnJlZEVtYWlsJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncHJlZmVycmVkX2VtYWlsJykgPyB1bmRlZmluZWQgOiBqc29uWydwcmVmZXJyZWRfZW1haWwnXSxcbiAgICAgICAgJ2ZpcnN0TmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2ZpcnN0X25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2ZpcnN0X25hbWUnXSxcbiAgICAgICAgJ2xhc3ROYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbGFzdF9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydsYXN0X25hbWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5TdWJzY3JpYmVyRnJvbUpTT05UeXBlZCA9IFN1YnNjcmliZXJGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gU3Vic2NyaWJlclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdwcmVmZXJyZWRfZW1haWwnOiB2YWx1ZS5wcmVmZXJyZWRFbWFpbCxcbiAgICAgICAgJ2ZpcnN0X25hbWUnOiB2YWx1ZS5maXJzdE5hbWUsXG4gICAgICAgICdsYXN0X25hbWUnOiB2YWx1ZS5sYXN0TmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5TdWJzY3JpYmVyVG9KU09OID0gU3Vic2NyaWJlclRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlN1YnNjcmliZXJUb0pTT04iLCJTdWJzY3JpYmVyRnJvbUpTT05UeXBlZCIsIlN1YnNjcmliZXJGcm9tSlNPTiIsImluc3RhbmNlT2ZTdWJzY3JpYmVyIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwicHJlZmVycmVkRW1haWwiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Subscriber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SubscribersSubscriber.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SubscribersSubscriber.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SubscribersSubscriberToJSON = exports.SubscribersSubscriberFromJSONTyped = exports.SubscribersSubscriberFromJSON = exports.instanceOfSubscribersSubscriber = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the SubscribersSubscriber interface.\n */ function instanceOfSubscribersSubscriber(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfSubscribersSubscriber = instanceOfSubscribersSubscriber;\nfunction SubscribersSubscriberFromJSON(json) {\n    return SubscribersSubscriberFromJSONTyped(json, false);\n}\nexports.SubscribersSubscriberFromJSON = SubscribersSubscriberFromJSON;\nfunction SubscribersSubscriberFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"fullName\": !(0, runtime_js_1.exists)(json, \"full_name\") ? undefined : json[\"full_name\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"]\n    };\n}\nexports.SubscribersSubscriberFromJSONTyped = SubscribersSubscriberFromJSONTyped;\nfunction SubscribersSubscriberToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"email\": value.email,\n        \"full_name\": value.fullName,\n        \"first_name\": value.firstName,\n        \"last_name\": value.lastName\n    };\n}\nexports.SubscribersSubscriberToJSON = SubscribersSubscriberToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU3Vic2NyaWJlcnNTdWJzY3JpYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsZ0NBQWdDSixLQUFLO0lBQzFDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUix1Q0FBdUMsR0FBR0s7QUFDMUMsU0FBU0QsOEJBQThCSyxJQUFJO0lBQ3ZDLE9BQU9OLG1DQUFtQ00sTUFBTTtBQUNwRDtBQUNBVCxxQ0FBcUMsR0FBR0k7QUFDeEMsU0FBU0QsbUNBQW1DTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNqRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxTQUFTLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sV0FBV0UsWUFBWUYsSUFBSSxDQUFDLFFBQVE7UUFDN0UsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGVBQWVFLFlBQVlGLElBQUksQ0FBQyxZQUFZO1FBQ3hGLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO1FBQzNGLFlBQVksQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtJQUM1RjtBQUNKO0FBQ0FULDBDQUEwQyxHQUFHRztBQUM3QyxTQUFTRCw0QkFBNEJELEtBQUs7SUFDdEMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsU0FBU1osTUFBTWEsS0FBSztRQUNwQixhQUFhYixNQUFNYyxRQUFRO1FBQzNCLGNBQWNkLE1BQU1lLFNBQVM7UUFDN0IsYUFBYWYsTUFBTWdCLFFBQVE7SUFDL0I7QUFDSjtBQUNBakIsbUNBQW1DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU3Vic2NyaWJlcnNTdWJzY3JpYmVyLmpzPzVjNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1YnNjcmliZXJzU3Vic2NyaWJlclRvSlNPTiA9IGV4cG9ydHMuU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZTdWJzY3JpYmVyc1N1YnNjcmliZXIgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFN1YnNjcmliZXJzU3Vic2NyaWJlciBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZTdWJzY3JpYmVyc1N1YnNjcmliZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZTdWJzY3JpYmVyc1N1YnNjcmliZXIgPSBpbnN0YW5jZU9mU3Vic2NyaWJlcnNTdWJzY3JpYmVyO1xuZnVuY3Rpb24gU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTdWJzY3JpYmVyc1N1YnNjcmliZXJGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT04gPSBTdWJzY3JpYmVyc1N1YnNjcmliZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIFN1YnNjcmliZXJzU3Vic2NyaWJlckZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydpZCddLFxuICAgICAgICAnZW1haWwnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdlbWFpbCcpID8gdW5kZWZpbmVkIDoganNvblsnZW1haWwnXSxcbiAgICAgICAgJ2Z1bGxOYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZnVsbF9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydmdWxsX25hbWUnXSxcbiAgICAgICAgJ2ZpcnN0TmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2ZpcnN0X25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2ZpcnN0X25hbWUnXSxcbiAgICAgICAgJ2xhc3ROYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbGFzdF9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydsYXN0X25hbWUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5TdWJzY3JpYmVyc1N1YnNjcmliZXJGcm9tSlNPTlR5cGVkID0gU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFN1YnNjcmliZXJzU3Vic2NyaWJlclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdlbWFpbCc6IHZhbHVlLmVtYWlsLFxuICAgICAgICAnZnVsbF9uYW1lJzogdmFsdWUuZnVsbE5hbWUsXG4gICAgICAgICdmaXJzdF9uYW1lJzogdmFsdWUuZmlyc3ROYW1lLFxuICAgICAgICAnbGFzdF9uYW1lJzogdmFsdWUubGFzdE5hbWUsXG4gICAgfTtcbn1cbmV4cG9ydHMuU3Vic2NyaWJlcnNTdWJzY3JpYmVyVG9KU09OID0gU3Vic2NyaWJlcnNTdWJzY3JpYmVyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU3Vic2NyaWJlcnNTdWJzY3JpYmVyVG9KU09OIiwiU3Vic2NyaWJlcnNTdWJzY3JpYmVyRnJvbUpTT05UeXBlZCIsIlN1YnNjcmliZXJzU3Vic2NyaWJlckZyb21KU09OIiwiaW5zdGFuY2VPZlN1YnNjcmliZXJzU3Vic2NyaWJlciIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJpZCIsImVtYWlsIiwiZnVsbE5hbWUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SubscribersSubscriber.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SuccessResponse.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SuccessResponse.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SuccessResponseToJSON = exports.SuccessResponseFromJSONTyped = exports.SuccessResponseFromJSON = exports.instanceOfSuccessResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the SuccessResponse interface.\n */ function instanceOfSuccessResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfSuccessResponse = instanceOfSuccessResponse;\nfunction SuccessResponseFromJSON(json) {\n    return SuccessResponseFromJSONTyped(json, false);\n}\nexports.SuccessResponseFromJSON = SuccessResponseFromJSON;\nfunction SuccessResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"]\n    };\n}\nexports.SuccessResponseFromJSONTyped = SuccessResponseFromJSONTyped;\nfunction SuccessResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"message\": value.message,\n        \"code\": value.code\n    };\n}\nexports.SuccessResponseToJSON = SuccessResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU3VjY2Vzc1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw2QkFBNkIsR0FBR0Esb0NBQW9DLEdBQUdBLCtCQUErQixHQUFHQSxpQ0FBaUMsR0FBRyxLQUFLO0FBQ2xKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsMEJBQTBCSixLQUFLO0lBQ3BDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixpQ0FBaUMsR0FBR0s7QUFDcEMsU0FBU0Qsd0JBQXdCSyxJQUFJO0lBQ2pDLE9BQU9OLDZCQUE2Qk0sTUFBTTtBQUM5QztBQUNBVCwrQkFBK0IsR0FBR0k7QUFDbEMsU0FBU0QsNkJBQTZCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUMzRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFdBQVcsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87SUFDOUU7QUFDSjtBQUNBVCxvQ0FBb0MsR0FBR0c7QUFDdkMsU0FBU0Qsc0JBQXNCRCxLQUFLO0lBQ2hDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsV0FBV0EsTUFBTVksT0FBTztRQUN4QixRQUFRWixNQUFNYSxJQUFJO0lBQ3RCO0FBQ0o7QUFDQWQsNkJBQTZCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvU3VjY2Vzc1Jlc3BvbnNlLmpzP2NjMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1Y2Nlc3NSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZTdWNjZXNzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFN1Y2Nlc3NSZXNwb25zZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZTdWNjZXNzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZTdWNjZXNzUmVzcG9uc2UgPSBpbnN0YW5jZU9mU3VjY2Vzc1Jlc3BvbnNlO1xuZnVuY3Rpb24gU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTdWNjZXNzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT04gPSBTdWNjZXNzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIFN1Y2Nlc3NSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdtZXNzYWdlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbWVzc2FnZScpID8gdW5kZWZpbmVkIDoganNvblsnbWVzc2FnZSddLFxuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5TdWNjZXNzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFN1Y2Nlc3NSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAnY29kZSc6IHZhbHVlLmNvZGUsXG4gICAgfTtcbn1cbmV4cG9ydHMuU3VjY2Vzc1Jlc3BvbnNlVG9KU09OID0gU3VjY2Vzc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU3VjY2Vzc1Jlc3BvbnNlVG9KU09OIiwiU3VjY2Vzc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIlN1Y2Nlc3NSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZlN1Y2Nlc3NSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtZXNzYWdlIiwiY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SuccessResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenErrorResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenErrorResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TokenErrorResponseToJSON = exports.TokenErrorResponseFromJSONTyped = exports.TokenErrorResponseFromJSON = exports.instanceOfTokenErrorResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the TokenErrorResponse interface.\n */ function instanceOfTokenErrorResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfTokenErrorResponse = instanceOfTokenErrorResponse;\nfunction TokenErrorResponseFromJSON(json) {\n    return TokenErrorResponseFromJSONTyped(json, false);\n}\nexports.TokenErrorResponseFromJSON = TokenErrorResponseFromJSON;\nfunction TokenErrorResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"error\": !(0, runtime_js_1.exists)(json, \"error\") ? undefined : json[\"error\"],\n        \"errorDescription\": !(0, runtime_js_1.exists)(json, \"error_description\") ? undefined : json[\"error_description\"]\n    };\n}\nexports.TokenErrorResponseFromJSONTyped = TokenErrorResponseFromJSONTyped;\nfunction TokenErrorResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"error\": value.error,\n        \"error_description\": value.errorDescription\n    };\n}\nexports.TokenErrorResponseToJSON = TokenErrorResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVG9rZW5FcnJvclJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCSyxJQUFJO0lBQ3BDLE9BQU9OLGdDQUFnQ00sTUFBTTtBQUNqRDtBQUNBVCxrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFZRixJQUFJLENBQUMsUUFBUTtRQUM3RSxvQkFBb0IsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSx1QkFBdUJFLFlBQVlGLElBQUksQ0FBQyxvQkFBb0I7SUFDcEg7QUFDSjtBQUNBVCx1Q0FBdUMsR0FBR0c7QUFDMUMsU0FBU0QseUJBQXlCRCxLQUFLO0lBQ25DLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsU0FBU0EsTUFBTVksS0FBSztRQUNwQixxQkFBcUJaLE1BQU1hLGdCQUFnQjtJQUMvQztBQUNKO0FBQ0FkLGdDQUFnQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1Rva2VuRXJyb3JSZXNwb25zZS5qcz9iMjhhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ub2tlbkVycm9yUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLlRva2VuRXJyb3JSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLlRva2VuRXJyb3JSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVG9rZW5FcnJvclJlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBUb2tlbkVycm9yUmVzcG9uc2UgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVG9rZW5FcnJvclJlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVG9rZW5FcnJvclJlc3BvbnNlID0gaW5zdGFuY2VPZlRva2VuRXJyb3JSZXNwb25zZTtcbmZ1bmN0aW9uIFRva2VuRXJyb3JSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVG9rZW5FcnJvclJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlRva2VuRXJyb3JSZXNwb25zZUZyb21KU09OID0gVG9rZW5FcnJvclJlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBUb2tlbkVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZXJyb3InOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdlcnJvcicpID8gdW5kZWZpbmVkIDoganNvblsnZXJyb3InXSxcbiAgICAgICAgJ2Vycm9yRGVzY3JpcHRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdlcnJvcl9kZXNjcmlwdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnZXJyb3JfZGVzY3JpcHRpb24nXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Ub2tlbkVycm9yUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gVG9rZW5FcnJvclJlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFRva2VuRXJyb3JSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2Vycm9yJzogdmFsdWUuZXJyb3IsXG4gICAgICAgICdlcnJvcl9kZXNjcmlwdGlvbic6IHZhbHVlLmVycm9yRGVzY3JpcHRpb24sXG4gICAgfTtcbn1cbmV4cG9ydHMuVG9rZW5FcnJvclJlc3BvbnNlVG9KU09OID0gVG9rZW5FcnJvclJlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVG9rZW5FcnJvclJlc3BvbnNlVG9KU09OIiwiVG9rZW5FcnJvclJlc3BvbnNlRnJvbUpTT05UeXBlZCIsIlRva2VuRXJyb3JSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZlRva2VuRXJyb3JSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJlcnJvciIsImVycm9yRGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenErrorResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenIntrospect.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenIntrospect.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TokenIntrospectToJSON = exports.TokenIntrospectFromJSONTyped = exports.TokenIntrospectFromJSON = exports.instanceOfTokenIntrospect = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the TokenIntrospect interface.\n */ function instanceOfTokenIntrospect(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfTokenIntrospect = instanceOfTokenIntrospect;\nfunction TokenIntrospectFromJSON(json) {\n    return TokenIntrospectFromJSONTyped(json, false);\n}\nexports.TokenIntrospectFromJSON = TokenIntrospectFromJSON;\nfunction TokenIntrospectFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"active\": !(0, runtime_js_1.exists)(json, \"active\") ? undefined : json[\"active\"],\n        \"aud\": !(0, runtime_js_1.exists)(json, \"aud\") ? undefined : json[\"aud\"],\n        \"clientId\": !(0, runtime_js_1.exists)(json, \"client_id\") ? undefined : json[\"client_id\"],\n        \"exp\": !(0, runtime_js_1.exists)(json, \"exp\") ? undefined : json[\"exp\"],\n        \"iat\": !(0, runtime_js_1.exists)(json, \"iat\") ? undefined : json[\"iat\"]\n    };\n}\nexports.TokenIntrospectFromJSONTyped = TokenIntrospectFromJSONTyped;\nfunction TokenIntrospectToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"active\": value.active,\n        \"aud\": value.aud,\n        \"client_id\": value.clientId,\n        \"exp\": value.exp,\n        \"iat\": value.iat\n    };\n}\nexports.TokenIntrospectToJSON = TokenIntrospectToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVG9rZW5JbnRyb3NwZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw2QkFBNkIsR0FBR0Esb0NBQW9DLEdBQUdBLCtCQUErQixHQUFHQSxpQ0FBaUMsR0FBRyxLQUFLO0FBQ2xKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsMEJBQTBCSixLQUFLO0lBQ3BDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixpQ0FBaUMsR0FBR0s7QUFDcEMsU0FBU0Qsd0JBQXdCSyxJQUFJO0lBQ2pDLE9BQU9OLDZCQUE2Qk0sTUFBTTtBQUM5QztBQUNBVCwrQkFBK0IsR0FBR0k7QUFDbEMsU0FBU0QsNkJBQTZCTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUMzRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFVBQVUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxZQUFZRSxZQUFZRixJQUFJLENBQUMsU0FBUztRQUNoRixPQUFPLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sU0FBU0UsWUFBWUYsSUFBSSxDQUFDLE1BQU07UUFDdkUsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGVBQWVFLFlBQVlGLElBQUksQ0FBQyxZQUFZO1FBQ3hGLE9BQU8sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxTQUFTRSxZQUFZRixJQUFJLENBQUMsTUFBTTtRQUN2RSxPQUFPLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sU0FBU0UsWUFBWUYsSUFBSSxDQUFDLE1BQU07SUFDM0U7QUFDSjtBQUNBVCxvQ0FBb0MsR0FBR0c7QUFDdkMsU0FBU0Qsc0JBQXNCRCxLQUFLO0lBQ2hDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsVUFBVUEsTUFBTVksTUFBTTtRQUN0QixPQUFPWixNQUFNYSxHQUFHO1FBQ2hCLGFBQWFiLE1BQU1jLFFBQVE7UUFDM0IsT0FBT2QsTUFBTWUsR0FBRztRQUNoQixPQUFPZixNQUFNZ0IsR0FBRztJQUNwQjtBQUNKO0FBQ0FqQiw2QkFBNkIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9Ub2tlbkludHJvc3BlY3QuanM/ODk2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVG9rZW5JbnRyb3NwZWN0VG9KU09OID0gZXhwb3J0cy5Ub2tlbkludHJvc3BlY3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5Ub2tlbkludHJvc3BlY3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlRva2VuSW50cm9zcGVjdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVG9rZW5JbnRyb3NwZWN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlRva2VuSW50cm9zcGVjdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlRva2VuSW50cm9zcGVjdCA9IGluc3RhbmNlT2ZUb2tlbkludHJvc3BlY3Q7XG5mdW5jdGlvbiBUb2tlbkludHJvc3BlY3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFRva2VuSW50cm9zcGVjdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Ub2tlbkludHJvc3BlY3RGcm9tSlNPTiA9IFRva2VuSW50cm9zcGVjdEZyb21KU09OO1xuZnVuY3Rpb24gVG9rZW5JbnRyb3NwZWN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FjdGl2ZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2FjdGl2ZScpID8gdW5kZWZpbmVkIDoganNvblsnYWN0aXZlJ10sXG4gICAgICAgICdhdWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdhdWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2F1ZCddLFxuICAgICAgICAnY2xpZW50SWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdjbGllbnRfaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NsaWVudF9pZCddLFxuICAgICAgICAnZXhwJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZXhwJykgPyB1bmRlZmluZWQgOiBqc29uWydleHAnXSxcbiAgICAgICAgJ2lhdCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lhdCcpID8gdW5kZWZpbmVkIDoganNvblsnaWF0J10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVG9rZW5JbnRyb3NwZWN0RnJvbUpTT05UeXBlZCA9IFRva2VuSW50cm9zcGVjdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBUb2tlbkludHJvc3BlY3RUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdhY3RpdmUnOiB2YWx1ZS5hY3RpdmUsXG4gICAgICAgICdhdWQnOiB2YWx1ZS5hdWQsXG4gICAgICAgICdjbGllbnRfaWQnOiB2YWx1ZS5jbGllbnRJZCxcbiAgICAgICAgJ2V4cCc6IHZhbHVlLmV4cCxcbiAgICAgICAgJ2lhdCc6IHZhbHVlLmlhdCxcbiAgICB9O1xufVxuZXhwb3J0cy5Ub2tlbkludHJvc3BlY3RUb0pTT04gPSBUb2tlbkludHJvc3BlY3RUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJUb2tlbkludHJvc3BlY3RUb0pTT04iLCJUb2tlbkludHJvc3BlY3RGcm9tSlNPTlR5cGVkIiwiVG9rZW5JbnRyb3NwZWN0RnJvbUpTT04iLCJpbnN0YW5jZU9mVG9rZW5JbnRyb3NwZWN0IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImFjdGl2ZSIsImF1ZCIsImNsaWVudElkIiwiZXhwIiwiaWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenIntrospect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequest.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequest.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateAPIApplicationsRequestToJSON = exports.UpdateAPIApplicationsRequestFromJSONTyped = exports.UpdateAPIApplicationsRequestFromJSON = exports.instanceOfUpdateAPIApplicationsRequest = void 0;\nvar UpdateAPIApplicationsRequestApplicationsInner_js_1 = __webpack_require__(/*! ./UpdateAPIApplicationsRequestApplicationsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequestApplicationsInner.js\");\n/**\n * Check if a given object implements the UpdateAPIApplicationsRequest interface.\n */ function instanceOfUpdateAPIApplicationsRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"applications\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdateAPIApplicationsRequest = instanceOfUpdateAPIApplicationsRequest;\nfunction UpdateAPIApplicationsRequestFromJSON(json) {\n    return UpdateAPIApplicationsRequestFromJSONTyped(json, false);\n}\nexports.UpdateAPIApplicationsRequestFromJSON = UpdateAPIApplicationsRequestFromJSON;\nfunction UpdateAPIApplicationsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"applications\": json[\"applications\"].map(UpdateAPIApplicationsRequestApplicationsInner_js_1.UpdateAPIApplicationsRequestApplicationsInnerFromJSON)\n    };\n}\nexports.UpdateAPIApplicationsRequestFromJSONTyped = UpdateAPIApplicationsRequestFromJSONTyped;\nfunction UpdateAPIApplicationsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"applications\": value.applications.map(UpdateAPIApplicationsRequestApplicationsInner_js_1.UpdateAPIApplicationsRequestApplicationsInnerToJSON)\n    };\n}\nexports.UpdateAPIApplicationsRequestToJSON = UpdateAPIApplicationsRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMENBQTBDLEdBQUdBLGlEQUFpRCxHQUFHQSw0Q0FBNEMsR0FBR0EsOENBQThDLEdBQUcsS0FBSztBQUN0TSxJQUFJTSxxREFBcURDLG1CQUFPQSxDQUFDLGlMQUFvRDtBQUNySDs7Q0FFQyxHQUNELFNBQVNGLHVDQUF1Q0osS0FBSztJQUNqRCxJQUFJTyxhQUFhO0lBQ2pCQSxhQUFhQSxjQUFjLGtCQUFrQlA7SUFDN0MsT0FBT087QUFDWDtBQUNBUiw4Q0FBOEMsR0FBR0s7QUFDakQsU0FBU0QscUNBQXFDSyxJQUFJO0lBQzlDLE9BQU9OLDBDQUEwQ00sTUFBTTtBQUMzRDtBQUNBVCw0Q0FBNEMsR0FBR0k7QUFDL0MsU0FBU0QsMENBQTBDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUN4RSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILGdCQUFpQkEsSUFBSSxDQUFDLGVBQWUsQ0FBQ0csR0FBRyxDQUFDTixtREFBbURPLHFEQUFxRDtJQUN0SjtBQUNKO0FBQ0FiLGlEQUFpRCxHQUFHRztBQUNwRCxTQUFTRCxtQ0FBbUNELEtBQUs7SUFDN0MsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxnQkFBaUJBLE1BQU1hLFlBQVksQ0FBQ0YsR0FBRyxDQUFDTixtREFBbURTLG1EQUFtRDtJQUNsSjtBQUNKO0FBQ0FmLDBDQUEwQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3QuanM/M2YyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyX2pzXzEgPSByZXF1aXJlKFwiLi9VcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXIuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImFwcGxpY2F0aW9uc1wiIGluIHZhbHVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdCA9IGluc3RhbmNlT2ZVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FwcGxpY2F0aW9ucyc6IChqc29uWydhcHBsaWNhdGlvbnMnXS5tYXAoVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyX2pzXzEuVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT04pKSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FwcGxpY2F0aW9ucyc6ICh2YWx1ZS5hcHBsaWNhdGlvbnMubWFwKFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lcl9qc18xLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RUb0pTT04gPSBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdFRvSlNPTiIsIlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RGcm9tSlNPTlR5cGVkIiwiVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3QiLCJVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJtYXAiLCJVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTiIsImFwcGxpY2F0aW9ucyIsIlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lclRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequestApplicationsInner.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequestApplicationsInner.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateAPIApplicationsRequestApplicationsInnerToJSON = exports.UpdateAPIApplicationsRequestApplicationsInnerFromJSONTyped = exports.UpdateAPIApplicationsRequestApplicationsInnerFromJSON = exports.instanceOfUpdateAPIApplicationsRequestApplicationsInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateAPIApplicationsRequestApplicationsInner interface.\n */ function instanceOfUpdateAPIApplicationsRequestApplicationsInner(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"id\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdateAPIApplicationsRequestApplicationsInner = instanceOfUpdateAPIApplicationsRequestApplicationsInner;\nfunction UpdateAPIApplicationsRequestApplicationsInnerFromJSON(json) {\n    return UpdateAPIApplicationsRequestApplicationsInnerFromJSONTyped(json, false);\n}\nexports.UpdateAPIApplicationsRequestApplicationsInnerFromJSON = UpdateAPIApplicationsRequestApplicationsInnerFromJSON;\nfunction UpdateAPIApplicationsRequestApplicationsInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": json[\"id\"],\n        \"operation\": !(0, runtime_js_1.exists)(json, \"operation\") ? undefined : json[\"operation\"]\n    };\n}\nexports.UpdateAPIApplicationsRequestApplicationsInnerFromJSONTyped = UpdateAPIApplicationsRequestApplicationsInnerFromJSONTyped;\nfunction UpdateAPIApplicationsRequestApplicationsInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"operation\": value.operation\n    };\n}\nexports.UpdateAPIApplicationsRequestApplicationsInnerToJSON = UpdateAPIApplicationsRequestApplicationsInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyREFBMkQsR0FBR0Esa0VBQWtFLEdBQUdBLDZEQUE2RCxHQUFHQSwrREFBK0QsR0FBRyxLQUFLO0FBQzFRLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0Ysd0RBQXdESixLQUFLO0lBQ2xFLElBQUlPLGFBQWE7SUFDakJBLGFBQWFBLGNBQWMsUUFBUVA7SUFDbkMsT0FBT087QUFDWDtBQUNBUiwrREFBK0QsR0FBR0s7QUFDbEUsU0FBU0Qsc0RBQXNESyxJQUFJO0lBQy9ELE9BQU9OLDJEQUEyRE0sTUFBTTtBQUM1RTtBQUNBVCw2REFBNkQsR0FBR0k7QUFDaEUsU0FBU0QsMkRBQTJETSxJQUFJLEVBQUVDLG1CQUFtQjtJQUN6RixJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLElBQUksQ0FBQyxLQUFLO1FBQ2hCLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtJQUM3RjtBQUNKO0FBQ0FULGtFQUFrRSxHQUFHRztBQUNyRSxTQUFTRCxvREFBb0RELEtBQUs7SUFDOUQsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsYUFBYVosTUFBTWEsU0FBUztJQUNoQztBQUNKO0FBQ0FkLDJEQUEyRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lci5qcz9hMDJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJUb0pTT04gPSBleHBvcnRzLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXIgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIGlzSW5zdGFuY2UgPSBpc0luc3RhbmNlICYmIFwiaWRcIiBpbiB2YWx1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lciA9IGluc3RhbmNlT2ZVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXI7XG5mdW5jdGlvbiBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTiA9IFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OO1xuZnVuY3Rpb24gVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzoganNvblsnaWQnXSxcbiAgICAgICAgJ29wZXJhdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ29wZXJhdGlvbicpID8gdW5kZWZpbmVkIDoganNvblsnb3BlcmF0aW9uJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlQVBJQXBwbGljYXRpb25zUmVxdWVzdEFwcGxpY2F0aW9uc0lubmVyRnJvbUpTT05UeXBlZCA9IFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnb3BlcmF0aW9uJzogdmFsdWUub3BlcmF0aW9uLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lclRvSlNPTiA9IFVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lclRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lclRvSlNPTiIsIlVwZGF0ZUFQSUFwcGxpY2F0aW9uc1JlcXVlc3RBcHBsaWNhdGlvbnNJbm5lckZyb21KU09OVHlwZWQiLCJVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXJGcm9tSlNPTiIsImluc3RhbmNlT2ZVcGRhdGVBUElBcHBsaWNhdGlvbnNSZXF1ZXN0QXBwbGljYXRpb25zSW5uZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJvcGVyYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequestApplicationsInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateApplicationRequest.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateApplicationRequest.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateApplicationRequestToJSON = exports.UpdateApplicationRequestFromJSONTyped = exports.UpdateApplicationRequestFromJSON = exports.instanceOfUpdateApplicationRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateApplicationRequest interface.\n */ function instanceOfUpdateApplicationRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateApplicationRequest = instanceOfUpdateApplicationRequest;\nfunction UpdateApplicationRequestFromJSON(json) {\n    return UpdateApplicationRequestFromJSONTyped(json, false);\n}\nexports.UpdateApplicationRequestFromJSON = UpdateApplicationRequestFromJSON;\nfunction UpdateApplicationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"languageKey\": !(0, runtime_js_1.exists)(json, \"language_key\") ? undefined : json[\"language_key\"],\n        \"logoutUris\": !(0, runtime_js_1.exists)(json, \"logout_uris\") ? undefined : json[\"logout_uris\"],\n        \"redirectUris\": !(0, runtime_js_1.exists)(json, \"redirect_uris\") ? undefined : json[\"redirect_uris\"]\n    };\n}\nexports.UpdateApplicationRequestFromJSONTyped = UpdateApplicationRequestFromJSONTyped;\nfunction UpdateApplicationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"language_key\": value.languageKey,\n        \"logout_uris\": value.logoutUris,\n        \"redirect_uris\": value.redirectUris\n    };\n}\nexports.UpdateApplicationRequestToJSON = UpdateApplicationRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQ0FBc0MsR0FBR0EsNkNBQTZDLEdBQUdBLHdDQUF3QyxHQUFHQSwwQ0FBMEMsR0FBRyxLQUFLO0FBQ3RMLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsbUNBQW1DSixLQUFLO0lBQzdDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUiwwQ0FBMEMsR0FBR0s7QUFDN0MsU0FBU0QsaUNBQWlDSyxJQUFJO0lBQzFDLE9BQU9OLHNDQUFzQ00sTUFBTTtBQUN2RDtBQUNBVCx3Q0FBd0MsR0FBR0k7QUFDM0MsU0FBU0Qsc0NBQXNDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNwRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxlQUFlLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sa0JBQWtCRSxZQUFZRixJQUFJLENBQUMsZUFBZTtRQUNqRyxjQUFjLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztRQUM5RixnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxtQkFBbUJFLFlBQVlGLElBQUksQ0FBQyxnQkFBZ0I7SUFDeEc7QUFDSjtBQUNBVCw2Q0FBNkMsR0FBR0c7QUFDaEQsU0FBU0QsK0JBQStCRCxLQUFLO0lBQ3pDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVksSUFBSTtRQUNsQixnQkFBZ0JaLE1BQU1hLFdBQVc7UUFDakMsZUFBZWIsTUFBTWMsVUFBVTtRQUMvQixpQkFBaUJkLE1BQU1lLFlBQVk7SUFDdkM7QUFDSjtBQUNBaEIsc0NBQXNDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0LmpzPzU0YjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3QgPSBpbnN0YW5jZU9mVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgICAgICAnbGFuZ3VhZ2VLZXknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdsYW5ndWFnZV9rZXknKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2xhbmd1YWdlX2tleSddLFxuICAgICAgICAnbG9nb3V0VXJpcyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2xvZ291dF91cmlzJykgPyB1bmRlZmluZWQgOiBqc29uWydsb2dvdXRfdXJpcyddLFxuICAgICAgICAncmVkaXJlY3RVcmlzJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncmVkaXJlY3RfdXJpcycpID8gdW5kZWZpbmVkIDoganNvblsncmVkaXJlY3RfdXJpcyddLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OVHlwZWQgPSBVcGRhdGVBcHBsaWNhdGlvblJlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgICAgICdsYW5ndWFnZV9rZXknOiB2YWx1ZS5sYW5ndWFnZUtleSxcbiAgICAgICAgJ2xvZ291dF91cmlzJzogdmFsdWUubG9nb3V0VXJpcyxcbiAgICAgICAgJ3JlZGlyZWN0X3VyaXMnOiB2YWx1ZS5yZWRpcmVjdFVyaXMsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0VG9KU09OID0gVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0VG9KU09OIiwiVXBkYXRlQXBwbGljYXRpb25SZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZUFwcGxpY2F0aW9uUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJuYW1lIiwibGFuZ3VhZ2VLZXkiLCJsb2dvdXRVcmlzIiwicmVkaXJlY3RVcmlzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateApplicationRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateCategoryRequest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateCategoryRequest.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateCategoryRequestToJSON = exports.UpdateCategoryRequestFromJSONTyped = exports.UpdateCategoryRequestFromJSON = exports.instanceOfUpdateCategoryRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateCategoryRequest interface.\n */ function instanceOfUpdateCategoryRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateCategoryRequest = instanceOfUpdateCategoryRequest;\nfunction UpdateCategoryRequestFromJSON(json) {\n    return UpdateCategoryRequestFromJSONTyped(json, false);\n}\nexports.UpdateCategoryRequestFromJSON = UpdateCategoryRequestFromJSON;\nfunction UpdateCategoryRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"]\n    };\n}\nexports.UpdateCategoryRequestFromJSONTyped = UpdateCategoryRequestFromJSONTyped;\nfunction UpdateCategoryRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name\n    };\n}\nexports.UpdateCategoryRequestToJSON = UpdateCategoryRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsZ0NBQWdDSixLQUFLO0lBQzFDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUix1Q0FBdUMsR0FBR0s7QUFDMUMsU0FBU0QsOEJBQThCSyxJQUFJO0lBQ3ZDLE9BQU9OLG1DQUFtQ00sTUFBTTtBQUNwRDtBQUNBVCxxQ0FBcUMsR0FBR0k7QUFDeEMsU0FBU0QsbUNBQW1DTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUNqRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztJQUM5RTtBQUNKO0FBQ0FULDBDQUEwQyxHQUFHRztBQUM3QyxTQUFTRCw0QkFBNEJELEtBQUs7SUFDdEMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNWSxJQUFJO0lBQ3RCO0FBQ0o7QUFDQWIsbUNBQW1DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0LmpzPzQyNzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZUNhdGVnb3J5UmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVDYXRlZ29yeVJlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZUNhdGVnb3J5UmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVDYXRlZ29yeVJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVDYXRlZ29yeVJlcXVlc3QgPSBpbnN0YW5jZU9mVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZUNhdGVnb3J5UmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbmFtZSddLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZUNhdGVnb3J5UmVxdWVzdEZyb21KU09OVHlwZWQgPSBVcGRhdGVDYXRlZ29yeVJlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6IHZhbHVlLm5hbWUsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OID0gVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0VG9KU09OIiwiVXBkYXRlQ2F0ZWdvcnlSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZUNhdGVnb3J5UmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZUNhdGVnb3J5UmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateCategoryRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateEnvironementFeatureFlagOverrideRequest.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateEnvironementFeatureFlagOverrideRequest.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateEnvironementFeatureFlagOverrideRequestToJSON = exports.UpdateEnvironementFeatureFlagOverrideRequestFromJSONTyped = exports.UpdateEnvironementFeatureFlagOverrideRequestFromJSON = exports.instanceOfUpdateEnvironementFeatureFlagOverrideRequest = void 0;\n/**\n * Check if a given object implements the UpdateEnvironementFeatureFlagOverrideRequest interface.\n */ function instanceOfUpdateEnvironementFeatureFlagOverrideRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"value\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdateEnvironementFeatureFlagOverrideRequest = instanceOfUpdateEnvironementFeatureFlagOverrideRequest;\nfunction UpdateEnvironementFeatureFlagOverrideRequestFromJSON(json) {\n    return UpdateEnvironementFeatureFlagOverrideRequestFromJSONTyped(json, false);\n}\nexports.UpdateEnvironementFeatureFlagOverrideRequestFromJSON = UpdateEnvironementFeatureFlagOverrideRequestFromJSON;\nfunction UpdateEnvironementFeatureFlagOverrideRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"value\": json[\"value\"]\n    };\n}\nexports.UpdateEnvironementFeatureFlagOverrideRequestFromJSONTyped = UpdateEnvironementFeatureFlagOverrideRequestFromJSONTyped;\nfunction UpdateEnvironementFeatureFlagOverrideRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"value\": value.value\n    };\n}\nexports.UpdateEnvironementFeatureFlagOverrideRequestToJSON = UpdateEnvironementFeatureFlagOverrideRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBEQUEwRCxHQUFHQSxpRUFBaUUsR0FBR0EsNERBQTRELEdBQUdBLDhEQUE4RCxHQUFHLEtBQUs7QUFDdFE7O0NBRUMsR0FDRCxTQUFTSyx1REFBdURKLEtBQUs7SUFDakUsSUFBSUssYUFBYTtJQUNqQkEsYUFBYUEsY0FBYyxXQUFXTDtJQUN0QyxPQUFPSztBQUNYO0FBQ0FOLDhEQUE4RCxHQUFHSztBQUNqRSxTQUFTRCxxREFBcURHLElBQUk7SUFDOUQsT0FBT0osMERBQTBESSxNQUFNO0FBQzNFO0FBQ0FQLDREQUE0RCxHQUFHSTtBQUMvRCxTQUFTRCwwREFBMERJLElBQUksRUFBRUMsbUJBQW1CO0lBQ3hGLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsU0FBU0EsSUFBSSxDQUFDLFFBQVE7SUFDMUI7QUFDSjtBQUNBUCxpRUFBaUUsR0FBR0c7QUFDcEUsU0FBU0QsbURBQW1ERCxLQUFLO0lBQzdELElBQUlBLFVBQVVRLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlSLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsU0FBU0EsTUFBTUEsS0FBSztJQUN4QjtBQUNKO0FBQ0FELDBEQUEwRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0LmpzPzIyMmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5VcGRhdGVFbnZpcm9uZW1lbnRGZWF0dXJlRmxhZ092ZXJyaWRlUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVFbnZpcm9uZW1lbnRGZWF0dXJlRmxhZ092ZXJyaWRlUmVxdWVzdCA9IHZvaWQgMDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3QgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJ2YWx1ZVwiIGluIHZhbHVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3QgPSBpbnN0YW5jZU9mVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3Q7XG5mdW5jdGlvbiBVcGRhdGVFbnZpcm9uZW1lbnRGZWF0dXJlRmxhZ092ZXJyaWRlUmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RGcm9tSlNPTiA9IFVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBVcGRhdGVFbnZpcm9uZW1lbnRGZWF0dXJlRmxhZ092ZXJyaWRlUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd2YWx1ZSc6IGpzb25bJ3ZhbHVlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd2YWx1ZSc6IHZhbHVlLnZhbHVlLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0VG9KU09OID0gVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3RUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVFbnZpcm9uZW1lbnRGZWF0dXJlRmxhZ092ZXJyaWRlUmVxdWVzdFRvSlNPTiIsIlVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZUVudmlyb25lbWVudEZlYXR1cmVGbGFnT3ZlcnJpZGVSZXF1ZXN0RnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlRW52aXJvbmVtZW50RmVhdHVyZUZsYWdPdmVycmlkZVJlcXVlc3QiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateEnvironementFeatureFlagOverrideRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationPropertiesRequest.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationPropertiesRequest.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateOrganizationPropertiesRequestToJSON = exports.UpdateOrganizationPropertiesRequestFromJSONTyped = exports.UpdateOrganizationPropertiesRequestFromJSON = exports.instanceOfUpdateOrganizationPropertiesRequest = void 0;\n/**\n * Check if a given object implements the UpdateOrganizationPropertiesRequest interface.\n */ function instanceOfUpdateOrganizationPropertiesRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"properties\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdateOrganizationPropertiesRequest = instanceOfUpdateOrganizationPropertiesRequest;\nfunction UpdateOrganizationPropertiesRequestFromJSON(json) {\n    return UpdateOrganizationPropertiesRequestFromJSONTyped(json, false);\n}\nexports.UpdateOrganizationPropertiesRequestFromJSON = UpdateOrganizationPropertiesRequestFromJSON;\nfunction UpdateOrganizationPropertiesRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"properties\": json[\"properties\"]\n    };\n}\nexports.UpdateOrganizationPropertiesRequestFromJSONTyped = UpdateOrganizationPropertiesRequestFromJSONTyped;\nfunction UpdateOrganizationPropertiesRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"properties\": value.properties\n    };\n}\nexports.UpdateOrganizationPropertiesRequestToJSON = UpdateOrganizationPropertiesRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlEQUFpRCxHQUFHQSx3REFBd0QsR0FBR0EsbURBQW1ELEdBQUdBLHFEQUFxRCxHQUFHLEtBQUs7QUFDbE87O0NBRUMsR0FDRCxTQUFTSyw4Q0FBOENKLEtBQUs7SUFDeEQsSUFBSUssYUFBYTtJQUNqQkEsYUFBYUEsY0FBYyxnQkFBZ0JMO0lBQzNDLE9BQU9LO0FBQ1g7QUFDQU4scURBQXFELEdBQUdLO0FBQ3hELFNBQVNELDRDQUE0Q0csSUFBSTtJQUNyRCxPQUFPSixpREFBaURJLE1BQU07QUFDbEU7QUFDQVAsbURBQW1ELEdBQUdJO0FBQ3RELFNBQVNELGlEQUFpREksSUFBSSxFQUFFQyxtQkFBbUI7SUFDL0UsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxjQUFjQSxJQUFJLENBQUMsYUFBYTtJQUNwQztBQUNKO0FBQ0FQLHdEQUF3RCxHQUFHRztBQUMzRCxTQUFTRCwwQ0FBMENELEtBQUs7SUFDcEQsSUFBSUEsVUFBVVEsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVIsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxjQUFjQSxNQUFNUyxVQUFVO0lBQ2xDO0FBQ0o7QUFDQVYsaURBQWlELEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3QuanM/YTY0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3RUb0pTT04gPSBleHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0ID0gdm9pZCAwO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcInByb3BlcnRpZXNcIiBpbiB2YWx1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0ID0gaW5zdGFuY2VPZlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdEZyb21KU09OO1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncHJvcGVydGllcyc6IGpzb25bJ3Byb3BlcnRpZXMnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3Byb3BlcnRpZXMnOiB2YWx1ZS5wcm9wZXJ0aWVzLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0VG9KU09OID0gVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3RUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVPcmdhbml6YXRpb25Qcm9wZXJ0aWVzUmVxdWVzdFRvSlNPTiIsIlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZU9yZ2FuaXphdGlvblByb3BlcnRpZXNSZXF1ZXN0RnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uUHJvcGVydGllc1JlcXVlc3QiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJwcm9wZXJ0aWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationPropertiesRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationRequest.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationRequest.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateOrganizationRequestToJSON = exports.UpdateOrganizationRequestFromJSONTyped = exports.UpdateOrganizationRequestFromJSON = exports.instanceOfUpdateOrganizationRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateOrganizationRequest interface.\n */ function instanceOfUpdateOrganizationRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateOrganizationRequest = instanceOfUpdateOrganizationRequest;\nfunction UpdateOrganizationRequestFromJSON(json) {\n    return UpdateOrganizationRequestFromJSONTyped(json, false);\n}\nexports.UpdateOrganizationRequestFromJSON = UpdateOrganizationRequestFromJSON;\nfunction UpdateOrganizationRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"externalId\": !(0, runtime_js_1.exists)(json, \"external_id\") ? undefined : json[\"external_id\"],\n        \"backgroundColor\": !(0, runtime_js_1.exists)(json, \"background_color\") ? undefined : json[\"background_color\"],\n        \"buttonColor\": !(0, runtime_js_1.exists)(json, \"button_color\") ? undefined : json[\"button_color\"],\n        \"buttonTextColor\": !(0, runtime_js_1.exists)(json, \"button_text_color\") ? undefined : json[\"button_text_color\"],\n        \"linkColor\": !(0, runtime_js_1.exists)(json, \"link_color\") ? undefined : json[\"link_color\"],\n        \"backgroundColorDark\": !(0, runtime_js_1.exists)(json, \"background_color_dark\") ? undefined : json[\"background_color_dark\"],\n        \"buttonColorDark\": !(0, runtime_js_1.exists)(json, \"button_color_dark\") ? undefined : json[\"button_color_dark\"],\n        \"buttonTextColorDark\": !(0, runtime_js_1.exists)(json, \"button_text_color_dark\") ? undefined : json[\"button_text_color_dark\"],\n        \"linkColorDark\": !(0, runtime_js_1.exists)(json, \"link_color_dark\") ? undefined : json[\"link_color_dark\"],\n        \"themeCode\": !(0, runtime_js_1.exists)(json, \"theme_code\") ? undefined : json[\"theme_code\"],\n        \"handle\": !(0, runtime_js_1.exists)(json, \"handle\") ? undefined : json[\"handle\"],\n        \"isAllowRegistrations\": !(0, runtime_js_1.exists)(json, \"is_allow_registrations\") ? undefined : json[\"is_allow_registrations\"]\n    };\n}\nexports.UpdateOrganizationRequestFromJSONTyped = UpdateOrganizationRequestFromJSONTyped;\nfunction UpdateOrganizationRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"external_id\": value.externalId,\n        \"background_color\": value.backgroundColor,\n        \"button_color\": value.buttonColor,\n        \"button_text_color\": value.buttonTextColor,\n        \"link_color\": value.linkColor,\n        \"background_color_dark\": value.backgroundColorDark,\n        \"button_color_dark\": value.buttonColorDark,\n        \"button_text_color_dark\": value.buttonTextColorDark,\n        \"link_color_dark\": value.linkColorDark,\n        \"theme_code\": value.themeCode,\n        \"handle\": value.handle,\n        \"is_allow_registrations\": value.isAllowRegistrations\n    };\n}\nexports.UpdateOrganizationRequestToJSON = UpdateOrganizationRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequest.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequest.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateOrganizationUsersRequestToJSON = exports.UpdateOrganizationUsersRequestFromJSONTyped = exports.UpdateOrganizationUsersRequestFromJSON = exports.instanceOfUpdateOrganizationUsersRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UpdateOrganizationUsersRequestUsersInner_js_1 = __webpack_require__(/*! ./UpdateOrganizationUsersRequestUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequestUsersInner.js\");\n/**\n * Check if a given object implements the UpdateOrganizationUsersRequest interface.\n */ function instanceOfUpdateOrganizationUsersRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateOrganizationUsersRequest = instanceOfUpdateOrganizationUsersRequest;\nfunction UpdateOrganizationUsersRequestFromJSON(json) {\n    return UpdateOrganizationUsersRequestFromJSONTyped(json, false);\n}\nexports.UpdateOrganizationUsersRequestFromJSON = UpdateOrganizationUsersRequestFromJSON;\nfunction UpdateOrganizationUsersRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"users\": !(0, runtime_js_1.exists)(json, \"users\") ? undefined : json[\"users\"].map(UpdateOrganizationUsersRequestUsersInner_js_1.UpdateOrganizationUsersRequestUsersInnerFromJSON)\n    };\n}\nexports.UpdateOrganizationUsersRequestFromJSONTyped = UpdateOrganizationUsersRequestFromJSONTyped;\nfunction UpdateOrganizationUsersRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"users\": value.users === undefined ? undefined : value.users.map(UpdateOrganizationUsersRequestUsersInner_js_1.UpdateOrganizationUsersRequestUsersInnerToJSON)\n    };\n}\nexports.UpdateOrganizationUsersRequestToJSON = UpdateOrganizationUsersRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw0Q0FBNEMsR0FBR0EsbURBQW1ELEdBQUdBLDhDQUE4QyxHQUFHQSxnREFBZ0QsR0FBRyxLQUFLO0FBQzlNLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLGdEQUFnREQsbUJBQU9BLENBQUMsdUtBQStDO0FBQzNHOztDQUVDLEdBQ0QsU0FBU0YseUNBQXlDSixLQUFLO0lBQ25ELElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCxnREFBZ0QsR0FBR0s7QUFDbkQsU0FBU0QsdUNBQXVDTSxJQUFJO0lBQ2hELE9BQU9QLDRDQUE0Q08sTUFBTTtBQUM3RDtBQUNBViw4Q0FBOEMsR0FBR0k7QUFDakQsU0FBU0QsNENBQTRDTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUMxRSxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFhRixJQUFJLENBQUMsUUFBUSxDQUFDSSxHQUFHLENBQUNOLDhDQUE4Q08sZ0RBQWdEO0lBQ3JMO0FBQ0o7QUFDQWYsbURBQW1ELEdBQUdHO0FBQ3RELFNBQVNELHFDQUFxQ0QsS0FBSztJQUMvQyxJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFNBQVNBLE1BQU1lLEtBQUssS0FBS0osWUFBWUEsWUFBYVgsTUFBTWUsS0FBSyxDQUFDRixHQUFHLENBQUNOLDhDQUE4Q1MsOENBQThDO0lBQ2xLO0FBQ0o7QUFDQWpCLDRDQUE0QyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdC5qcz82NjU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RUb0pTT04gPSBleHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJfanNfMSA9IHJlcXVpcmUoXCIuL1VwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXIuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QgPSBpbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd1c2Vycyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzJykgPyB1bmRlZmluZWQgOiAoanNvblsndXNlcnMnXS5tYXAoVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lcl9qc18xLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQgPSBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndXNlcnMnOiB2YWx1ZS51c2VycyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnVzZXJzLm1hcChVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyX2pzXzEuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTiA9IFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFRvSlNPTiIsIlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdEZyb21KU09OVHlwZWQiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RGcm9tSlNPTiIsImluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3QiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OIiwidXNlcnMiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequestUsersInner.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequestUsersInner.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateOrganizationUsersRequestUsersInnerToJSON = exports.UpdateOrganizationUsersRequestUsersInnerFromJSONTyped = exports.UpdateOrganizationUsersRequestUsersInnerFromJSON = exports.instanceOfUpdateOrganizationUsersRequestUsersInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateOrganizationUsersRequestUsersInner interface.\n */ function instanceOfUpdateOrganizationUsersRequestUsersInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateOrganizationUsersRequestUsersInner = instanceOfUpdateOrganizationUsersRequestUsersInner;\nfunction UpdateOrganizationUsersRequestUsersInnerFromJSON(json) {\n    return UpdateOrganizationUsersRequestUsersInnerFromJSONTyped(json, false);\n}\nexports.UpdateOrganizationUsersRequestUsersInnerFromJSON = UpdateOrganizationUsersRequestUsersInnerFromJSON;\nfunction UpdateOrganizationUsersRequestUsersInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"operation\": !(0, runtime_js_1.exists)(json, \"operation\") ? undefined : json[\"operation\"],\n        \"roles\": !(0, runtime_js_1.exists)(json, \"roles\") ? undefined : json[\"roles\"],\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : json[\"permissions\"]\n    };\n}\nexports.UpdateOrganizationUsersRequestUsersInnerFromJSONTyped = UpdateOrganizationUsersRequestUsersInnerFromJSONTyped;\nfunction UpdateOrganizationUsersRequestUsersInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"operation\": value.operation,\n        \"roles\": value.roles,\n        \"permissions\": value.permissions\n    };\n}\nexports.UpdateOrganizationUsersRequestUsersInnerToJSON = UpdateOrganizationUsersRequestUsersInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsc0RBQXNELEdBQUdBLDZEQUE2RCxHQUFHQSx3REFBd0QsR0FBR0EsMERBQTBELEdBQUcsS0FBSztBQUN0UCxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLG1EQUFtREosS0FBSztJQUM3RCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsMERBQTBELEdBQUdLO0FBQzdELFNBQVNELGlEQUFpREssSUFBSTtJQUMxRCxPQUFPTixzREFBc0RNLE1BQU07QUFDdkU7QUFDQVQsd0RBQXdELEdBQUdJO0FBQzNELFNBQVNELHNEQUFzRE0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDcEYsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsYUFBYSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGVBQWVFLFlBQVlGLElBQUksQ0FBQyxZQUFZO1FBQ3pGLFNBQVMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFZRixJQUFJLENBQUMsUUFBUTtRQUM3RSxlQUFlLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztJQUNuRztBQUNKO0FBQ0FULDZEQUE2RCxHQUFHRztBQUNoRSxTQUFTRCwrQ0FBK0NELEtBQUs7SUFDekQsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsYUFBYVosTUFBTWEsU0FBUztRQUM1QixTQUFTYixNQUFNYyxLQUFLO1FBQ3BCLGVBQWVkLE1BQU1lLFdBQVc7SUFDcEM7QUFDSjtBQUNBaEIsc0RBQXNELEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lci5qcz81ZjJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OID0gZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lciBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lciA9IGluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyO1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT04gPSBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT047XG5mdW5jdGlvbiBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdvcGVyYXRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdvcGVyYXRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ29wZXJhdGlvbiddLFxuICAgICAgICAncm9sZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdyb2xlcycpID8gdW5kZWZpbmVkIDoganNvblsncm9sZXMnXSxcbiAgICAgICAgJ3Blcm1pc3Npb25zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncGVybWlzc2lvbnMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3Blcm1pc3Npb25zJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OVHlwZWQgPSBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnb3BlcmF0aW9uJzogdmFsdWUub3BlcmF0aW9uLFxuICAgICAgICAncm9sZXMnOiB2YWx1ZS5yb2xlcyxcbiAgICAgICAgJ3Blcm1pc3Npb25zJzogdmFsdWUucGVybWlzc2lvbnMsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lclRvSlNPTiA9IFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVxdWVzdFVzZXJzSW5uZXJUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyVG9KU09OIiwiVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lckZyb21KU09OVHlwZWQiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1JlcXVlc3RVc2Vyc0lubmVyRnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXF1ZXN0VXNlcnNJbm5lciIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJpZCIsIm9wZXJhdGlvbiIsInJvbGVzIiwicGVybWlzc2lvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequestUsersInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersResponse.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersResponse.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateOrganizationUsersResponseToJSON = exports.UpdateOrganizationUsersResponseFromJSONTyped = exports.UpdateOrganizationUsersResponseFromJSON = exports.instanceOfUpdateOrganizationUsersResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateOrganizationUsersResponse interface.\n */ function instanceOfUpdateOrganizationUsersResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateOrganizationUsersResponse = instanceOfUpdateOrganizationUsersResponse;\nfunction UpdateOrganizationUsersResponseFromJSON(json) {\n    return UpdateOrganizationUsersResponseFromJSONTyped(json, false);\n}\nexports.UpdateOrganizationUsersResponseFromJSON = UpdateOrganizationUsersResponseFromJSON;\nfunction UpdateOrganizationUsersResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"usersAdded\": !(0, runtime_js_1.exists)(json, \"users_added\") ? undefined : json[\"users_added\"],\n        \"usersUpdated\": !(0, runtime_js_1.exists)(json, \"users_updated\") ? undefined : json[\"users_updated\"],\n        \"usersRemoved\": !(0, runtime_js_1.exists)(json, \"users_removed\") ? undefined : json[\"users_removed\"]\n    };\n}\nexports.UpdateOrganizationUsersResponseFromJSONTyped = UpdateOrganizationUsersResponseFromJSONTyped;\nfunction UpdateOrganizationUsersResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"message\": value.message,\n        \"users_added\": value.usersAdded,\n        \"users_updated\": value.usersUpdated,\n        \"users_removed\": value.usersRemoved\n    };\n}\nexports.UpdateOrganizationUsersResponseToJSON = UpdateOrganizationUsersResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNkNBQTZDLEdBQUdBLG9EQUFvRCxHQUFHQSwrQ0FBK0MsR0FBR0EsaURBQWlELEdBQUcsS0FBSztBQUNsTixJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLDBDQUEwQ0osS0FBSztJQUNwRCxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsaURBQWlELEdBQUdLO0FBQ3BELFNBQVNELHdDQUF3Q0ssSUFBSTtJQUNqRCxPQUFPTiw2Q0FBNkNNLE1BQU07QUFDOUQ7QUFDQVQsK0NBQStDLEdBQUdJO0FBQ2xELFNBQVNELDZDQUE2Q00sSUFBSSxFQUFFQyxtQkFBbUI7SUFDM0UsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsY0FBYyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDOUYsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO1FBQ3BHLGdCQUFnQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLG1CQUFtQkUsWUFBWUYsSUFBSSxDQUFDLGdCQUFnQjtJQUN4RztBQUNKO0FBQ0FULG9EQUFvRCxHQUFHRztBQUN2RCxTQUFTRCxzQ0FBc0NELEtBQUs7SUFDaEQsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXQSxNQUFNWSxPQUFPO1FBQ3hCLGVBQWVaLE1BQU1hLFVBQVU7UUFDL0IsaUJBQWlCYixNQUFNYyxZQUFZO1FBQ25DLGlCQUFpQmQsTUFBTWUsWUFBWTtJQUN2QztBQUNKO0FBQ0FoQiw2Q0FBNkMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlLmpzPzZjZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VUb0pTT04gPSBleHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlID0gaW5zdGFuY2VPZlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2U7XG5mdW5jdGlvbiBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTiA9IFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ3VzZXJzQWRkZWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICd1c2Vyc19hZGRlZCcpID8gdW5kZWZpbmVkIDoganNvblsndXNlcnNfYWRkZWQnXSxcbiAgICAgICAgJ3VzZXJzVXBkYXRlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzX3VwZGF0ZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3VzZXJzX3VwZGF0ZWQnXSxcbiAgICAgICAgJ3VzZXJzUmVtb3ZlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzX3JlbW92ZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3VzZXJzX3JlbW92ZWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCA9IFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAndXNlcnNfYWRkZWQnOiB2YWx1ZS51c2Vyc0FkZGVkLFxuICAgICAgICAndXNlcnNfdXBkYXRlZCc6IHZhbHVlLnVzZXJzVXBkYXRlZCxcbiAgICAgICAgJ3VzZXJzX3JlbW92ZWQnOiB2YWx1ZS51c2Vyc1JlbW92ZWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZVRvSlNPTiA9IFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlVG9KU09OIiwiVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQiLCJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlT3JnYW5pemF0aW9uVXNlcnNSZXNwb25zZSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJtZXNzYWdlIiwidXNlcnNBZGRlZCIsInVzZXJzVXBkYXRlZCIsInVzZXJzUmVtb3ZlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdatePropertyRequest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdatePropertyRequest.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdatePropertyRequestToJSON = exports.UpdatePropertyRequestFromJSONTyped = exports.UpdatePropertyRequestFromJSON = exports.instanceOfUpdatePropertyRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdatePropertyRequest interface.\n */ function instanceOfUpdatePropertyRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"isPrivate\" in value;\n    isInstance = isInstance && \"categoryId\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdatePropertyRequest = instanceOfUpdatePropertyRequest;\nfunction UpdatePropertyRequestFromJSON(json) {\n    return UpdatePropertyRequestFromJSONTyped(json, false);\n}\nexports.UpdatePropertyRequestFromJSON = UpdatePropertyRequestFromJSON;\nfunction UpdatePropertyRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"isPrivate\": json[\"is_private\"],\n        \"categoryId\": json[\"category_id\"]\n    };\n}\nexports.UpdatePropertyRequestFromJSONTyped = UpdatePropertyRequestFromJSONTyped;\nfunction UpdatePropertyRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"is_private\": value.isPrivate,\n        \"category_id\": value.categoryId\n    };\n}\nexports.UpdatePropertyRequestToJSON = UpdatePropertyRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUHJvcGVydHlSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0EsMENBQTBDLEdBQUdBLHFDQUFxQyxHQUFHQSx1Q0FBdUMsR0FBRyxLQUFLO0FBQzFLLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsZ0NBQWdDSixLQUFLO0lBQzFDLElBQUlPLGFBQWE7SUFDakJBLGFBQWFBLGNBQWMsVUFBVVA7SUFDckNPLGFBQWFBLGNBQWMsZUFBZVA7SUFDMUNPLGFBQWFBLGNBQWMsZ0JBQWdCUDtJQUMzQyxPQUFPTztBQUNYO0FBQ0FSLHVDQUF1QyxHQUFHSztBQUMxQyxTQUFTRCw4QkFBOEJLLElBQUk7SUFDdkMsT0FBT04sbUNBQW1DTSxNQUFNO0FBQ3BEO0FBQ0FULHFDQUFxQyxHQUFHSTtBQUN4QyxTQUFTRCxtQ0FBbUNNLElBQUksRUFBRUMsbUJBQW1CO0lBQ2pFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsSUFBSSxDQUFDLE9BQU87UUFDcEIsZUFBZSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDL0YsYUFBYUEsSUFBSSxDQUFDLGFBQWE7UUFDL0IsY0FBY0EsSUFBSSxDQUFDLGNBQWM7SUFDckM7QUFDSjtBQUNBVCwwQ0FBMEMsR0FBR0c7QUFDN0MsU0FBU0QsNEJBQTRCRCxLQUFLO0lBQ3RDLElBQUlBLFVBQVVVLFdBQVc7UUFDckIsT0FBT0E7SUFDWDtJQUNBLElBQUlWLFVBQVUsTUFBTTtRQUNoQixPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUUEsTUFBTVksSUFBSTtRQUNsQixlQUFlWixNQUFNYSxXQUFXO1FBQ2hDLGNBQWNiLE1BQU1jLFNBQVM7UUFDN0IsZUFBZWQsTUFBTWUsVUFBVTtJQUNuQztBQUNKO0FBQ0FoQixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9VcGRhdGVQcm9wZXJ0eVJlcXVlc3QuanM/MzMyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlUHJvcGVydHlSZXF1ZXN0VG9KU09OID0gZXhwb3J0cy5VcGRhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5VcGRhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVByb3BlcnR5UmVxdWVzdCA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXBkYXRlUHJvcGVydHlSZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVwZGF0ZVByb3BlcnR5UmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcIm5hbWVcIiBpbiB2YWx1ZTtcbiAgICBpc0luc3RhbmNlID0gaXNJbnN0YW5jZSAmJiBcImlzUHJpdmF0ZVwiIGluIHZhbHVlO1xuICAgIGlzSW5zdGFuY2UgPSBpc0luc3RhbmNlICYmIFwiY2F0ZWdvcnlJZFwiIGluIHZhbHVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlUHJvcGVydHlSZXF1ZXN0ID0gaW5zdGFuY2VPZlVwZGF0ZVByb3BlcnR5UmVxdWVzdDtcbmZ1bmN0aW9uIFVwZGF0ZVByb3BlcnR5UmVxdWVzdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXBkYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVwZGF0ZVByb3BlcnR5UmVxdWVzdEZyb21KU09OID0gVXBkYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT047XG5mdW5jdGlvbiBVcGRhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnbmFtZSc6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZGVzY3JpcHRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICdpc1ByaXZhdGUnOiBqc29uWydpc19wcml2YXRlJ10sXG4gICAgICAgICdjYXRlZ29yeUlkJzoganNvblsnY2F0ZWdvcnlfaWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVQcm9wZXJ0eVJlcXVlc3RGcm9tSlNPTlR5cGVkID0gVXBkYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVwZGF0ZVByb3BlcnR5UmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2lzX3ByaXZhdGUnOiB2YWx1ZS5pc1ByaXZhdGUsXG4gICAgICAgICdjYXRlZ29yeV9pZCc6IHZhbHVlLmNhdGVnb3J5SWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlUHJvcGVydHlSZXF1ZXN0VG9KU09OID0gVXBkYXRlUHJvcGVydHlSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlUHJvcGVydHlSZXF1ZXN0VG9KU09OIiwiVXBkYXRlUHJvcGVydHlSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZVByb3BlcnR5UmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZVByb3BlcnR5UmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpc1ByaXZhdGUiLCJjYXRlZ29yeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdatePropertyRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequest.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequest.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateRolePermissionsRequestToJSON = exports.UpdateRolePermissionsRequestFromJSONTyped = exports.UpdateRolePermissionsRequestFromJSON = exports.instanceOfUpdateRolePermissionsRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UpdateRolePermissionsRequestPermissionsInner_js_1 = __webpack_require__(/*! ./UpdateRolePermissionsRequestPermissionsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequestPermissionsInner.js\");\n/**\n * Check if a given object implements the UpdateRolePermissionsRequest interface.\n */ function instanceOfUpdateRolePermissionsRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateRolePermissionsRequest = instanceOfUpdateRolePermissionsRequest;\nfunction UpdateRolePermissionsRequestFromJSON(json) {\n    return UpdateRolePermissionsRequestFromJSONTyped(json, false);\n}\nexports.UpdateRolePermissionsRequestFromJSON = UpdateRolePermissionsRequestFromJSON;\nfunction UpdateRolePermissionsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"permissions\": !(0, runtime_js_1.exists)(json, \"permissions\") ? undefined : json[\"permissions\"].map(UpdateRolePermissionsRequestPermissionsInner_js_1.UpdateRolePermissionsRequestPermissionsInnerFromJSON)\n    };\n}\nexports.UpdateRolePermissionsRequestFromJSONTyped = UpdateRolePermissionsRequestFromJSONTyped;\nfunction UpdateRolePermissionsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"permissions\": value.permissions === undefined ? undefined : value.permissions.map(UpdateRolePermissionsRequestPermissionsInner_js_1.UpdateRolePermissionsRequestPermissionsInnerToJSON)\n    };\n}\nexports.UpdateRolePermissionsRequestToJSON = UpdateRolePermissionsRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMENBQTBDLEdBQUdBLGlEQUFpRCxHQUFHQSw0Q0FBNEMsR0FBR0EsOENBQThDLEdBQUcsS0FBSztBQUN0TSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQyxvREFBb0RELG1CQUFPQSxDQUFDLCtLQUFtRDtBQUNuSDs7Q0FFQyxHQUNELFNBQVNGLHVDQUF1Q0osS0FBSztJQUNqRCxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsOENBQThDLEdBQUdLO0FBQ2pELFNBQVNELHFDQUFxQ00sSUFBSTtJQUM5QyxPQUFPUCwwQ0FBMENPLE1BQU07QUFDM0Q7QUFDQVYsNENBQTRDLEdBQUdJO0FBQy9DLFNBQVNELDBDQUEwQ08sSUFBSSxFQUFFQyxtQkFBbUI7SUFDeEUsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxlQUFlLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFhRixJQUFJLENBQUMsY0FBYyxDQUFDSSxHQUFHLENBQUNOLGtEQUFrRE8sb0RBQW9EO0lBQy9NO0FBQ0o7QUFDQWYsaURBQWlELEdBQUdHO0FBQ3BELFNBQVNELG1DQUFtQ0QsS0FBSztJQUM3QyxJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILGVBQWVBLE1BQU1lLFdBQVcsS0FBS0osWUFBWUEsWUFBYVgsTUFBTWUsV0FBVyxDQUFDRixHQUFHLENBQUNOLGtEQUFrRFMsa0RBQWtEO0lBQzVMO0FBQ0o7QUFDQWpCLDBDQUEwQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3QuanM/YWM3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdEZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJfanNfMSA9IHJlcXVpcmUoXCIuL1VwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0ID0gaW5zdGFuY2VPZlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3Q7XG5mdW5jdGlvbiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RGcm9tSlNPTiA9IFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncGVybWlzc2lvbnMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwZXJtaXNzaW9ucycpID8gdW5kZWZpbmVkIDogKGpzb25bJ3Blcm1pc3Npb25zJ10ubWFwKFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyX2pzXzEuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJGcm9tSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncGVybWlzc2lvbnMnOiB2YWx1ZS5wZXJtaXNzaW9ucyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnBlcm1pc3Npb25zLm1hcChVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lcl9qc18xLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyVG9KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFRvSlNPTiA9IFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0VG9KU09OIiwiVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdEZyb21KU09OVHlwZWQiLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0RnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJGcm9tSlNPTiIsInBlcm1pc3Npb25zIiwiVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJUb0pTT04iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequestPermissionsInner.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequestPermissionsInner.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateRolePermissionsRequestPermissionsInnerToJSON = exports.UpdateRolePermissionsRequestPermissionsInnerFromJSONTyped = exports.UpdateRolePermissionsRequestPermissionsInnerFromJSON = exports.instanceOfUpdateRolePermissionsRequestPermissionsInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateRolePermissionsRequestPermissionsInner interface.\n */ function instanceOfUpdateRolePermissionsRequestPermissionsInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateRolePermissionsRequestPermissionsInner = instanceOfUpdateRolePermissionsRequestPermissionsInner;\nfunction UpdateRolePermissionsRequestPermissionsInnerFromJSON(json) {\n    return UpdateRolePermissionsRequestPermissionsInnerFromJSONTyped(json, false);\n}\nexports.UpdateRolePermissionsRequestPermissionsInnerFromJSON = UpdateRolePermissionsRequestPermissionsInnerFromJSON;\nfunction UpdateRolePermissionsRequestPermissionsInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"operation\": !(0, runtime_js_1.exists)(json, \"operation\") ? undefined : json[\"operation\"]\n    };\n}\nexports.UpdateRolePermissionsRequestPermissionsInnerFromJSONTyped = UpdateRolePermissionsRequestPermissionsInnerFromJSONTyped;\nfunction UpdateRolePermissionsRequestPermissionsInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"operation\": value.operation\n    };\n}\nexports.UpdateRolePermissionsRequestPermissionsInnerToJSON = UpdateRolePermissionsRequestPermissionsInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBEQUEwRCxHQUFHQSxpRUFBaUUsR0FBR0EsNERBQTRELEdBQUdBLDhEQUE4RCxHQUFHLEtBQUs7QUFDdFEsSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRix1REFBdURKLEtBQUs7SUFDakUsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDhEQUE4RCxHQUFHSztBQUNqRSxTQUFTRCxxREFBcURLLElBQUk7SUFDOUQsT0FBT04sMERBQTBETSxNQUFNO0FBQzNFO0FBQ0FULDREQUE0RCxHQUFHSTtBQUMvRCxTQUFTRCwwREFBMERNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3hGLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtJQUM3RjtBQUNKO0FBQ0FULGlFQUFpRSxHQUFHRztBQUNwRSxTQUFTRCxtREFBbURELEtBQUs7SUFDN0QsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsYUFBYVosTUFBTWEsU0FBUztJQUNoQztBQUNKO0FBQ0FkLDBEQUEwRCxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyLmpzPzBjMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyVG9KU09OID0gZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lckZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXIgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lciA9IGluc3RhbmNlT2ZVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lcjtcbmZ1bmN0aW9uIFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lckZyb21KU09OID0gVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdvcGVyYXRpb24nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdvcGVyYXRpb24nKSA/IHVuZGVmaW5lZCA6IGpzb25bJ29wZXJhdGlvbiddLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyRnJvbUpTT05UeXBlZCA9IFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ29wZXJhdGlvbic6IHZhbHVlLm9wZXJhdGlvbixcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lclRvSlNPTiA9IFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVxdWVzdFBlcm1pc3Npb25zSW5uZXJUb0pTT04iLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lckZyb21KU09OVHlwZWQiLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXF1ZXN0UGVybWlzc2lvbnNJbm5lckZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1JlcXVlc3RQZXJtaXNzaW9uc0lubmVyIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwib3BlcmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequestPermissionsInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsResponse.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsResponse.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateRolePermissionsResponseToJSON = exports.UpdateRolePermissionsResponseFromJSONTyped = exports.UpdateRolePermissionsResponseFromJSON = exports.instanceOfUpdateRolePermissionsResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateRolePermissionsResponse interface.\n */ function instanceOfUpdateRolePermissionsResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateRolePermissionsResponse = instanceOfUpdateRolePermissionsResponse;\nfunction UpdateRolePermissionsResponseFromJSON(json) {\n    return UpdateRolePermissionsResponseFromJSONTyped(json, false);\n}\nexports.UpdateRolePermissionsResponseFromJSON = UpdateRolePermissionsResponseFromJSON;\nfunction UpdateRolePermissionsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"permissionsAdded\": !(0, runtime_js_1.exists)(json, \"permissions_added\") ? undefined : json[\"permissions_added\"],\n        \"permissionsRemoved\": !(0, runtime_js_1.exists)(json, \"permissions_removed\") ? undefined : json[\"permissions_removed\"]\n    };\n}\nexports.UpdateRolePermissionsResponseFromJSONTyped = UpdateRolePermissionsResponseFromJSONTyped;\nfunction UpdateRolePermissionsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"permissions_added\": value.permissionsAdded,\n        \"permissions_removed\": value.permissionsRemoved\n    };\n}\nexports.UpdateRolePermissionsResponseToJSON = UpdateRolePermissionsResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDJDQUEyQyxHQUFHQSxrREFBa0QsR0FBR0EsNkNBQTZDLEdBQUdBLCtDQUErQyxHQUFHLEtBQUs7QUFDMU0sSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRix3Q0FBd0NKLEtBQUs7SUFDbEQsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLCtDQUErQyxHQUFHSztBQUNsRCxTQUFTRCxzQ0FBc0NLLElBQUk7SUFDL0MsT0FBT04sMkNBQTJDTSxNQUFNO0FBQzVEO0FBQ0FULDZDQUE2QyxHQUFHSTtBQUNoRCxTQUFTRCwyQ0FBMkNNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3pFLElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsUUFBUSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFVBQVVFLFlBQVlGLElBQUksQ0FBQyxPQUFPO1FBQzFFLFdBQVcsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtRQUNuRixvQkFBb0IsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSx1QkFBdUJFLFlBQVlGLElBQUksQ0FBQyxvQkFBb0I7UUFDaEgsc0JBQXNCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0seUJBQXlCRSxZQUFZRixJQUFJLENBQUMsc0JBQXNCO0lBQzFIO0FBQ0o7QUFDQVQsa0RBQWtELEdBQUdHO0FBQ3JELFNBQVNELG9DQUFvQ0QsS0FBSztJQUM5QyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7UUFDbEIsV0FBV1osTUFBTWEsT0FBTztRQUN4QixxQkFBcUJiLE1BQU1jLGdCQUFnQjtRQUMzQyx1QkFBdUJkLE1BQU1lLGtCQUFrQjtJQUNuRDtBQUNKO0FBQ0FoQiwyQ0FBMkMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZS5qcz81ODI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2UgPSBpbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2U7XG5mdW5jdGlvbiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2VGcm9tSlNPTiA9IFVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT047XG5mdW5jdGlvbiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY29kZScpID8gdW5kZWZpbmVkIDoganNvblsnY29kZSddLFxuICAgICAgICAnbWVzc2FnZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ21lc3NhZ2UnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ21lc3NhZ2UnXSxcbiAgICAgICAgJ3Blcm1pc3Npb25zQWRkZWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwZXJtaXNzaW9uc19hZGRlZCcpID8gdW5kZWZpbmVkIDoganNvblsncGVybWlzc2lvbnNfYWRkZWQnXSxcbiAgICAgICAgJ3Blcm1pc3Npb25zUmVtb3ZlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Blcm1pc3Npb25zX3JlbW92ZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3Blcm1pc3Npb25zX3JlbW92ZWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2NvZGUnOiB2YWx1ZS5jb2RlLFxuICAgICAgICAnbWVzc2FnZSc6IHZhbHVlLm1lc3NhZ2UsXG4gICAgICAgICdwZXJtaXNzaW9uc19hZGRlZCc6IHZhbHVlLnBlcm1pc3Npb25zQWRkZWQsXG4gICAgICAgICdwZXJtaXNzaW9uc19yZW1vdmVkJzogdmFsdWUucGVybWlzc2lvbnNSZW1vdmVkLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlVG9KU09OID0gVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2VUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVSb2xlUGVybWlzc2lvbnNSZXNwb25zZVRvSlNPTiIsIlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT05UeXBlZCIsIlVwZGF0ZVJvbGVQZXJtaXNzaW9uc1Jlc3BvbnNlRnJvbUpTT04iLCJpbnN0YW5jZU9mVXBkYXRlUm9sZVBlcm1pc3Npb25zUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiY29kZSIsIm1lc3NhZ2UiLCJwZXJtaXNzaW9uc0FkZGVkIiwicGVybWlzc2lvbnNSZW1vdmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolesRequest.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolesRequest.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateRolesRequestToJSON = exports.UpdateRolesRequestFromJSONTyped = exports.UpdateRolesRequestFromJSON = exports.instanceOfUpdateRolesRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateRolesRequest interface.\n */ function instanceOfUpdateRolesRequest(value) {\n    var isInstance = true;\n    isInstance = isInstance && \"name\" in value;\n    isInstance = isInstance && \"key\" in value;\n    return isInstance;\n}\nexports.instanceOfUpdateRolesRequest = instanceOfUpdateRolesRequest;\nfunction UpdateRolesRequestFromJSON(json) {\n    return UpdateRolesRequestFromJSONTyped(json, false);\n}\nexports.UpdateRolesRequestFromJSON = UpdateRolesRequestFromJSON;\nfunction UpdateRolesRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"name\": json[\"name\"],\n        \"description\": !(0, runtime_js_1.exists)(json, \"description\") ? undefined : json[\"description\"],\n        \"key\": json[\"key\"],\n        \"isDefaultRole\": !(0, runtime_js_1.exists)(json, \"is_default_role\") ? undefined : json[\"is_default_role\"]\n    };\n}\nexports.UpdateRolesRequestFromJSONTyped = UpdateRolesRequestFromJSONTyped;\nfunction UpdateRolesRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"name\": value.name,\n        \"description\": value.description,\n        \"key\": value.key,\n        \"is_default_role\": value.isDefaultRole\n    };\n}\nexports.UpdateRolesRequestToJSON = UpdateRolesRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUm9sZXNSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlPLGFBQWE7SUFDakJBLGFBQWFBLGNBQWMsVUFBVVA7SUFDckNPLGFBQWFBLGNBQWMsU0FBU1A7SUFDcEMsT0FBT087QUFDWDtBQUNBUixvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCSyxJQUFJO0lBQ3BDLE9BQU9OLGdDQUFnQ00sTUFBTTtBQUNqRDtBQUNBVCxrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLElBQUksQ0FBQyxPQUFPO1FBQ3BCLGVBQWUsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO1FBQy9GLE9BQU9BLElBQUksQ0FBQyxNQUFNO1FBQ2xCLGlCQUFpQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLHFCQUFxQkUsWUFBWUYsSUFBSSxDQUFDLGtCQUFrQjtJQUM3RztBQUNKO0FBQ0FULHVDQUF1QyxHQUFHRztBQUMxQyxTQUFTRCx5QkFBeUJELEtBQUs7SUFDbkMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRQSxNQUFNWSxJQUFJO1FBQ2xCLGVBQWVaLE1BQU1hLFdBQVc7UUFDaEMsT0FBT2IsTUFBTWMsR0FBRztRQUNoQixtQkFBbUJkLE1BQU1lLGFBQWE7SUFDMUM7QUFDSjtBQUNBaEIsZ0NBQWdDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlUm9sZXNSZXF1ZXN0LmpzPzI4ODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZVJvbGVzUmVxdWVzdFRvSlNPTiA9IGV4cG9ydHMuVXBkYXRlUm9sZXNSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlUm9sZXNSZXF1ZXN0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVcGRhdGVSb2xlc1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVwZGF0ZVJvbGVzUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVSb2xlc1JlcXVlc3QodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJuYW1lXCIgaW4gdmFsdWU7XG4gICAgaXNJbnN0YW5jZSA9IGlzSW5zdGFuY2UgJiYgXCJrZXlcIiBpbiB2YWx1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVJvbGVzUmVxdWVzdCA9IGluc3RhbmNlT2ZVcGRhdGVSb2xlc1JlcXVlc3Q7XG5mdW5jdGlvbiBVcGRhdGVSb2xlc1JlcXVlc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVwZGF0ZVJvbGVzUmVxdWVzdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVSb2xlc1JlcXVlc3RGcm9tSlNPTiA9IFVwZGF0ZVJvbGVzUmVxdWVzdEZyb21KU09OO1xuZnVuY3Rpb24gVXBkYXRlUm9sZXNSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiBqc29uWyduYW1lJ10sXG4gICAgICAgICdkZXNjcmlwdGlvbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2Rlc2NyaXB0aW9uJykgPyB1bmRlZmluZWQgOiBqc29uWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAna2V5JzoganNvblsna2V5J10sXG4gICAgICAgICdpc0RlZmF1bHRSb2xlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfZGVmYXVsdF9yb2xlJykgPyB1bmRlZmluZWQgOiBqc29uWydpc19kZWZhdWx0X3JvbGUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVSb2xlc1JlcXVlc3RGcm9tSlNPTlR5cGVkID0gVXBkYXRlUm9sZXNSZXF1ZXN0RnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVwZGF0ZVJvbGVzUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZGVzY3JpcHRpb24nOiB2YWx1ZS5kZXNjcmlwdGlvbixcbiAgICAgICAgJ2tleSc6IHZhbHVlLmtleSxcbiAgICAgICAgJ2lzX2RlZmF1bHRfcm9sZSc6IHZhbHVlLmlzRGVmYXVsdFJvbGUsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlUm9sZXNSZXF1ZXN0VG9KU09OID0gVXBkYXRlUm9sZXNSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlUm9sZXNSZXF1ZXN0VG9KU09OIiwiVXBkYXRlUm9sZXNSZXF1ZXN0RnJvbUpTT05UeXBlZCIsIlVwZGF0ZVJvbGVzUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZVJvbGVzUmVxdWVzdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJrZXkiLCJpc0RlZmF1bHRSb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolesRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserRequest.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserRequest.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateUserRequestToJSON = exports.UpdateUserRequestFromJSONTyped = exports.UpdateUserRequestFromJSON = exports.instanceOfUpdateUserRequest = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateUserRequest interface.\n */ function instanceOfUpdateUserRequest(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateUserRequest = instanceOfUpdateUserRequest;\nfunction UpdateUserRequestFromJSON(json) {\n    return UpdateUserRequestFromJSONTyped(json, false);\n}\nexports.UpdateUserRequestFromJSON = UpdateUserRequestFromJSON;\nfunction UpdateUserRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"givenName\": !(0, runtime_js_1.exists)(json, \"given_name\") ? undefined : json[\"given_name\"],\n        \"familyName\": !(0, runtime_js_1.exists)(json, \"family_name\") ? undefined : json[\"family_name\"],\n        \"isSuspended\": !(0, runtime_js_1.exists)(json, \"is_suspended\") ? undefined : json[\"is_suspended\"],\n        \"isPasswordResetRequested\": !(0, runtime_js_1.exists)(json, \"is_password_reset_requested\") ? undefined : json[\"is_password_reset_requested\"]\n    };\n}\nexports.UpdateUserRequestFromJSONTyped = UpdateUserRequestFromJSONTyped;\nfunction UpdateUserRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"given_name\": value.givenName,\n        \"family_name\": value.familyName,\n        \"is_suspended\": value.isSuspended,\n        \"is_password_reset_requested\": value.isPasswordResetRequested\n    };\n}\nexports.UpdateUserRequestToJSON = UpdateUserRequestToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlVXNlclJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHQSxzQ0FBc0MsR0FBR0EsaUNBQWlDLEdBQUdBLG1DQUFtQyxHQUFHLEtBQUs7QUFDMUosSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRiw0QkFBNEJKLEtBQUs7SUFDdEMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLG1DQUFtQyxHQUFHSztBQUN0QyxTQUFTRCwwQkFBMEJLLElBQUk7SUFDbkMsT0FBT04sK0JBQStCTSxNQUFNO0FBQ2hEO0FBQ0FULGlDQUFpQyxHQUFHSTtBQUNwQyxTQUFTRCwrQkFBK0JNLElBQUksRUFBRUMsbUJBQW1CO0lBQzdELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsYUFBYSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7UUFDM0YsY0FBYyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDOUYsZUFBZSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGtCQUFrQkUsWUFBWUYsSUFBSSxDQUFDLGVBQWU7UUFDakcsNEJBQTRCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUNBQWlDRSxZQUFZRixJQUFJLENBQUMsOEJBQThCO0lBQ2hKO0FBQ0o7QUFDQVQsc0NBQXNDLEdBQUdHO0FBQ3pDLFNBQVNELHdCQUF3QkQsS0FBSztJQUNsQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILGNBQWNBLE1BQU1ZLFNBQVM7UUFDN0IsZUFBZVosTUFBTWEsVUFBVTtRQUMvQixnQkFBZ0JiLE1BQU1jLFdBQVc7UUFDakMsK0JBQStCZCxNQUFNZSx3QkFBd0I7SUFDakU7QUFDSjtBQUNBaEIsK0JBQStCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlVXNlclJlcXVlc3QuanM/ZjIwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlVXNlclJlcXVlc3RUb0pTT04gPSBleHBvcnRzLlVwZGF0ZVVzZXJSZXF1ZXN0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXBkYXRlVXNlclJlcXVlc3RGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVcGRhdGVVc2VyUmVxdWVzdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVcGRhdGVVc2VyUmVxdWVzdCh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXF1ZXN0ID0gaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXF1ZXN0O1xuZnVuY3Rpb24gVXBkYXRlVXNlclJlcXVlc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVwZGF0ZVVzZXJSZXF1ZXN0RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVwZGF0ZVVzZXJSZXF1ZXN0RnJvbUpTT04gPSBVcGRhdGVVc2VyUmVxdWVzdEZyb21KU09OO1xuZnVuY3Rpb24gVXBkYXRlVXNlclJlcXVlc3RGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZ2l2ZW5OYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZ2l2ZW5fbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnZ2l2ZW5fbmFtZSddLFxuICAgICAgICAnZmFtaWx5TmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2ZhbWlseV9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydmYW1pbHlfbmFtZSddLFxuICAgICAgICAnaXNTdXNwZW5kZWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpc19zdXNwZW5kZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lzX3N1c3BlbmRlZCddLFxuICAgICAgICAnaXNQYXNzd29yZFJlc2V0UmVxdWVzdGVkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfcGFzc3dvcmRfcmVzZXRfcmVxdWVzdGVkJykgPyB1bmRlZmluZWQgOiBqc29uWydpc19wYXNzd29yZF9yZXNldF9yZXF1ZXN0ZWQnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVVc2VyUmVxdWVzdEZyb21KU09OVHlwZWQgPSBVcGRhdGVVc2VyUmVxdWVzdEZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVVc2VyUmVxdWVzdFRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2dpdmVuX25hbWUnOiB2YWx1ZS5naXZlbk5hbWUsXG4gICAgICAgICdmYW1pbHlfbmFtZSc6IHZhbHVlLmZhbWlseU5hbWUsXG4gICAgICAgICdpc19zdXNwZW5kZWQnOiB2YWx1ZS5pc1N1c3BlbmRlZCxcbiAgICAgICAgJ2lzX3Bhc3N3b3JkX3Jlc2V0X3JlcXVlc3RlZCc6IHZhbHVlLmlzUGFzc3dvcmRSZXNldFJlcXVlc3RlZCxcbiAgICB9O1xufVxuZXhwb3J0cy5VcGRhdGVVc2VyUmVxdWVzdFRvSlNPTiA9IFVwZGF0ZVVzZXJSZXF1ZXN0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXBkYXRlVXNlclJlcXVlc3RUb0pTT04iLCJVcGRhdGVVc2VyUmVxdWVzdEZyb21KU09OVHlwZWQiLCJVcGRhdGVVc2VyUmVxdWVzdEZyb21KU09OIiwiaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXF1ZXN0IiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImdpdmVuTmFtZSIsImZhbWlseU5hbWUiLCJpc1N1c3BlbmRlZCIsImlzUGFzc3dvcmRSZXNldFJlcXVlc3RlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateUserResponseToJSON = exports.UpdateUserResponseFromJSONTyped = exports.UpdateUserResponseFromJSON = exports.instanceOfUpdateUserResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UpdateUserResponse interface.\n */ function instanceOfUpdateUserResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUpdateUserResponse = instanceOfUpdateUserResponse;\nfunction UpdateUserResponseFromJSON(json) {\n    return UpdateUserResponseFromJSONTyped(json, false);\n}\nexports.UpdateUserResponseFromJSON = UpdateUserResponseFromJSON;\nfunction UpdateUserResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"givenName\": !(0, runtime_js_1.exists)(json, \"given_name\") ? undefined : json[\"given_name\"],\n        \"familyName\": !(0, runtime_js_1.exists)(json, \"family_name\") ? undefined : json[\"family_name\"],\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"isSuspended\": !(0, runtime_js_1.exists)(json, \"is_suspended\") ? undefined : json[\"is_suspended\"],\n        \"isPasswordResetRequested\": !(0, runtime_js_1.exists)(json, \"is_password_reset_requested\") ? undefined : json[\"is_password_reset_requested\"],\n        \"picture\": !(0, runtime_js_1.exists)(json, \"picture\") ? undefined : json[\"picture\"]\n    };\n}\nexports.UpdateUserResponseFromJSONTyped = UpdateUserResponseFromJSONTyped;\nfunction UpdateUserResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"given_name\": value.givenName,\n        \"family_name\": value.familyName,\n        \"email\": value.email,\n        \"is_suspended\": value.isSuspended,\n        \"is_password_reset_requested\": value.isPasswordResetRequested,\n        \"picture\": value.picture\n    };\n}\nexports.UpdateUserResponseToJSON = UpdateUserResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXBkYXRlVXNlclJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCSyxJQUFJO0lBQ3BDLE9BQU9OLGdDQUFnQ00sTUFBTTtBQUNqRDtBQUNBVCxrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxhQUFhLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZRixJQUFJLENBQUMsYUFBYTtRQUMzRixjQUFjLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztRQUM5RixTQUFTLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sV0FBV0UsWUFBWUYsSUFBSSxDQUFDLFFBQVE7UUFDN0UsZUFBZSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGtCQUFrQkUsWUFBWUYsSUFBSSxDQUFDLGVBQWU7UUFDakcsNEJBQTRCLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUNBQWlDRSxZQUFZRixJQUFJLENBQUMsOEJBQThCO1FBQzVJLFdBQVcsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtJQUN2RjtBQUNKO0FBQ0FULHVDQUF1QyxHQUFHRztBQUMxQyxTQUFTRCx5QkFBeUJELEtBQUs7SUFDbkMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsY0FBY1osTUFBTWEsU0FBUztRQUM3QixlQUFlYixNQUFNYyxVQUFVO1FBQy9CLFNBQVNkLE1BQU1lLEtBQUs7UUFDcEIsZ0JBQWdCZixNQUFNZ0IsV0FBVztRQUNqQywrQkFBK0JoQixNQUFNaUIsd0JBQXdCO1FBQzdELFdBQVdqQixNQUFNa0IsT0FBTztJQUM1QjtBQUNKO0FBQ0FuQixnQ0FBZ0MsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL21vZGVscy9VcGRhdGVVc2VyUmVzcG9uc2UuanM/NDdiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXBkYXRlVXNlclJlc3BvbnNlVG9KU09OID0gZXhwb3J0cy5VcGRhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTlR5cGVkID0gZXhwb3J0cy5VcGRhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXBkYXRlVXNlclJlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXNwb25zZSh2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVwZGF0ZVVzZXJSZXNwb25zZSA9IGluc3RhbmNlT2ZVcGRhdGVVc2VyUmVzcG9uc2U7XG5mdW5jdGlvbiBVcGRhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVwZGF0ZVVzZXJSZXNwb25zZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5VcGRhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTiA9IFVwZGF0ZVVzZXJSZXNwb25zZUZyb21KU09OO1xuZnVuY3Rpb24gVXBkYXRlVXNlclJlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdnaXZlbk5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdnaXZlbl9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydnaXZlbl9uYW1lJ10sXG4gICAgICAgICdmYW1pbHlOYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZmFtaWx5X25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2ZhbWlseV9uYW1lJ10sXG4gICAgICAgICdlbWFpbCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2VtYWlsJykgPyB1bmRlZmluZWQgOiBqc29uWydlbWFpbCddLFxuICAgICAgICAnaXNTdXNwZW5kZWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpc19zdXNwZW5kZWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lzX3N1c3BlbmRlZCddLFxuICAgICAgICAnaXNQYXNzd29yZFJlc2V0UmVxdWVzdGVkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaXNfcGFzc3dvcmRfcmVzZXRfcmVxdWVzdGVkJykgPyB1bmRlZmluZWQgOiBqc29uWydpc19wYXNzd29yZF9yZXNldF9yZXF1ZXN0ZWQnXSxcbiAgICAgICAgJ3BpY3R1cmUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwaWN0dXJlJykgPyB1bmRlZmluZWQgOiBqc29uWydwaWN0dXJlJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVXBkYXRlVXNlclJlc3BvbnNlRnJvbUpTT05UeXBlZCA9IFVwZGF0ZVVzZXJSZXNwb25zZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVcGRhdGVVc2VyUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAnZ2l2ZW5fbmFtZSc6IHZhbHVlLmdpdmVuTmFtZSxcbiAgICAgICAgJ2ZhbWlseV9uYW1lJzogdmFsdWUuZmFtaWx5TmFtZSxcbiAgICAgICAgJ2VtYWlsJzogdmFsdWUuZW1haWwsXG4gICAgICAgICdpc19zdXNwZW5kZWQnOiB2YWx1ZS5pc1N1c3BlbmRlZCxcbiAgICAgICAgJ2lzX3Bhc3N3b3JkX3Jlc2V0X3JlcXVlc3RlZCc6IHZhbHVlLmlzUGFzc3dvcmRSZXNldFJlcXVlc3RlZCxcbiAgICAgICAgJ3BpY3R1cmUnOiB2YWx1ZS5waWN0dXJlLFxuICAgIH07XG59XG5leHBvcnRzLlVwZGF0ZVVzZXJSZXNwb25zZVRvSlNPTiA9IFVwZGF0ZVVzZXJSZXNwb25zZVRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVwZGF0ZVVzZXJSZXNwb25zZVRvSlNPTiIsIlVwZGF0ZVVzZXJSZXNwb25zZUZyb21KU09OVHlwZWQiLCJVcGRhdGVVc2VyUmVzcG9uc2VGcm9tSlNPTiIsImluc3RhbmNlT2ZVcGRhdGVVc2VyUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwiaWQiLCJnaXZlbk5hbWUiLCJmYW1pbHlOYW1lIiwiZW1haWwiLCJpc1N1c3BlbmRlZCIsImlzUGFzc3dvcmRSZXNldFJlcXVlc3RlZCIsInBpY3R1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/User.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/User.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserToJSON = exports.UserFromJSONTyped = exports.UserFromJSON = exports.instanceOfUser = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UserIdentitiesInner_js_1 = __webpack_require__(/*! ./UserIdentitiesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js\");\n/**\n * Check if a given object implements the User interface.\n */ function instanceOfUser(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUser = instanceOfUser;\nfunction UserFromJSON(json) {\n    return UserFromJSONTyped(json, false);\n}\nexports.UserFromJSON = UserFromJSON;\nfunction UserFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"providedId\": !(0, runtime_js_1.exists)(json, \"provided_id\") ? undefined : json[\"provided_id\"],\n        \"preferredEmail\": !(0, runtime_js_1.exists)(json, \"preferred_email\") ? undefined : json[\"preferred_email\"],\n        \"username\": !(0, runtime_js_1.exists)(json, \"username\") ? undefined : json[\"username\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"isSuspended\": !(0, runtime_js_1.exists)(json, \"is_suspended\") ? undefined : json[\"is_suspended\"],\n        \"picture\": !(0, runtime_js_1.exists)(json, \"picture\") ? undefined : json[\"picture\"],\n        \"totalSignIns\": !(0, runtime_js_1.exists)(json, \"total_sign_ins\") ? undefined : json[\"total_sign_ins\"],\n        \"failedSignIns\": !(0, runtime_js_1.exists)(json, \"failed_sign_ins\") ? undefined : json[\"failed_sign_ins\"],\n        \"lastSignedIn\": !(0, runtime_js_1.exists)(json, \"last_signed_in\") ? undefined : json[\"last_signed_in\"],\n        \"createdOn\": !(0, runtime_js_1.exists)(json, \"created_on\") ? undefined : json[\"created_on\"],\n        \"organizations\": !(0, runtime_js_1.exists)(json, \"organizations\") ? undefined : json[\"organizations\"],\n        \"identities\": !(0, runtime_js_1.exists)(json, \"identities\") ? undefined : json[\"identities\"].map(UserIdentitiesInner_js_1.UserIdentitiesInnerFromJSON)\n    };\n}\nexports.UserFromJSONTyped = UserFromJSONTyped;\nfunction UserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"provided_id\": value.providedId,\n        \"preferred_email\": value.preferredEmail,\n        \"username\": value.username,\n        \"last_name\": value.lastName,\n        \"first_name\": value.firstName,\n        \"is_suspended\": value.isSuspended,\n        \"picture\": value.picture,\n        \"total_sign_ins\": value.totalSignIns,\n        \"failed_sign_ins\": value.failedSignIns,\n        \"last_signed_in\": value.lastSignedIn,\n        \"created_on\": value.createdOn,\n        \"organizations\": value.organizations,\n        \"identities\": value.identities === undefined ? undefined : value.identities.map(UserIdentitiesInner_js_1.UserIdentitiesInnerToJSON)\n    };\n}\nexports.UserToJSON = UserToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUdBLHlCQUF5QixHQUFHQSxvQkFBb0IsR0FBR0Esc0JBQXNCLEdBQUcsS0FBSztBQUN0RyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQywyQkFBMkJELG1CQUFPQSxDQUFDLDZIQUEwQjtBQUNqRTs7Q0FFQyxHQUNELFNBQVNGLGVBQWVKLEtBQUs7SUFDekIsSUFBSVEsYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FULHNCQUFzQixHQUFHSztBQUN6QixTQUFTRCxhQUFhTSxJQUFJO0lBQ3RCLE9BQU9QLGtCQUFrQk8sTUFBTTtBQUNuQztBQUNBVixvQkFBb0IsR0FBR0k7QUFDdkIsU0FBU0Qsa0JBQWtCTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUNoRCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU0sQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxRQUFRRSxZQUFZRixJQUFJLENBQUMsS0FBSztRQUNwRSxjQUFjLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztRQUM5RixrQkFBa0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxxQkFBcUJFLFlBQVlGLElBQUksQ0FBQyxrQkFBa0I7UUFDMUcsWUFBWSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGNBQWNFLFlBQVlGLElBQUksQ0FBQyxXQUFXO1FBQ3RGLFlBQVksQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxlQUFlRSxZQUFZRixJQUFJLENBQUMsWUFBWTtRQUN4RixhQUFhLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZRixJQUFJLENBQUMsYUFBYTtRQUMzRixlQUFlLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sa0JBQWtCRSxZQUFZRixJQUFJLENBQUMsZUFBZTtRQUNqRyxXQUFXLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sYUFBYUUsWUFBWUYsSUFBSSxDQUFDLFVBQVU7UUFDbkYsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sb0JBQW9CRSxZQUFZRixJQUFJLENBQUMsaUJBQWlCO1FBQ3RHLGlCQUFpQixDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLHFCQUFxQkUsWUFBWUYsSUFBSSxDQUFDLGtCQUFrQjtRQUN6RyxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxvQkFBb0JFLFlBQVlGLElBQUksQ0FBQyxpQkFBaUI7UUFDdEcsYUFBYSxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGdCQUFnQkUsWUFBWUYsSUFBSSxDQUFDLGFBQWE7UUFDM0YsaUJBQWlCLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sbUJBQW1CRSxZQUFZRixJQUFJLENBQUMsZ0JBQWdCO1FBQ3JHLGNBQWMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQWFGLElBQUksQ0FBQyxhQUFhLENBQUNJLEdBQUcsQ0FBQ04seUJBQXlCTywyQkFBMkI7SUFDMUo7QUFDSjtBQUNBZix5QkFBeUIsR0FBR0c7QUFDNUIsU0FBU0QsV0FBV0QsS0FBSztJQUNyQixJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1lLEVBQUU7UUFDZCxlQUFlZixNQUFNZ0IsVUFBVTtRQUMvQixtQkFBbUJoQixNQUFNaUIsY0FBYztRQUN2QyxZQUFZakIsTUFBTWtCLFFBQVE7UUFDMUIsYUFBYWxCLE1BQU1tQixRQUFRO1FBQzNCLGNBQWNuQixNQUFNb0IsU0FBUztRQUM3QixnQkFBZ0JwQixNQUFNcUIsV0FBVztRQUNqQyxXQUFXckIsTUFBTXNCLE9BQU87UUFDeEIsa0JBQWtCdEIsTUFBTXVCLFlBQVk7UUFDcEMsbUJBQW1CdkIsTUFBTXdCLGFBQWE7UUFDdEMsa0JBQWtCeEIsTUFBTXlCLFlBQVk7UUFDcEMsY0FBY3pCLE1BQU0wQixTQUFTO1FBQzdCLGlCQUFpQjFCLE1BQU0yQixhQUFhO1FBQ3BDLGNBQWMzQixNQUFNNEIsVUFBVSxLQUFLakIsWUFBWUEsWUFBYVgsTUFBTTRCLFVBQVUsQ0FBQ2YsR0FBRyxDQUFDTix5QkFBeUJzQix5QkFBeUI7SUFDdkk7QUFDSjtBQUNBOUIsa0JBQWtCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlci5qcz9iM2IxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vc2VyVG9KU09OID0gZXhwb3J0cy5Vc2VyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXNlckZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXNlciA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbnZhciBVc2VySWRlbnRpdGllc0lubmVyX2pzXzEgPSByZXF1aXJlKFwiLi9Vc2VySWRlbnRpdGllc0lubmVyLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVc2VyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVzZXIodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVc2VyID0gaW5zdGFuY2VPZlVzZXI7XG5mdW5jdGlvbiBVc2VyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVc2VyRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVzZXJGcm9tSlNPTiA9IFVzZXJGcm9tSlNPTjtcbmZ1bmN0aW9uIFVzZXJGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZCcpID8gdW5kZWZpbmVkIDoganNvblsnaWQnXSxcbiAgICAgICAgJ3Byb3ZpZGVkSWQnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdwcm92aWRlZF9pZCcpID8gdW5kZWZpbmVkIDoganNvblsncHJvdmlkZWRfaWQnXSxcbiAgICAgICAgJ3ByZWZlcnJlZEVtYWlsJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncHJlZmVycmVkX2VtYWlsJykgPyB1bmRlZmluZWQgOiBqc29uWydwcmVmZXJyZWRfZW1haWwnXSxcbiAgICAgICAgJ3VzZXJuYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndXNlcm5hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3VzZXJuYW1lJ10sXG4gICAgICAgICdsYXN0TmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2xhc3RfbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnbGFzdF9uYW1lJ10sXG4gICAgICAgICdmaXJzdE5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdmaXJzdF9uYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWydmaXJzdF9uYW1lJ10sXG4gICAgICAgICdpc1N1c3BlbmRlZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2lzX3N1c3BlbmRlZCcpID8gdW5kZWZpbmVkIDoganNvblsnaXNfc3VzcGVuZGVkJ10sXG4gICAgICAgICdwaWN0dXJlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncGljdHVyZScpID8gdW5kZWZpbmVkIDoganNvblsncGljdHVyZSddLFxuICAgICAgICAndG90YWxTaWduSW5zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndG90YWxfc2lnbl9pbnMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3RvdGFsX3NpZ25faW5zJ10sXG4gICAgICAgICdmYWlsZWRTaWduSW5zJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZmFpbGVkX3NpZ25faW5zJykgPyB1bmRlZmluZWQgOiBqc29uWydmYWlsZWRfc2lnbl9pbnMnXSxcbiAgICAgICAgJ2xhc3RTaWduZWRJbic6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2xhc3Rfc2lnbmVkX2luJykgPyB1bmRlZmluZWQgOiBqc29uWydsYXN0X3NpZ25lZF9pbiddLFxuICAgICAgICAnY3JlYXRlZE9uJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY3JlYXRlZF9vbicpID8gdW5kZWZpbmVkIDoganNvblsnY3JlYXRlZF9vbiddLFxuICAgICAgICAnb3JnYW5pemF0aW9ucyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ29yZ2FuaXphdGlvbnMnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ29yZ2FuaXphdGlvbnMnXSxcbiAgICAgICAgJ2lkZW50aXRpZXMnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZGVudGl0aWVzJykgPyB1bmRlZmluZWQgOiAoanNvblsnaWRlbnRpdGllcyddLm1hcChVc2VySWRlbnRpdGllc0lubmVyX2pzXzEuVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OKSksXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlckZyb21KU09OVHlwZWQgPSBVc2VyRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVzZXJUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdpZCc6IHZhbHVlLmlkLFxuICAgICAgICAncHJvdmlkZWRfaWQnOiB2YWx1ZS5wcm92aWRlZElkLFxuICAgICAgICAncHJlZmVycmVkX2VtYWlsJzogdmFsdWUucHJlZmVycmVkRW1haWwsXG4gICAgICAgICd1c2VybmFtZSc6IHZhbHVlLnVzZXJuYW1lLFxuICAgICAgICAnbGFzdF9uYW1lJzogdmFsdWUubGFzdE5hbWUsXG4gICAgICAgICdmaXJzdF9uYW1lJzogdmFsdWUuZmlyc3ROYW1lLFxuICAgICAgICAnaXNfc3VzcGVuZGVkJzogdmFsdWUuaXNTdXNwZW5kZWQsXG4gICAgICAgICdwaWN0dXJlJzogdmFsdWUucGljdHVyZSxcbiAgICAgICAgJ3RvdGFsX3NpZ25faW5zJzogdmFsdWUudG90YWxTaWduSW5zLFxuICAgICAgICAnZmFpbGVkX3NpZ25faW5zJzogdmFsdWUuZmFpbGVkU2lnbklucyxcbiAgICAgICAgJ2xhc3Rfc2lnbmVkX2luJzogdmFsdWUubGFzdFNpZ25lZEluLFxuICAgICAgICAnY3JlYXRlZF9vbic6IHZhbHVlLmNyZWF0ZWRPbixcbiAgICAgICAgJ29yZ2FuaXphdGlvbnMnOiB2YWx1ZS5vcmdhbml6YXRpb25zLFxuICAgICAgICAnaWRlbnRpdGllcyc6IHZhbHVlLmlkZW50aXRpZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICh2YWx1ZS5pZGVudGl0aWVzLm1hcChVc2VySWRlbnRpdGllc0lubmVyX2pzXzEuVXNlcklkZW50aXRpZXNJbm5lclRvSlNPTikpLFxuICAgIH07XG59XG5leHBvcnRzLlVzZXJUb0pTT04gPSBVc2VyVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXNlclRvSlNPTiIsIlVzZXJGcm9tSlNPTlR5cGVkIiwiVXNlckZyb21KU09OIiwiaW5zdGFuY2VPZlVzZXIiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiVXNlcklkZW50aXRpZXNJbm5lcl9qc18xIiwiaXNJbnN0YW5jZSIsImpzb24iLCJpZ25vcmVEaXNjcmltaW5hdG9yIiwidW5kZWZpbmVkIiwiZXhpc3RzIiwibWFwIiwiVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OIiwiaWQiLCJwcm92aWRlZElkIiwicHJlZmVycmVkRW1haWwiLCJ1c2VybmFtZSIsImxhc3ROYW1lIiwiZmlyc3ROYW1lIiwiaXNTdXNwZW5kZWQiLCJwaWN0dXJlIiwidG90YWxTaWduSW5zIiwiZmFpbGVkU2lnbklucyIsImxhc3RTaWduZWRJbiIsImNyZWF0ZWRPbiIsIm9yZ2FuaXphdGlvbnMiLCJpZGVudGl0aWVzIiwiVXNlcklkZW50aXRpZXNJbm5lclRvSlNPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/User.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserIdentitiesInnerToJSON = exports.UserIdentitiesInnerFromJSONTyped = exports.UserIdentitiesInnerFromJSON = exports.instanceOfUserIdentitiesInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UserIdentitiesInner interface.\n */ function instanceOfUserIdentitiesInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUserIdentitiesInner = instanceOfUserIdentitiesInner;\nfunction UserIdentitiesInnerFromJSON(json) {\n    return UserIdentitiesInnerFromJSONTyped(json, false);\n}\nexports.UserIdentitiesInnerFromJSON = UserIdentitiesInnerFromJSON;\nfunction UserIdentitiesInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"identity\": !(0, runtime_js_1.exists)(json, \"identity\") ? undefined : json[\"identity\"]\n    };\n}\nexports.UserIdentitiesInnerFromJSONTyped = UserIdentitiesInnerFromJSONTyped;\nfunction UserIdentitiesInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"type\": value.type,\n        \"identity\": value.identity\n    };\n}\nexports.UserIdentitiesInnerToJSON = UserIdentitiesInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlcklkZW50aXRpZXNJbm5lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUNBQWlDLEdBQUdBLHdDQUF3QyxHQUFHQSxtQ0FBbUMsR0FBR0EscUNBQXFDLEdBQUcsS0FBSztBQUNsSyxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLDhCQUE4QkosS0FBSztJQUN4QyxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIscUNBQXFDLEdBQUdLO0FBQ3hDLFNBQVNELDRCQUE0QkssSUFBSTtJQUNyQyxPQUFPTixpQ0FBaUNNLE1BQU07QUFDbEQ7QUFDQVQsbUNBQW1DLEdBQUdJO0FBQ3RDLFNBQVNELGlDQUFpQ00sSUFBSSxFQUFFQyxtQkFBbUI7SUFDL0QsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGNBQWNFLFlBQVlGLElBQUksQ0FBQyxXQUFXO0lBQzFGO0FBQ0o7QUFDQVQsd0NBQXdDLEdBQUdHO0FBQzNDLFNBQVNELDBCQUEwQkQsS0FBSztJQUNwQyxJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1ZLElBQUk7UUFDbEIsWUFBWVosTUFBTWEsUUFBUTtJQUM5QjtBQUNKO0FBQ0FkLGlDQUFpQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VzZXJJZGVudGl0aWVzSW5uZXIuanM/Y2Q1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXNlcklkZW50aXRpZXNJbm5lclRvSlNPTiA9IGV4cG9ydHMuVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVzZXJJZGVudGl0aWVzSW5uZXJGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVzZXJJZGVudGl0aWVzSW5uZXIgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVzZXJJZGVudGl0aWVzSW5uZXIgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXNlcklkZW50aXRpZXNJbm5lcih2YWx1ZSkge1xuICAgIHZhciBpc0luc3RhbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gaXNJbnN0YW5jZTtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlVzZXJJZGVudGl0aWVzSW5uZXIgPSBpbnN0YW5jZU9mVXNlcklkZW50aXRpZXNJbm5lcjtcbmZ1bmN0aW9uIFVzZXJJZGVudGl0aWVzSW5uZXJGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFVzZXJJZGVudGl0aWVzSW5uZXJGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OID0gVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OO1xuZnVuY3Rpb24gVXNlcklkZW50aXRpZXNJbm5lckZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd0eXBlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAndHlwZScpID8gdW5kZWZpbmVkIDoganNvblsndHlwZSddLFxuICAgICAgICAnaWRlbnRpdHknOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdpZGVudGl0eScpID8gdW5kZWZpbmVkIDoganNvblsnaWRlbnRpdHknXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Vc2VySWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZCA9IFVzZXJJZGVudGl0aWVzSW5uZXJGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXNlcklkZW50aXRpZXNJbm5lclRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3R5cGUnOiB2YWx1ZS50eXBlLFxuICAgICAgICAnaWRlbnRpdHknOiB2YWx1ZS5pZGVudGl0eSxcbiAgICB9O1xufVxuZXhwb3J0cy5Vc2VySWRlbnRpdGllc0lubmVyVG9KU09OID0gVXNlcklkZW50aXRpZXNJbm5lclRvSlNPTjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVzZXJJZGVudGl0aWVzSW5uZXJUb0pTT04iLCJVc2VySWRlbnRpdGllc0lubmVyRnJvbUpTT05UeXBlZCIsIlVzZXJJZGVudGl0aWVzSW5uZXJGcm9tSlNPTiIsImluc3RhbmNlT2ZVc2VySWRlbnRpdGllc0lubmVyIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsInR5cGUiLCJpZGVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentity.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentity.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserIdentityToJSON = exports.UserIdentityFromJSONTyped = exports.UserIdentityFromJSON = exports.instanceOfUserIdentity = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UserIdentityResult_js_1 = __webpack_require__(/*! ./UserIdentityResult.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentityResult.js\");\n/**\n * Check if a given object implements the UserIdentity interface.\n */ function instanceOfUserIdentity(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUserIdentity = instanceOfUserIdentity;\nfunction UserIdentityFromJSON(json) {\n    return UserIdentityFromJSONTyped(json, false);\n}\nexports.UserIdentityFromJSON = UserIdentityFromJSON;\nfunction UserIdentityFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"type\": !(0, runtime_js_1.exists)(json, \"type\") ? undefined : json[\"type\"],\n        \"result\": !(0, runtime_js_1.exists)(json, \"result\") ? undefined : (0, UserIdentityResult_js_1.UserIdentityResultFromJSON)(json[\"result\"])\n    };\n}\nexports.UserIdentityFromJSONTyped = UserIdentityFromJSONTyped;\nfunction UserIdentityToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"type\": value.type,\n        \"result\": (0, UserIdentityResult_js_1.UserIdentityResultToJSON)(value.result)\n    };\n}\nexports.UserIdentityToJSON = UserIdentityToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlcklkZW50aXR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwwQkFBMEIsR0FBR0EsaUNBQWlDLEdBQUdBLDRCQUE0QixHQUFHQSw4QkFBOEIsR0FBRyxLQUFLO0FBQ3RJLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDLElBQUlDLDBCQUEwQkQsbUJBQU9BLENBQUMsMkhBQXlCO0FBQy9EOztDQUVDLEdBQ0QsU0FBU0YsdUJBQXVCSixLQUFLO0lBQ2pDLElBQUlRLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBVCw4QkFBOEIsR0FBR0s7QUFDakMsU0FBU0QscUJBQXFCTSxJQUFJO0lBQzlCLE9BQU9QLDBCQUEwQk8sTUFBTTtBQUMzQztBQUNBViw0QkFBNEIsR0FBR0k7QUFDL0IsU0FBU0QsMEJBQTBCTyxJQUFJLEVBQUVDLG1CQUFtQjtJQUN4RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVEsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxVQUFVLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sWUFBWUUsWUFBWSxDQUFDLEdBQUdKLHdCQUF3Qk0sMEJBQTBCLEVBQUVKLElBQUksQ0FBQyxTQUFTO0lBQzVJO0FBQ0o7QUFDQVYsaUNBQWlDLEdBQUdHO0FBQ3BDLFNBQVNELG1CQUFtQkQsS0FBSztJQUM3QixJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1jLElBQUk7UUFDbEIsVUFBVSxDQUFDLEdBQUdQLHdCQUF3QlEsd0JBQXdCLEVBQUVmLE1BQU1nQixNQUFNO0lBQ2hGO0FBQ0o7QUFDQWpCLDBCQUEwQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VzZXJJZGVudGl0eS5qcz80ODI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vc2VySWRlbnRpdHlUb0pTT04gPSBleHBvcnRzLlVzZXJJZGVudGl0eUZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVzZXJJZGVudGl0eUZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXNlcklkZW50aXR5ID0gdm9pZCAwO1xudmFyIHJ1bnRpbWVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lLmpzXCIpO1xudmFyIFVzZXJJZGVudGl0eVJlc3VsdF9qc18xID0gcmVxdWlyZShcIi4vVXNlcklkZW50aXR5UmVzdWx0LmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVc2VySWRlbnRpdHkgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXNlcklkZW50aXR5KHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXNlcklkZW50aXR5ID0gaW5zdGFuY2VPZlVzZXJJZGVudGl0eTtcbmZ1bmN0aW9uIFVzZXJJZGVudGl0eUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXNlcklkZW50aXR5RnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVzZXJJZGVudGl0eUZyb21KU09OID0gVXNlcklkZW50aXR5RnJvbUpTT047XG5mdW5jdGlvbiBVc2VySWRlbnRpdHlGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAndHlwZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3R5cGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3R5cGUnXSxcbiAgICAgICAgJ3Jlc3VsdCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Jlc3VsdCcpID8gdW5kZWZpbmVkIDogKDAsIFVzZXJJZGVudGl0eVJlc3VsdF9qc18xLlVzZXJJZGVudGl0eVJlc3VsdEZyb21KU09OKShqc29uWydyZXN1bHQnXSksXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlcklkZW50aXR5RnJvbUpTT05UeXBlZCA9IFVzZXJJZGVudGl0eUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVc2VySWRlbnRpdHlUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd0eXBlJzogdmFsdWUudHlwZSxcbiAgICAgICAgJ3Jlc3VsdCc6ICgwLCBVc2VySWRlbnRpdHlSZXN1bHRfanNfMS5Vc2VySWRlbnRpdHlSZXN1bHRUb0pTT04pKHZhbHVlLnJlc3VsdCksXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlcklkZW50aXR5VG9KU09OID0gVXNlcklkZW50aXR5VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXNlcklkZW50aXR5VG9KU09OIiwiVXNlcklkZW50aXR5RnJvbUpTT05UeXBlZCIsIlVzZXJJZGVudGl0eUZyb21KU09OIiwiaW5zdGFuY2VPZlVzZXJJZGVudGl0eSIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJVc2VySWRlbnRpdHlSZXN1bHRfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIlVzZXJJZGVudGl0eVJlc3VsdEZyb21KU09OIiwidHlwZSIsIlVzZXJJZGVudGl0eVJlc3VsdFRvSlNPTiIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentityResult.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentityResult.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserIdentityResultToJSON = exports.UserIdentityResultFromJSONTyped = exports.UserIdentityResultFromJSON = exports.instanceOfUserIdentityResult = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UserIdentityResult interface.\n */ function instanceOfUserIdentityResult(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUserIdentityResult = instanceOfUserIdentityResult;\nfunction UserIdentityResultFromJSON(json) {\n    return UserIdentityResultFromJSONTyped(json, false);\n}\nexports.UserIdentityResultFromJSON = UserIdentityResultFromJSON;\nfunction UserIdentityResultFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"created\": !(0, runtime_js_1.exists)(json, \"created\") ? undefined : json[\"created\"]\n    };\n}\nexports.UserIdentityResultFromJSONTyped = UserIdentityResultFromJSONTyped;\nfunction UserIdentityResultToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"created\": value.created\n    };\n}\nexports.UserIdentityResultToJSON = UserIdentityResultToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlcklkZW50aXR5UmVzdWx0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7Ozs7OztDQVVDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUNBQXVDLEdBQUdBLGtDQUFrQyxHQUFHQSxvQ0FBb0MsR0FBRyxLQUFLO0FBQzlKLElBQUlNLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUFlO0FBQzFDOztDQUVDLEdBQ0QsU0FBU0YsNkJBQTZCSixLQUFLO0lBQ3ZDLElBQUlPLGFBQWE7SUFDakIsT0FBT0E7QUFDWDtBQUNBUixvQ0FBb0MsR0FBR0s7QUFDdkMsU0FBU0QsMkJBQTJCSyxJQUFJO0lBQ3BDLE9BQU9OLGdDQUFnQ00sTUFBTTtBQUNqRDtBQUNBVCxrQ0FBa0MsR0FBR0k7QUFDckMsU0FBU0QsZ0NBQWdDTSxJQUFJLEVBQUVDLG1CQUFtQjtJQUM5RCxJQUFJLFNBQVVDLGFBQWVGLFNBQVMsTUFBTztRQUN6QyxPQUFPQTtJQUNYO0lBQ0EsT0FBTztRQUNILFdBQVcsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtJQUN2RjtBQUNKO0FBQ0FULHVDQUF1QyxHQUFHRztBQUMxQyxTQUFTRCx5QkFBeUJELEtBQUs7SUFDbkMsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxXQUFXQSxNQUFNWSxPQUFPO0lBQzVCO0FBQ0o7QUFDQWIsZ0NBQWdDLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlcklkZW50aXR5UmVzdWx0LmpzP2IwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVzZXJJZGVudGl0eVJlc3VsdFRvSlNPTiA9IGV4cG9ydHMuVXNlcklkZW50aXR5UmVzdWx0RnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXNlcklkZW50aXR5UmVzdWx0RnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVc2VySWRlbnRpdHlSZXN1bHQgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFVzZXJJZGVudGl0eVJlc3VsdCBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVc2VySWRlbnRpdHlSZXN1bHQodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVc2VySWRlbnRpdHlSZXN1bHQgPSBpbnN0YW5jZU9mVXNlcklkZW50aXR5UmVzdWx0O1xuZnVuY3Rpb24gVXNlcklkZW50aXR5UmVzdWx0RnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVc2VySWRlbnRpdHlSZXN1bHRGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmV4cG9ydHMuVXNlcklkZW50aXR5UmVzdWx0RnJvbUpTT04gPSBVc2VySWRlbnRpdHlSZXN1bHRGcm9tSlNPTjtcbmZ1bmN0aW9uIFVzZXJJZGVudGl0eVJlc3VsdEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmICgoanNvbiA9PT0gdW5kZWZpbmVkKSB8fCAoanNvbiA9PT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjcmVhdGVkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnY3JlYXRlZCcpID8gdW5kZWZpbmVkIDoganNvblsnY3JlYXRlZCddLFxuICAgIH07XG59XG5leHBvcnRzLlVzZXJJZGVudGl0eVJlc3VsdEZyb21KU09OVHlwZWQgPSBVc2VySWRlbnRpdHlSZXN1bHRGcm9tSlNPTlR5cGVkO1xuZnVuY3Rpb24gVXNlcklkZW50aXR5UmVzdWx0VG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY3JlYXRlZCc6IHZhbHVlLmNyZWF0ZWQsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlcklkZW50aXR5UmVzdWx0VG9KU09OID0gVXNlcklkZW50aXR5UmVzdWx0VG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXNlcklkZW50aXR5UmVzdWx0VG9KU09OIiwiVXNlcklkZW50aXR5UmVzdWx0RnJvbUpTT05UeXBlZCIsIlVzZXJJZGVudGl0eVJlc3VsdEZyb21KU09OIiwiaW5zdGFuY2VPZlVzZXJJZGVudGl0eVJlc3VsdCIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJjcmVhdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentityResult.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfile.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfile.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserProfileToJSON = exports.UserProfileFromJSONTyped = exports.UserProfileFromJSON = exports.instanceOfUserProfile = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UserProfile interface.\n */ function instanceOfUserProfile(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUserProfile = instanceOfUserProfile;\nfunction UserProfileFromJSON(json) {\n    return UserProfileFromJSONTyped(json, false);\n}\nexports.UserProfileFromJSON = UserProfileFromJSON;\nfunction UserProfileFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"preferredEmail\": !(0, runtime_js_1.exists)(json, \"preferred_email\") ? undefined : json[\"preferred_email\"],\n        \"username\": !(0, runtime_js_1.exists)(json, \"username\") ? undefined : json[\"username\"],\n        \"providedId\": !(0, runtime_js_1.exists)(json, \"provided_id\") ? undefined : json[\"provided_id\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"picture\": !(0, runtime_js_1.exists)(json, \"picture\") ? undefined : json[\"picture\"]\n    };\n}\nexports.UserProfileFromJSONTyped = UserProfileFromJSONTyped;\nfunction UserProfileToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"preferred_email\": value.preferredEmail,\n        \"username\": value.username,\n        \"provided_id\": value.providedId,\n        \"last_name\": value.lastName,\n        \"first_name\": value.firstName,\n        \"picture\": value.picture\n    };\n}\nexports.UserProfileToJSON = UserProfileToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlclByb2ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7Ozs7O0NBVUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHlCQUF5QixHQUFHQSxnQ0FBZ0MsR0FBR0EsMkJBQTJCLEdBQUdBLDZCQUE2QixHQUFHLEtBQUs7QUFDbEksSUFBSU0sZUFBZUMsbUJBQU9BLENBQUMsK0ZBQWU7QUFDMUM7O0NBRUMsR0FDRCxTQUFTRixzQkFBc0JKLEtBQUs7SUFDaEMsSUFBSU8sYUFBYTtJQUNqQixPQUFPQTtBQUNYO0FBQ0FSLDZCQUE2QixHQUFHSztBQUNoQyxTQUFTRCxvQkFBb0JLLElBQUk7SUFDN0IsT0FBT04seUJBQXlCTSxNQUFNO0FBQzFDO0FBQ0FULDJCQUEyQixHQUFHSTtBQUM5QixTQUFTRCx5QkFBeUJNLElBQUksRUFBRUMsbUJBQW1CO0lBQ3ZELElBQUksU0FBVUMsYUFBZUYsU0FBUyxNQUFPO1FBQ3pDLE9BQU9BO0lBQ1g7SUFDQSxPQUFPO1FBQ0gsTUFBTSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFFBQVFFLFlBQVlGLElBQUksQ0FBQyxLQUFLO1FBQ3BFLGtCQUFrQixDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLHFCQUFxQkUsWUFBWUYsSUFBSSxDQUFDLGtCQUFrQjtRQUMxRyxZQUFZLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sY0FBY0UsWUFBWUYsSUFBSSxDQUFDLFdBQVc7UUFDdEYsY0FBYyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGlCQUFpQkUsWUFBWUYsSUFBSSxDQUFDLGNBQWM7UUFDOUYsWUFBWSxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGVBQWVFLFlBQVlGLElBQUksQ0FBQyxZQUFZO1FBQ3hGLGFBQWEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO1FBQzNGLFdBQVcsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxhQUFhRSxZQUFZRixJQUFJLENBQUMsVUFBVTtJQUN2RjtBQUNKO0FBQ0FULGdDQUFnQyxHQUFHRztBQUNuQyxTQUFTRCxrQkFBa0JELEtBQUs7SUFDNUIsSUFBSUEsVUFBVVUsV0FBVztRQUNyQixPQUFPQTtJQUNYO0lBQ0EsSUFBSVYsVUFBVSxNQUFNO1FBQ2hCLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNQSxNQUFNWSxFQUFFO1FBQ2QsbUJBQW1CWixNQUFNYSxjQUFjO1FBQ3ZDLFlBQVliLE1BQU1jLFFBQVE7UUFDMUIsZUFBZWQsTUFBTWUsVUFBVTtRQUMvQixhQUFhZixNQUFNZ0IsUUFBUTtRQUMzQixjQUFjaEIsTUFBTWlCLFNBQVM7UUFDN0IsV0FBV2pCLE1BQU1rQixPQUFPO0lBQzVCO0FBQ0o7QUFDQW5CLHlCQUF5QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VzZXJQcm9maWxlLmpzP2EwYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogS2luZGUgTWFuYWdlbWVudCBBUElcbiAqIFByb3ZpZGVzIGVuZHBvaW50cyB0byBtYW5hZ2UgeW91ciBLaW5kZSBCdXNpbmVzc2VzXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDFcbiAqIENvbnRhY3Q6IHN1cHBvcnRAa2luZGUuY29tXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVzZXJQcm9maWxlVG9KU09OID0gZXhwb3J0cy5Vc2VyUHJvZmlsZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVzZXJQcm9maWxlRnJvbUpTT04gPSBleHBvcnRzLmluc3RhbmNlT2ZVc2VyUHJvZmlsZSA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXNlclByb2ZpbGUgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mVXNlclByb2ZpbGUodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVc2VyUHJvZmlsZSA9IGluc3RhbmNlT2ZVc2VyUHJvZmlsZTtcbmZ1bmN0aW9uIFVzZXJQcm9maWxlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVc2VyUHJvZmlsZUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Vc2VyUHJvZmlsZUZyb21KU09OID0gVXNlclByb2ZpbGVGcm9tSlNPTjtcbmZ1bmN0aW9uIFVzZXJQcm9maWxlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdwcmVmZXJyZWRFbWFpbCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3ByZWZlcnJlZF9lbWFpbCcpID8gdW5kZWZpbmVkIDoganNvblsncHJlZmVycmVkX2VtYWlsJ10sXG4gICAgICAgICd1c2VybmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJuYW1lJykgPyB1bmRlZmluZWQgOiBqc29uWyd1c2VybmFtZSddLFxuICAgICAgICAncHJvdmlkZWRJZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Byb3ZpZGVkX2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydwcm92aWRlZF9pZCddLFxuICAgICAgICAnbGFzdE5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdsYXN0X25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2xhc3RfbmFtZSddLFxuICAgICAgICAnZmlyc3ROYW1lJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZmlyc3RfbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnZmlyc3RfbmFtZSddLFxuICAgICAgICAncGljdHVyZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3BpY3R1cmUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3BpY3R1cmUnXSxcbiAgICB9O1xufVxuZXhwb3J0cy5Vc2VyUHJvZmlsZUZyb21KU09OVHlwZWQgPSBVc2VyUHJvZmlsZUZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVc2VyUHJvZmlsZVRvSlNPTih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogdmFsdWUuaWQsXG4gICAgICAgICdwcmVmZXJyZWRfZW1haWwnOiB2YWx1ZS5wcmVmZXJyZWRFbWFpbCxcbiAgICAgICAgJ3VzZXJuYW1lJzogdmFsdWUudXNlcm5hbWUsXG4gICAgICAgICdwcm92aWRlZF9pZCc6IHZhbHVlLnByb3ZpZGVkSWQsXG4gICAgICAgICdsYXN0X25hbWUnOiB2YWx1ZS5sYXN0TmFtZSxcbiAgICAgICAgJ2ZpcnN0X25hbWUnOiB2YWx1ZS5maXJzdE5hbWUsXG4gICAgICAgICdwaWN0dXJlJzogdmFsdWUucGljdHVyZSxcbiAgICB9O1xufVxuZXhwb3J0cy5Vc2VyUHJvZmlsZVRvSlNPTiA9IFVzZXJQcm9maWxlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXNlclByb2ZpbGVUb0pTT04iLCJVc2VyUHJvZmlsZUZyb21KU09OVHlwZWQiLCJVc2VyUHJvZmlsZUZyb21KU09OIiwiaW5zdGFuY2VPZlVzZXJQcm9maWxlIiwicnVudGltZV9qc18xIiwicmVxdWlyZSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsImlkIiwicHJlZmVycmVkRW1haWwiLCJ1c2VybmFtZSIsInByb3ZpZGVkSWQiLCJsYXN0TmFtZSIsImZpcnN0TmFtZSIsInBpY3R1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfileV2.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfileV2.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UserProfileV2ToJSON = exports.UserProfileV2FromJSONTyped = exports.UserProfileV2FromJSON = exports.instanceOfUserProfileV2 = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\n/**\n * Check if a given object implements the UserProfileV2 interface.\n */ function instanceOfUserProfileV2(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUserProfileV2 = instanceOfUserProfileV2;\nfunction UserProfileV2FromJSON(json) {\n    return UserProfileV2FromJSONTyped(json, false);\n}\nexports.UserProfileV2FromJSON = UserProfileV2FromJSON;\nfunction UserProfileV2FromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"sub\": !(0, runtime_js_1.exists)(json, \"sub\") ? undefined : json[\"sub\"],\n        \"providedId\": !(0, runtime_js_1.exists)(json, \"provided_id\") ? undefined : json[\"provided_id\"],\n        \"name\": !(0, runtime_js_1.exists)(json, \"name\") ? undefined : json[\"name\"],\n        \"givenName\": !(0, runtime_js_1.exists)(json, \"given_name\") ? undefined : json[\"given_name\"],\n        \"familyName\": !(0, runtime_js_1.exists)(json, \"family_name\") ? undefined : json[\"family_name\"],\n        \"updatedAt\": !(0, runtime_js_1.exists)(json, \"updated_at\") ? undefined : json[\"updated_at\"],\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"picture\": !(0, runtime_js_1.exists)(json, \"picture\") ? undefined : json[\"picture\"]\n    };\n}\nexports.UserProfileV2FromJSONTyped = UserProfileV2FromJSONTyped;\nfunction UserProfileV2ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"sub\": value.sub,\n        \"provided_id\": value.providedId,\n        \"name\": value.name,\n        \"given_name\": value.givenName,\n        \"family_name\": value.familyName,\n        \"updated_at\": value.updatedAt,\n        \"email\": value.email,\n        \"picture\": value.picture\n    };\n}\nexports.UserProfileV2ToJSON = UserProfileV2ToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlclByb2ZpbGVWMi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGtDQUFrQyxHQUFHQSw2QkFBNkIsR0FBR0EsK0JBQStCLEdBQUcsS0FBSztBQUMxSSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQzs7Q0FFQyxHQUNELFNBQVNGLHdCQUF3QkosS0FBSztJQUNsQyxJQUFJTyxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVIsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELHNCQUFzQkssSUFBSTtJQUMvQixPQUFPTiwyQkFBMkJNLE1BQU07QUFDNUM7QUFDQVQsNkJBQTZCLEdBQUdJO0FBQ2hDLFNBQVNELDJCQUEyQk0sSUFBSSxFQUFFQyxtQkFBbUI7SUFDekQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxNQUFNLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sUUFBUUUsWUFBWUYsSUFBSSxDQUFDLEtBQUs7UUFDcEUsT0FBTyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLFNBQVNFLFlBQVlGLElBQUksQ0FBQyxNQUFNO1FBQ3ZFLGNBQWMsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxpQkFBaUJFLFlBQVlGLElBQUksQ0FBQyxjQUFjO1FBQzlGLFFBQVEsQ0FBQyxDQUFDLEdBQUdILGFBQWFNLE1BQU0sRUFBRUgsTUFBTSxVQUFVRSxZQUFZRixJQUFJLENBQUMsT0FBTztRQUMxRSxhQUFhLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZRixJQUFJLENBQUMsYUFBYTtRQUMzRixjQUFjLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0saUJBQWlCRSxZQUFZRixJQUFJLENBQUMsY0FBYztRQUM5RixhQUFhLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sZ0JBQWdCRSxZQUFZRixJQUFJLENBQUMsYUFBYTtRQUMzRixTQUFTLENBQUMsQ0FBQyxHQUFHSCxhQUFhTSxNQUFNLEVBQUVILE1BQU0sV0FBV0UsWUFBWUYsSUFBSSxDQUFDLFFBQVE7UUFDN0UsV0FBVyxDQUFDLENBQUMsR0FBR0gsYUFBYU0sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO0lBQ3ZGO0FBQ0o7QUFDQVQsa0NBQWtDLEdBQUdHO0FBQ3JDLFNBQVNELG9CQUFvQkQsS0FBSztJQUM5QixJQUFJQSxVQUFVVSxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILE1BQU1BLE1BQU1ZLEVBQUU7UUFDZCxPQUFPWixNQUFNYSxHQUFHO1FBQ2hCLGVBQWViLE1BQU1jLFVBQVU7UUFDL0IsUUFBUWQsTUFBTWUsSUFBSTtRQUNsQixjQUFjZixNQUFNZ0IsU0FBUztRQUM3QixlQUFlaEIsTUFBTWlCLFVBQVU7UUFDL0IsY0FBY2pCLE1BQU1rQixTQUFTO1FBQzdCLFNBQVNsQixNQUFNbUIsS0FBSztRQUNwQixXQUFXbkIsTUFBTW9CLE9BQU87SUFDNUI7QUFDSjtBQUNBckIsMkJBQTJCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlclByb2ZpbGVWMi5qcz9jNjQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIEtpbmRlIE1hbmFnZW1lbnQgQVBJXG4gKiBQcm92aWRlcyBlbmRwb2ludHMgdG8gbWFuYWdlIHlvdXIgS2luZGUgQnVzaW5lc3Nlc1xuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxXG4gKiBDb250YWN0OiBzdXBwb3J0QGtpbmRlLmNvbVxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vc2VyUHJvZmlsZVYyVG9KU09OID0gZXhwb3J0cy5Vc2VyUHJvZmlsZVYyRnJvbUpTT05UeXBlZCA9IGV4cG9ydHMuVXNlclByb2ZpbGVWMkZyb21KU09OID0gZXhwb3J0cy5pbnN0YW5jZU9mVXNlclByb2ZpbGVWMiA9IHZvaWQgMDtcbnZhciBydW50aW1lX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS5qc1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVXNlclByb2ZpbGVWMiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZVc2VyUHJvZmlsZVYyKHZhbHVlKSB7XG4gICAgdmFyIGlzSW5zdGFuY2UgPSB0cnVlO1xuICAgIHJldHVybiBpc0luc3RhbmNlO1xufVxuZXhwb3J0cy5pbnN0YW5jZU9mVXNlclByb2ZpbGVWMiA9IGluc3RhbmNlT2ZVc2VyUHJvZmlsZVYyO1xuZnVuY3Rpb24gVXNlclByb2ZpbGVWMkZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVXNlclByb2ZpbGVWMkZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZXhwb3J0cy5Vc2VyUHJvZmlsZVYyRnJvbUpTT04gPSBVc2VyUHJvZmlsZVYyRnJvbUpTT047XG5mdW5jdGlvbiBVc2VyUHJvZmlsZVYyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKChqc29uID09PSB1bmRlZmluZWQpIHx8IChqc29uID09PSBudWxsKSkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnaWQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2lkJ10sXG4gICAgICAgICdzdWInOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdzdWInKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3N1YiddLFxuICAgICAgICAncHJvdmlkZWRJZCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3Byb3ZpZGVkX2lkJykgPyB1bmRlZmluZWQgOiBqc29uWydwcm92aWRlZF9pZCddLFxuICAgICAgICAnbmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ25hbWUnXSxcbiAgICAgICAgJ2dpdmVuTmFtZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2dpdmVuX25hbWUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2dpdmVuX25hbWUnXSxcbiAgICAgICAgJ2ZhbWlseU5hbWUnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdmYW1pbHlfbmFtZScpID8gdW5kZWZpbmVkIDoganNvblsnZmFtaWx5X25hbWUnXSxcbiAgICAgICAgJ3VwZGF0ZWRBdCc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VwZGF0ZWRfYXQnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ3VwZGF0ZWRfYXQnXSxcbiAgICAgICAgJ2VtYWlsJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAnZW1haWwnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2VtYWlsJ10sXG4gICAgICAgICdwaWN0dXJlJzogISgwLCBydW50aW1lX2pzXzEuZXhpc3RzKShqc29uLCAncGljdHVyZScpID8gdW5kZWZpbmVkIDoganNvblsncGljdHVyZSddLFxuICAgIH07XG59XG5leHBvcnRzLlVzZXJQcm9maWxlVjJGcm9tSlNPTlR5cGVkID0gVXNlclByb2ZpbGVWMkZyb21KU09OVHlwZWQ7XG5mdW5jdGlvbiBVc2VyUHJvZmlsZVYyVG9KU09OKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnaWQnOiB2YWx1ZS5pZCxcbiAgICAgICAgJ3N1Yic6IHZhbHVlLnN1YixcbiAgICAgICAgJ3Byb3ZpZGVkX2lkJzogdmFsdWUucHJvdmlkZWRJZCxcbiAgICAgICAgJ25hbWUnOiB2YWx1ZS5uYW1lLFxuICAgICAgICAnZ2l2ZW5fbmFtZSc6IHZhbHVlLmdpdmVuTmFtZSxcbiAgICAgICAgJ2ZhbWlseV9uYW1lJzogdmFsdWUuZmFtaWx5TmFtZSxcbiAgICAgICAgJ3VwZGF0ZWRfYXQnOiB2YWx1ZS51cGRhdGVkQXQsXG4gICAgICAgICdlbWFpbCc6IHZhbHVlLmVtYWlsLFxuICAgICAgICAncGljdHVyZSc6IHZhbHVlLnBpY3R1cmUsXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlclByb2ZpbGVWMlRvSlNPTiA9IFVzZXJQcm9maWxlVjJUb0pTT047XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVc2VyUHJvZmlsZVYyVG9KU09OIiwiVXNlclByb2ZpbGVWMkZyb21KU09OVHlwZWQiLCJVc2VyUHJvZmlsZVYyRnJvbUpTT04iLCJpbnN0YW5jZU9mVXNlclByb2ZpbGVWMiIsInJ1bnRpbWVfanNfMSIsInJlcXVpcmUiLCJpc0luc3RhbmNlIiwianNvbiIsImlnbm9yZURpc2NyaW1pbmF0b3IiLCJ1bmRlZmluZWQiLCJleGlzdHMiLCJpZCIsInN1YiIsInByb3ZpZGVkSWQiLCJuYW1lIiwiZ2l2ZW5OYW1lIiwiZmFtaWx5TmFtZSIsInVwZGF0ZWRBdCIsImVtYWlsIiwicGljdHVyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfileV2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponse.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponse.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UsersResponseToJSON = exports.UsersResponseFromJSONTyped = exports.UsersResponseFromJSON = exports.instanceOfUsersResponse = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UsersResponseUsersInner_js_1 = __webpack_require__(/*! ./UsersResponseUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponseUsersInner.js\");\n/**\n * Check if a given object implements the UsersResponse interface.\n */ function instanceOfUsersResponse(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUsersResponse = instanceOfUsersResponse;\nfunction UsersResponseFromJSON(json) {\n    return UsersResponseFromJSONTyped(json, false);\n}\nexports.UsersResponseFromJSON = UsersResponseFromJSON;\nfunction UsersResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"code\": !(0, runtime_js_1.exists)(json, \"code\") ? undefined : json[\"code\"],\n        \"message\": !(0, runtime_js_1.exists)(json, \"message\") ? undefined : json[\"message\"],\n        \"users\": !(0, runtime_js_1.exists)(json, \"users\") ? undefined : json[\"users\"].map(UsersResponseUsersInner_js_1.UsersResponseUsersInnerFromJSON),\n        \"nextToken\": !(0, runtime_js_1.exists)(json, \"next_token\") ? undefined : json[\"next_token\"]\n    };\n}\nexports.UsersResponseFromJSONTyped = UsersResponseFromJSONTyped;\nfunction UsersResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"code\": value.code,\n        \"message\": value.message,\n        \"users\": value.users === undefined ? undefined : value.users.map(UsersResponseUsersInner_js_1.UsersResponseUsersInnerToJSON),\n        \"next_token\": value.nextToken\n    };\n}\nexports.UsersResponseToJSON = UsersResponseToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9tb2RlbHMvVXNlcnNSZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Ozs7Q0FVQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGtDQUFrQyxHQUFHQSw2QkFBNkIsR0FBR0EsK0JBQStCLEdBQUcsS0FBSztBQUMxSSxJQUFJTSxlQUFlQyxtQkFBT0EsQ0FBQywrRkFBZTtBQUMxQyxJQUFJQywrQkFBK0JELG1CQUFPQSxDQUFDLHFJQUE4QjtBQUN6RTs7Q0FFQyxHQUNELFNBQVNGLHdCQUF3QkosS0FBSztJQUNsQyxJQUFJUSxhQUFhO0lBQ2pCLE9BQU9BO0FBQ1g7QUFDQVQsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELHNCQUFzQk0sSUFBSTtJQUMvQixPQUFPUCwyQkFBMkJPLE1BQU07QUFDNUM7QUFDQVYsNkJBQTZCLEdBQUdJO0FBQ2hDLFNBQVNELDJCQUEyQk8sSUFBSSxFQUFFQyxtQkFBbUI7SUFDekQsSUFBSSxTQUFVQyxhQUFlRixTQUFTLE1BQU87UUFDekMsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSCxRQUFRLENBQUMsQ0FBQyxHQUFHSixhQUFhTyxNQUFNLEVBQUVILE1BQU0sVUFBVUUsWUFBWUYsSUFBSSxDQUFDLE9BQU87UUFDMUUsV0FBVyxDQUFDLENBQUMsR0FBR0osYUFBYU8sTUFBTSxFQUFFSCxNQUFNLGFBQWFFLFlBQVlGLElBQUksQ0FBQyxVQUFVO1FBQ25GLFNBQVMsQ0FBQyxDQUFDLEdBQUdKLGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxXQUFXRSxZQUFhRixJQUFJLENBQUMsUUFBUSxDQUFDSSxHQUFHLENBQUNOLDZCQUE2Qk8sK0JBQStCO1FBQy9JLGFBQWEsQ0FBQyxDQUFDLEdBQUdULGFBQWFPLE1BQU0sRUFBRUgsTUFBTSxnQkFBZ0JFLFlBQVlGLElBQUksQ0FBQyxhQUFhO0lBQy9GO0FBQ0o7QUFDQVYsa0NBQWtDLEdBQUdHO0FBQ3JDLFNBQVNELG9CQUFvQkQsS0FBSztJQUM5QixJQUFJQSxVQUFVVyxXQUFXO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJWCxVQUFVLE1BQU07UUFDaEIsT0FBTztJQUNYO0lBQ0EsT0FBTztRQUNILFFBQVFBLE1BQU1lLElBQUk7UUFDbEIsV0FBV2YsTUFBTWdCLE9BQU87UUFDeEIsU0FBU2hCLE1BQU1pQixLQUFLLEtBQUtOLFlBQVlBLFlBQWFYLE1BQU1pQixLQUFLLENBQUNKLEdBQUcsQ0FBQ04sNkJBQTZCVyw2QkFBNkI7UUFDNUgsY0FBY2xCLE1BQU1tQixTQUFTO0lBQ2pDO0FBQ0o7QUFDQXBCLDJCQUEyQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvbW9kZWxzL1VzZXJzUmVzcG9uc2UuanM/M2Y2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBLaW5kZSBNYW5hZ2VtZW50IEFQSVxuICogUHJvdmlkZXMgZW5kcG9pbnRzIHRvIG1hbmFnZSB5b3VyIEtpbmRlIEJ1c2luZXNzZXNcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMVxuICogQ29udGFjdDogc3VwcG9ydEBraW5kZS5jb21cbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXNlcnNSZXNwb25zZVRvSlNPTiA9IGV4cG9ydHMuVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBleHBvcnRzLlVzZXJzUmVzcG9uc2VGcm9tSlNPTiA9IGV4cG9ydHMuaW5zdGFuY2VPZlVzZXJzUmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgcnVudGltZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUuanNcIik7XG52YXIgVXNlcnNSZXNwb25zZVVzZXJzSW5uZXJfanNfMSA9IHJlcXVpcmUoXCIuL1VzZXJzUmVzcG9uc2VVc2Vyc0lubmVyLmpzXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBVc2Vyc1Jlc3BvbnNlIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlVzZXJzUmVzcG9uc2UodmFsdWUpIHtcbiAgICB2YXIgaXNJbnN0YW5jZSA9IHRydWU7XG4gICAgcmV0dXJuIGlzSW5zdGFuY2U7XG59XG5leHBvcnRzLmluc3RhbmNlT2ZVc2Vyc1Jlc3BvbnNlID0gaW5zdGFuY2VPZlVzZXJzUmVzcG9uc2U7XG5mdW5jdGlvbiBVc2Vyc1Jlc3BvbnNlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBVc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5leHBvcnRzLlVzZXJzUmVzcG9uc2VGcm9tSlNPTiA9IFVzZXJzUmVzcG9uc2VGcm9tSlNPTjtcbmZ1bmN0aW9uIFVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoKGpzb24gPT09IHVuZGVmaW5lZCkgfHwgKGpzb24gPT09IG51bGwpKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnY29kZSc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ2NvZGUnKSA/IHVuZGVmaW5lZCA6IGpzb25bJ2NvZGUnXSxcbiAgICAgICAgJ21lc3NhZ2UnOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICdtZXNzYWdlJykgPyB1bmRlZmluZWQgOiBqc29uWydtZXNzYWdlJ10sXG4gICAgICAgICd1c2Vycyc6ICEoMCwgcnVudGltZV9qc18xLmV4aXN0cykoanNvbiwgJ3VzZXJzJykgPyB1bmRlZmluZWQgOiAoanNvblsndXNlcnMnXS5tYXAoVXNlcnNSZXNwb25zZVVzZXJzSW5uZXJfanNfMS5Vc2Vyc1Jlc3BvbnNlVXNlcnNJbm5lckZyb21KU09OKSksXG4gICAgICAgICduZXh0VG9rZW4nOiAhKDAsIHJ1bnRpbWVfanNfMS5leGlzdHMpKGpzb24sICduZXh0X3Rva2VuJykgPyB1bmRlZmluZWQgOiBqc29uWyduZXh0X3Rva2VuJ10sXG4gICAgfTtcbn1cbmV4cG9ydHMuVXNlcnNSZXNwb25zZUZyb21KU09OVHlwZWQgPSBVc2Vyc1Jlc3BvbnNlRnJvbUpTT05UeXBlZDtcbmZ1bmN0aW9uIFVzZXJzUmVzcG9uc2VUb0pTT04odmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdjb2RlJzogdmFsdWUuY29kZSxcbiAgICAgICAgJ21lc3NhZ2UnOiB2YWx1ZS5tZXNzYWdlLFxuICAgICAgICAndXNlcnMnOiB2YWx1ZS51c2VycyA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogKHZhbHVlLnVzZXJzLm1hcChVc2Vyc1Jlc3BvbnNlVXNlcnNJbm5lcl9qc18xLlVzZXJzUmVzcG9uc2VVc2Vyc0lubmVyVG9KU09OKSksXG4gICAgICAgICduZXh0X3Rva2VuJzogdmFsdWUubmV4dFRva2VuLFxuICAgIH07XG59XG5leHBvcnRzLlVzZXJzUmVzcG9uc2VUb0pTT04gPSBVc2Vyc1Jlc3BvbnNlVG9KU09OO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVXNlcnNSZXNwb25zZVRvSlNPTiIsIlVzZXJzUmVzcG9uc2VGcm9tSlNPTlR5cGVkIiwiVXNlcnNSZXNwb25zZUZyb21KU09OIiwiaW5zdGFuY2VPZlVzZXJzUmVzcG9uc2UiLCJydW50aW1lX2pzXzEiLCJyZXF1aXJlIiwiVXNlcnNSZXNwb25zZVVzZXJzSW5uZXJfanNfMSIsImlzSW5zdGFuY2UiLCJqc29uIiwiaWdub3JlRGlzY3JpbWluYXRvciIsInVuZGVmaW5lZCIsImV4aXN0cyIsIm1hcCIsIlVzZXJzUmVzcG9uc2VVc2Vyc0lubmVyRnJvbUpTT04iLCJjb2RlIiwibWVzc2FnZSIsInVzZXJzIiwiVXNlcnNSZXNwb25zZVVzZXJzSW5uZXJUb0pTT04iLCJuZXh0VG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponseUsersInner.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponseUsersInner.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UsersResponseUsersInnerToJSON = exports.UsersResponseUsersInnerFromJSONTyped = exports.UsersResponseUsersInnerFromJSON = exports.instanceOfUsersResponseUsersInner = void 0;\nvar runtime_js_1 = __webpack_require__(/*! ../runtime.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\");\nvar UserIdentitiesInner_js_1 = __webpack_require__(/*! ./UserIdentitiesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js\");\n/**\n * Check if a given object implements the UsersResponseUsersInner interface.\n */ function instanceOfUsersResponseUsersInner(value) {\n    var isInstance = true;\n    return isInstance;\n}\nexports.instanceOfUsersResponseUsersInner = instanceOfUsersResponseUsersInner;\nfunction UsersResponseUsersInnerFromJSON(json) {\n    return UsersResponseUsersInnerFromJSONTyped(json, false);\n}\nexports.UsersResponseUsersInnerFromJSON = UsersResponseUsersInnerFromJSON;\nfunction UsersResponseUsersInnerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json === undefined || json === null) {\n        return json;\n    }\n    return {\n        \"id\": !(0, runtime_js_1.exists)(json, \"id\") ? undefined : json[\"id\"],\n        \"providedId\": !(0, runtime_js_1.exists)(json, \"provided_id\") ? undefined : json[\"provided_id\"],\n        \"email\": !(0, runtime_js_1.exists)(json, \"email\") ? undefined : json[\"email\"],\n        \"username\": !(0, runtime_js_1.exists)(json, \"username\") ? undefined : json[\"username\"],\n        \"lastName\": !(0, runtime_js_1.exists)(json, \"last_name\") ? undefined : json[\"last_name\"],\n        \"firstName\": !(0, runtime_js_1.exists)(json, \"first_name\") ? undefined : json[\"first_name\"],\n        \"isSuspended\": !(0, runtime_js_1.exists)(json, \"is_suspended\") ? undefined : json[\"is_suspended\"],\n        \"picture\": !(0, runtime_js_1.exists)(json, \"picture\") ? undefined : json[\"picture\"],\n        \"totalSignIns\": !(0, runtime_js_1.exists)(json, \"total_sign_ins\") ? undefined : json[\"total_sign_ins\"],\n        \"failedSignIns\": !(0, runtime_js_1.exists)(json, \"failed_sign_ins\") ? undefined : json[\"failed_sign_ins\"],\n        \"lastSignedIn\": !(0, runtime_js_1.exists)(json, \"last_signed_in\") ? undefined : json[\"last_signed_in\"],\n        \"createdOn\": !(0, runtime_js_1.exists)(json, \"created_on\") ? undefined : json[\"created_on\"],\n        \"organizations\": !(0, runtime_js_1.exists)(json, \"organizations\") ? undefined : json[\"organizations\"],\n        \"identities\": !(0, runtime_js_1.exists)(json, \"identities\") ? undefined : json[\"identities\"].map(UserIdentitiesInner_js_1.UserIdentitiesInnerFromJSON)\n    };\n}\nexports.UsersResponseUsersInnerFromJSONTyped = UsersResponseUsersInnerFromJSONTyped;\nfunction UsersResponseUsersInnerToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \"id\": value.id,\n        \"provided_id\": value.providedId,\n        \"email\": value.email,\n        \"username\": value.username,\n        \"last_name\": value.lastName,\n        \"first_name\": value.firstName,\n        \"is_suspended\": value.isSuspended,\n        \"picture\": value.picture,\n        \"total_sign_ins\": value.totalSignIns,\n        \"failed_sign_ins\": value.failedSignIns,\n        \"last_signed_in\": value.lastSignedIn,\n        \"created_on\": value.createdOn,\n        \"organizations\": value.organizations,\n        \"identities\": value.identities === undefined ? undefined : value.identities.map(UserIdentitiesInner_js_1.UserIdentitiesInnerToJSON)\n    };\n}\nexports.UsersResponseUsersInnerToJSON = UsersResponseUsersInnerToJSON;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponseUsersInner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/* tslint:disable */ /* eslint-disable */ __exportStar(__webpack_require__(/*! ./AddAPIsRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddAPIsRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AddOrganizationUsersRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AddOrganizationUsersRequestUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersRequestUsersInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AddOrganizationUsersResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/AddOrganizationUsersResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Api.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Api.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ApiApplicationsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiApplicationsInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ApiResult.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ApiResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Apis.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Apis.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Applications.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Applications.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Category.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Category.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectedAppsAccessToken.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAccessToken.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ConnectedAppsAuthUrl.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ConnectedAppsAuthUrl.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateApplicationRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateApplicationResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateApplicationResponseApplication.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateApplicationResponseApplication.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateCategoryRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateCategoryResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateCategoryResponseCategory.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateCategoryResponseCategory.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateFeatureFlagRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateFeatureFlagRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateOrganizationRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateOrganizationResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateOrganizationResponseOrganization.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationResponseOrganization.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateOrganizationUserPermissionRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserPermissionRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateOrganizationUserRoleRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateOrganizationUserRoleRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreatePermissionRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePermissionRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreatePropertyRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreatePropertyResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreatePropertyResponseProperty.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreatePropertyResponseProperty.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateRoleRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateRoleRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateSubscriberSuccessResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateSubscriberSuccessResponseSubscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateSubscriberSuccessResponseSubscriber.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateUserRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateUserRequestIdentitiesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateUserRequestIdentitiesInnerDetails.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestIdentitiesInnerDetails.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateUserRequestProfile.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserRequestProfile.js\"), exports);\n__exportStar(__webpack_require__(/*! ./CreateUserResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/CreateUserResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ErrorResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ErrorResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetApplicationResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetApplicationResponseApplication.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationResponseApplication.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetApplicationsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetApplicationsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetCategoriesResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetCategoriesResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetEnvironmentFeatureFlagsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetEnvironmentFeatureFlagsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationFeatureFlagsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationFeatureFlagsResponseFeatureFlagsValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationUsersResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationUsersResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationsUserPermissionsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserPermissionsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetOrganizationsUserRolesResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetOrganizationsUserRolesResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetPermissionsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPermissionsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetPropertiesResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertiesResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetPropertyValuesResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetPropertyValuesResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetRedirectCallbackUrlsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRedirectCallbackUrlsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetRolesResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetRolesResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetSubscriberResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscriberResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./GetSubscribersResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/GetSubscribersResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./LogoutRedirectUrls.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/LogoutRedirectUrls.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ModelError.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ModelError.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Organization.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Organization.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUser.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUser.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUserPermission.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermission.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUserPermissionRolesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserPermissionRolesInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUserRole.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRole.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUserRolePermissions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./OrganizationUserRolePermissionsPermissions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/OrganizationUserRolePermissionsPermissions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Permissions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Permissions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Property.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Property.js\"), exports);\n__exportStar(__webpack_require__(/*! ./PropertyValue.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/PropertyValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RedirectCallbackUrls.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RedirectCallbackUrls.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ReplaceLogoutRedirectURLsRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceLogoutRedirectURLsRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ReplaceRedirectCallbackURLsRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/ReplaceRedirectCallbackURLsRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Role.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Role.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Roles.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Roles.js\"), exports);\n__exportStar(__webpack_require__(/*! ./RolesPermissionResponseInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/RolesPermissionResponseInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SetUserPasswordRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SetUserPasswordRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Subscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/Subscriber.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SubscribersSubscriber.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SubscribersSubscriber.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SuccessResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/SuccessResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TokenErrorResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenErrorResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TokenIntrospect.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/TokenIntrospect.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateAPIApplicationsRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateAPIApplicationsRequestApplicationsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateAPIApplicationsRequestApplicationsInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateApplicationRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateApplicationRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateCategoryRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateCategoryRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateEnvironementFeatureFlagOverrideRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateEnvironementFeatureFlagOverrideRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateOrganizationPropertiesRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationPropertiesRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateOrganizationRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateOrganizationUsersRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateOrganizationUsersRequestUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersRequestUsersInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateOrganizationUsersResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateOrganizationUsersResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdatePropertyRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdatePropertyRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateRolePermissionsRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateRolePermissionsRequestPermissionsInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsRequestPermissionsInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateRolePermissionsResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolePermissionsResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateRolesRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateRolesRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateUserRequest.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserRequest.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UpdateUserResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UpdateUserResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./User.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/User.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UserIdentitiesInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentitiesInner.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UserIdentity.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentity.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UserIdentityResult.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserIdentityResult.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UserProfile.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfile.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UserProfileV2.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UserProfileV2.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UsersResponse.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./UsersResponseUsersInner.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/UsersResponseUsersInner.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */ /* eslint-disable */ /**\n * Kinde Management API\n * Provides endpoints to manage your Kinde Businesses\n *\n * The version of the OpenAPI document: 1\n * Contact: support@kinde.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __values = (void 0) && (void 0).__values || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TextApiResponse = exports.BlobApiResponse = exports.VoidApiResponse = exports.JSONApiResponse = exports.canConsumeForm = exports.mapValues = exports.querystring = exports.exists = exports.COLLECTION_FORMATS = exports.RequiredError = exports.FetchError = exports.ResponseError = exports.BaseAPI = exports.DefaultConfig = exports.Configuration = exports.BASE_PATH = void 0;\nexports.BASE_PATH = \"https://app.kinde.com\".replace(/\\/+$/, \"\");\nvar Configuration = /** @class */ function() {\n    function Configuration(configuration) {\n        if (configuration === void 0) {\n            configuration = {};\n        }\n        this.configuration = configuration;\n    }\n    Object.defineProperty(Configuration.prototype, \"config\", {\n        set: function(configuration) {\n            this.configuration = configuration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"basePath\", {\n        get: function() {\n            return this.configuration.basePath != null ? this.configuration.basePath : exports.BASE_PATH;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"fetchApi\", {\n        get: function() {\n            return this.configuration.fetchApi;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"middleware\", {\n        get: function() {\n            return this.configuration.middleware || [];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"queryParamsStringify\", {\n        get: function() {\n            return this.configuration.queryParamsStringify || querystring;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"username\", {\n        get: function() {\n            return this.configuration.username;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"password\", {\n        get: function() {\n            return this.configuration.password;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"apiKey\", {\n        get: function() {\n            var apiKey = this.configuration.apiKey;\n            if (apiKey) {\n                return typeof apiKey === \"function\" ? apiKey : function() {\n                    return apiKey;\n                };\n            }\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"accessToken\", {\n        get: function() {\n            var _this = this;\n            var accessToken = this.configuration.accessToken;\n            if (accessToken) {\n                return typeof accessToken === \"function\" ? accessToken : function() {\n                    return __awaiter(_this, void 0, void 0, function() {\n                        return __generator(this, function(_a) {\n                            return [\n                                2 /*return*/ ,\n                                accessToken\n                            ];\n                        });\n                    });\n                };\n            }\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"headers\", {\n        get: function() {\n            return this.configuration.headers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"credentials\", {\n        get: function() {\n            return this.configuration.credentials;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Configuration;\n}();\nexports.Configuration = Configuration;\nexports.DefaultConfig = new Configuration();\n/**\n * This is the base class for all generated API classes.\n */ var BaseAPI = exports.BaseAPI = /** @class */ function() {\n    function BaseAPI(configuration) {\n        if (configuration === void 0) {\n            configuration = exports.DefaultConfig;\n        }\n        var _this = this;\n        this.configuration = configuration;\n        this.fetchApi = function(url, init) {\n            return __awaiter(_this, void 0, void 0, function() {\n                var fetchParams, _a, _b, middleware, e_1_1, response, e_2, _c, _d, middleware, e_3_1, _e, _f, middleware, e_4_1;\n                var e_1, _g, e_3, _h, e_4, _j;\n                return __generator(this, function(_k) {\n                    switch(_k.label){\n                        case 0:\n                            fetchParams = {\n                                url: url,\n                                init: init\n                            };\n                            _k.label = 1;\n                        case 1:\n                            _k.trys.push([\n                                1,\n                                6,\n                                7,\n                                8\n                            ]);\n                            _a = __values(this.middleware), _b = _a.next();\n                            _k.label = 2;\n                        case 2:\n                            if (!!_b.done) return [\n                                3 /*break*/ ,\n                                5\n                            ];\n                            middleware = _b.value;\n                            if (!middleware.pre) return [\n                                3 /*break*/ ,\n                                4\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                middleware.pre(__assign({\n                                    fetch: this.fetchApi\n                                }, fetchParams))\n                            ];\n                        case 3:\n                            fetchParams = _k.sent() || fetchParams;\n                            _k.label = 4;\n                        case 4:\n                            _b = _a.next();\n                            return [\n                                3 /*break*/ ,\n                                2\n                            ];\n                        case 5:\n                            return [\n                                3 /*break*/ ,\n                                8\n                            ];\n                        case 6:\n                            e_1_1 = _k.sent();\n                            e_1 = {\n                                error: e_1_1\n                            };\n                            return [\n                                3 /*break*/ ,\n                                8\n                            ];\n                        case 7:\n                            try {\n                                if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n                            } finally{\n                                if (e_1) throw e_1.error;\n                            }\n                            return [\n                                7 /*endfinally*/ \n                            ];\n                        case 8:\n                            response = undefined;\n                            _k.label = 9;\n                        case 9:\n                            _k.trys.push([\n                                9,\n                                11,\n                                ,\n                                20\n                            ]);\n                            return [\n                                4 /*yield*/ ,\n                                (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init)\n                            ];\n                        case 10:\n                            response = _k.sent();\n                            return [\n                                3 /*break*/ ,\n                                20\n                            ];\n                        case 11:\n                            e_2 = _k.sent();\n                            _k.label = 12;\n                        case 12:\n                            _k.trys.push([\n                                12,\n                                17,\n                                18,\n                                19\n                            ]);\n                            _c = __values(this.middleware), _d = _c.next();\n                            _k.label = 13;\n                        case 13:\n                            if (!!_d.done) return [\n                                3 /*break*/ ,\n                                16\n                            ];\n                            middleware = _d.value;\n                            if (!middleware.onError) return [\n                                3 /*break*/ ,\n                                15\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                middleware.onError({\n                                    fetch: this.fetchApi,\n                                    url: fetchParams.url,\n                                    init: fetchParams.init,\n                                    error: e_2,\n                                    response: response ? response.clone() : undefined\n                                })\n                            ];\n                        case 14:\n                            response = _k.sent() || response;\n                            _k.label = 15;\n                        case 15:\n                            _d = _c.next();\n                            return [\n                                3 /*break*/ ,\n                                13\n                            ];\n                        case 16:\n                            return [\n                                3 /*break*/ ,\n                                19\n                            ];\n                        case 17:\n                            e_3_1 = _k.sent();\n                            e_3 = {\n                                error: e_3_1\n                            };\n                            return [\n                                3 /*break*/ ,\n                                19\n                            ];\n                        case 18:\n                            try {\n                                if (_d && !_d.done && (_h = _c.return)) _h.call(_c);\n                            } finally{\n                                if (e_3) throw e_3.error;\n                            }\n                            return [\n                                7 /*endfinally*/ \n                            ];\n                        case 19:\n                            if (response === undefined) {\n                                if (e_2 instanceof Error) {\n                                    throw new FetchError(e_2, \"The request failed and the interceptors did not return an alternative response\");\n                                } else {\n                                    throw e_2;\n                                }\n                            }\n                            return [\n                                3 /*break*/ ,\n                                20\n                            ];\n                        case 20:\n                            _k.trys.push([\n                                20,\n                                25,\n                                26,\n                                27\n                            ]);\n                            _e = __values(this.middleware), _f = _e.next();\n                            _k.label = 21;\n                        case 21:\n                            if (!!_f.done) return [\n                                3 /*break*/ ,\n                                24\n                            ];\n                            middleware = _f.value;\n                            if (!middleware.post) return [\n                                3 /*break*/ ,\n                                23\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                middleware.post({\n                                    fetch: this.fetchApi,\n                                    url: fetchParams.url,\n                                    init: fetchParams.init,\n                                    response: response.clone()\n                                })\n                            ];\n                        case 22:\n                            response = _k.sent() || response;\n                            _k.label = 23;\n                        case 23:\n                            _f = _e.next();\n                            return [\n                                3 /*break*/ ,\n                                21\n                            ];\n                        case 24:\n                            return [\n                                3 /*break*/ ,\n                                27\n                            ];\n                        case 25:\n                            e_4_1 = _k.sent();\n                            e_4 = {\n                                error: e_4_1\n                            };\n                            return [\n                                3 /*break*/ ,\n                                27\n                            ];\n                        case 26:\n                            try {\n                                if (_f && !_f.done && (_j = _e.return)) _j.call(_e);\n                            } finally{\n                                if (e_4) throw e_4.error;\n                            }\n                            return [\n                                7 /*endfinally*/ \n                            ];\n                        case 27:\n                            return [\n                                2 /*return*/ ,\n                                response\n                            ];\n                    }\n                });\n            });\n        };\n        this.middleware = configuration.middleware;\n    }\n    BaseAPI.prototype.withMiddleware = function() {\n        var _a;\n        var middlewares = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            middlewares[_i] = arguments[_i];\n        }\n        var next = this.clone();\n        next.middleware = (_a = next.middleware).concat.apply(_a, __spreadArray([], __read(middlewares), false));\n        return next;\n    };\n    BaseAPI.prototype.withPreMiddleware = function() {\n        var preMiddlewares = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            preMiddlewares[_i] = arguments[_i];\n        }\n        var middlewares = preMiddlewares.map(function(pre) {\n            return {\n                pre: pre\n            };\n        });\n        return this.withMiddleware.apply(this, __spreadArray([], __read(middlewares), false));\n    };\n    BaseAPI.prototype.withPostMiddleware = function() {\n        var postMiddlewares = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            postMiddlewares[_i] = arguments[_i];\n        }\n        var middlewares = postMiddlewares.map(function(post) {\n            return {\n                post: post\n            };\n        });\n        return this.withMiddleware.apply(this, __spreadArray([], __read(middlewares), false));\n    };\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */ BaseAPI.prototype.isJsonMime = function(mime) {\n        if (!mime) {\n            return false;\n        }\n        return BaseAPI.jsonRegex.test(mime);\n    };\n    BaseAPI.prototype.request = function(context, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var url, init, response;\n            var _a;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.createFetchParams(context, initOverrides)\n                        ];\n                    case 1:\n                        url = (_a = _b.sent(), _a.url), init = _a.init;\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchApi(url, init)\n                        ];\n                    case 2:\n                        response = _b.sent();\n                        if (response && response.status >= 200 && response.status < 300) {\n                            return [\n                                2 /*return*/ ,\n                                response\n                            ];\n                        }\n                        throw new ResponseError(response, \"Response returned an error code\");\n                }\n            });\n        });\n    };\n    BaseAPI.prototype.createFetchParams = function(context, initOverrides) {\n        return __awaiter(this, void 0, void 0, function() {\n            var url, headers, initOverrideFn, initParams, overriddenInit, _a, body, init;\n            var _this = this;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        url = this.configuration.basePath + context.path;\n                        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n                            // only add the querystring to the URL if there are query parameters.\n                            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n                            // do not handle correctly sometimes.\n                            url += \"?\" + this.configuration.queryParamsStringify(context.query);\n                        }\n                        headers = Object.assign({}, this.configuration.headers, context.headers);\n                        Object.keys(headers).forEach(function(key) {\n                            return headers[key] === undefined ? delete headers[key] : {};\n                        });\n                        initOverrideFn = typeof initOverrides === \"function\" ? initOverrides : function() {\n                            return __awaiter(_this, void 0, void 0, function() {\n                                return __generator(this, function(_a) {\n                                    return [\n                                        2 /*return*/ ,\n                                        initOverrides\n                                    ];\n                                });\n                            });\n                        };\n                        initParams = {\n                            method: context.method,\n                            headers: headers,\n                            body: context.body,\n                            credentials: this.configuration.credentials\n                        };\n                        _a = [\n                            __assign({}, initParams)\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            initOverrideFn({\n                                init: initParams,\n                                context: context\n                            })\n                        ];\n                    case 1:\n                        overriddenInit = __assign.apply(void 0, _a.concat([\n                            _b.sent()\n                        ]));\n                        if (isFormData(overriddenInit.body) || overriddenInit.body instanceof URLSearchParams || isBlob(overriddenInit.body)) {\n                            body = overriddenInit.body;\n                        } else if (this.isJsonMime(headers[\"Content-Type\"])) {\n                            body = JSON.stringify(overriddenInit.body);\n                        } else {\n                            body = overriddenInit.body;\n                        }\n                        init = __assign(__assign({}, overriddenInit), {\n                            body: body\n                        });\n                        return [\n                            2 /*return*/ ,\n                            {\n                                url: url,\n                                init: init\n                            }\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */ BaseAPI.prototype.clone = function() {\n        var constructor = this.constructor;\n        var next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    };\n    BaseAPI.jsonRegex = new RegExp(\"^(:?application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$\", \"i\");\n    return BaseAPI;\n}();\n;\nfunction isBlob(value) {\n    return typeof Blob !== \"undefined\" && value instanceof Blob;\n}\nfunction isFormData(value) {\n    return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\nvar ResponseError = /** @class */ function(_super) {\n    __extends(ResponseError, _super);\n    function ResponseError(response, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.response = response;\n        _this.name = \"ResponseError\";\n        return _this;\n    }\n    return ResponseError;\n}(Error);\nexports.ResponseError = ResponseError;\nvar FetchError = /** @class */ function(_super) {\n    __extends(FetchError, _super);\n    function FetchError(cause, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.cause = cause;\n        _this.name = \"FetchError\";\n        return _this;\n    }\n    return FetchError;\n}(Error);\nexports.FetchError = FetchError;\nvar RequiredError = /** @class */ function(_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error);\nexports.RequiredError = RequiredError;\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\t\",\n    pipes: \"|\"\n};\nfunction exists(json, key) {\n    var value = json[key];\n    return value !== null && value !== undefined;\n}\nexports.exists = exists;\nfunction querystring(params, prefix) {\n    if (prefix === void 0) {\n        prefix = \"\";\n    }\n    return Object.keys(params).map(function(key) {\n        return querystringSingleKey(key, params[key], prefix);\n    }).filter(function(part) {\n        return part.length > 0;\n    }).join(\"&\");\n}\nexports.querystring = querystring;\nfunction querystringSingleKey(key, value, keyPrefix) {\n    if (keyPrefix === void 0) {\n        keyPrefix = \"\";\n    }\n    var fullKey = keyPrefix + (keyPrefix.length ? \"[\".concat(key, \"]\") : key);\n    if (value instanceof Array) {\n        var multiValue = value.map(function(singleValue) {\n            return encodeURIComponent(String(singleValue));\n        }).join(\"&\".concat(encodeURIComponent(fullKey), \"=\"));\n        return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(multiValue);\n    }\n    if (value instanceof Set) {\n        var valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(encodeURIComponent(value.toISOString()));\n    }\n    if (value instanceof Object) {\n        return querystring(value, fullKey);\n    }\n    return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(encodeURIComponent(String(value)));\n}\nfunction mapValues(data, fn) {\n    return Object.keys(data).reduce(function(acc, key) {\n        var _a;\n        return __assign(__assign({}, acc), (_a = {}, _a[key] = fn(data[key]), _a));\n    }, {});\n}\nexports.mapValues = mapValues;\nfunction canConsumeForm(consumes) {\n    var e_5, _a;\n    try {\n        for(var consumes_1 = __values(consumes), consumes_1_1 = consumes_1.next(); !consumes_1_1.done; consumes_1_1 = consumes_1.next()){\n            var consume = consumes_1_1.value;\n            if (\"multipart/form-data\" === consume.contentType) {\n                return true;\n            }\n        }\n    } catch (e_5_1) {\n        e_5 = {\n            error: e_5_1\n        };\n    } finally{\n        try {\n            if (consumes_1_1 && !consumes_1_1.done && (_a = consumes_1.return)) _a.call(consumes_1);\n        } finally{\n            if (e_5) throw e_5.error;\n        }\n    }\n    return false;\n}\nexports.canConsumeForm = canConsumeForm;\nvar JSONApiResponse = /** @class */ function() {\n    function JSONApiResponse(raw, transformer) {\n        if (transformer === void 0) {\n            transformer = function(jsonValue) {\n                return jsonValue;\n            };\n        }\n        this.raw = raw;\n        this.transformer = transformer;\n    }\n    JSONApiResponse.prototype.value = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            var _a;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        _a = this.transformer;\n                        return [\n                            4 /*yield*/ ,\n                            this.raw.json()\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.apply(this, [\n                                _b.sent()\n                            ])\n                        ];\n                }\n            });\n        });\n    };\n    return JSONApiResponse;\n}();\nexports.JSONApiResponse = JSONApiResponse;\nvar VoidApiResponse = /** @class */ function() {\n    function VoidApiResponse(raw) {\n        this.raw = raw;\n    }\n    VoidApiResponse.prototype.value = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                return [\n                    2 /*return*/ ,\n                    undefined\n                ];\n            });\n        });\n    };\n    return VoidApiResponse;\n}();\nexports.VoidApiResponse = VoidApiResponse;\nvar BlobApiResponse = /** @class */ function() {\n    function BlobApiResponse(raw) {\n        this.raw = raw;\n    }\n    BlobApiResponse.prototype.value = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.raw.blob()\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    ;\n    return BlobApiResponse;\n}();\nexports.BlobApiResponse = BlobApiResponse;\nvar TextApiResponse = /** @class */ function() {\n    function TextApiResponse(raw) {\n        this.raw = raw;\n    }\n    TextApiResponse.prototype.value = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.raw.text()\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    ;\n    return TextApiResponse;\n}();\nexports.TextApiResponse = TextApiResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/runtime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/authcode-with-pkce.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/authcode-with-pkce.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar index_js_1 = __webpack_require__(/*! ../../session-managers/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/index.js\");\nvar index_js_2 = __webpack_require__(/*! ../../oauth2-flows/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js\");\nvar utilities = __importStar(__webpack_require__(/*! ../../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\nvar createAuthCodeWithPKCEClient = function(options) {\n    var _a;\n    var featureFlags = utilities.featureFlags, tokenClaims = utilities.tokenClaims;\n    var sessionManager = (_a = options.sessionManager) !== null && _a !== void 0 ? _a : new index_js_1.BrowserSessionManager();\n    var client = new index_js_2.AuthCodeWithPKCE(options);\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeWithPKCE\n     * client above to return login url.\n     * @param {LoginURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var login = function(options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign({}, options))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeWithPKCE\n     * client above to return registration url.\n     * @param {RegisterURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var register = function(options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign(__assign({}, options), {\n                                start_page: \"registration\"\n                            }))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeWithPKCE\n     * client above to return registration url with the `is_create_org` query param\n     * set to true.\n     * @param {CreateOrgURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var createOrg = function(options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign(__assign({}, options), {\n                                start_page: \"registration\",\n                                is_create_org: true\n                            }))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `handleRedirectFromAuthDomain` method of the\n     * `AuthCodeWithPKCE` client above to handle the redirection back to the app.\n     * @param {URL} callbackURL\n     * @returns {Promise<void>}\n     */ var handleRedirectToApp = function(callbackURL) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.handleRedirectFromAuthDomain(sessionManager, callbackURL)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method acts as a wrapper around the `isAuthenticated` method provided by the\n     * `AuthCodeWithPKCE` client created above.\n     * @returns {Promise<boolean>}\n     */ var isAuthenticated = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `getUserProfile` method of the `AuthCodeWithPKCE` client\n     * above to fetch the current user's information, raises exception if current user\n     * is not authenticated.\n     * @returns {Promise<UserType>}\n     */ var getUserProfile = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.getUserProfile(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the current user's details from the current session, raises\n     * exception if current user is not authenticated.\n     * @returns {Promise<UserType>}\n     */ var getUser = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot get user details, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getUserFromSession(sessionManager, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided number feature flag from the access token in\n     * the current session.\n     * @param {string} code\n     * @param {number} defaultValue\n     * @returns {number} integer flag value\n     */ var getIntegerFlag = function(code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return integer flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getIntegerFlag(sessionManager, code, client.tokenValidationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided string feature flag from the access token in\n     * the current session.\n     * @param {string} code\n     * @param {string} defaultValue\n     * @returns {string} string flag value\n     */ var getStringFlag = function(code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return string flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getStringFlag(sessionManager, code, client.tokenValidationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided boolean feature flag from the access token in\n     * the current session.\n     * @param {string} code\n     * @param {boolean} defaultValue\n     * @returns {boolean} boolean flag value\n     */ var getBooleanFlag = function(code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return boolean flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getBooleanFlag(sessionManager, code, client.tokenValidationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided claim from the provided token type in the\n     * current session.\n     * @param {string} claim\n     * @param {ClaimTokenType} type\n     * @returns {unknown | null}\n     */ var getClaimValue = function(claim, type) {\n        if (type === void 0) {\n            type = \"access_token\";\n        }\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return claim \"'.concat(claim, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getClaimValue(sessionManager, claim, type, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided claim from the provided token type in the\n     * current session, the returned object includes the provided claim.\n     * @param {string} claim\n     * @param {ClaimTokenType} type\n     * @returns {{ name: string, value: unknown | null }}\n     */ var getClaim = function(claim, type) {\n        if (type === void 0) {\n            type = \"access_token\";\n        }\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return claim \"'.concat(claim, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getClaim(sessionManager, claim, type, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method returns the organization code from the current session and returns\n     * a boolean in the returned object indicating if the provided permission is\n     * present in the session.\n     * @param {string} name\n     * @returns {{ orgCode: string | null, isGranted: boolean }}\n     */ var getPermission = function(name) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return permission \"'.concat(name, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getPermission(sessionManager, name, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the organization code from the current session.\n     * @returns {{ orgCode: string | null }}\n     */ var getOrganization = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user organization, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getOrganization(sessionManager, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts all organization codes from the id token in the current\n     * session.\n     * @returns {{ orgCodes: string[] }}\n     */ var getUserOrganizations = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user organizations, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getUserOrganizations(sessionManager, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts all the permission and the organization code in the access\n     * token in the current session.\n     * @returns {{ permissions: string[], orgCode: string | null }}\n     */ var getPermissions = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user permissions, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getPermissions(sessionManager, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `getToken` of the `AuthCodeWithPKCE` client above\n     * to return the access token from the current session.\n     * @returns {Promise<string>}\n     */ var getToken = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.getToken(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes user of the `refreshTokens` method of the `AuthCodeWithPKCE` client\n     * to use the refresh token to get new tokens\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ var refreshTokens = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.refreshTokens(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided feature flag from the access token in the\n     * current session.\n     * @param {string} code\n     * @param {FlagType[keyof FlagType]} defaultValue\n     * @param {keyof FlagType} type\n     * @returns {GetFlagType}\n     */ var getFlag = function(code, defaultValue, type) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated()\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getFlag(sessionManager, code, client.tokenValidationDetails, defaultValue, type)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method clears the current session and returns the logout URL, redirecting\n     * to which will clear the user's session on the authorization server.\n     * @returns {URL}\n     */ var logout = function() {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.destroySession()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new URL(client.logoutEndpoint)\n                        ];\n                }\n            });\n        });\n    };\n    return {\n        getUserOrganizations: getUserOrganizations,\n        handleRedirectToApp: handleRedirectToApp,\n        isAuthenticated: isAuthenticated,\n        getOrganization: getOrganization,\n        getBooleanFlag: getBooleanFlag,\n        getIntegerFlag: getIntegerFlag,\n        getUserProfile: getUserProfile,\n        getPermissions: getPermissions,\n        getPermission: getPermission,\n        getClaimValue: getClaimValue,\n        getStringFlag: getStringFlag,\n        createOrg: createOrg,\n        getClaim: getClaim,\n        getToken: getToken,\n        refreshTokens: refreshTokens,\n        register: register,\n        getUser: getUser,\n        getFlag: getFlag,\n        logout: logout,\n        login: login\n    };\n};\nexports[\"default\"] = createAuthCodeWithPKCEClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/authcode-with-pkce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createKindeBrowserClient = void 0;\nvar authcode_with_pkce_js_1 = __importDefault(__webpack_require__(/*! ./authcode-with-pkce.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/authcode-with-pkce.js\"));\nvar environment_js_1 = __webpack_require__(/*! ../../environment.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\");\nvar createKindeBrowserClient = function(options) {\n    if (!(0, environment_js_1.isBrowserEnvironment)()) {\n        throw new Error(\"this method must be invoked in a browser environment\");\n    }\n    return (0, authcode_with_pkce_js_1.default)(options);\n};\nexports.createKindeBrowserClient = createKindeBrowserClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvY2xpZW50cy9icm93c2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBRyxLQUFLO0FBQ3hDLElBQUlHLDBCQUEwQlIsZ0JBQWdCUyxtQkFBT0EsQ0FBQyx3SUFBeUI7QUFDL0UsSUFBSUMsbUJBQW1CRCxtQkFBT0EsQ0FBQyw4R0FBc0I7QUFDckQsSUFBSUYsMkJBQTJCLFNBQVVJLE9BQU87SUFDNUMsSUFBSSxDQUFDLENBQUMsR0FBR0QsaUJBQWlCRSxvQkFBb0IsS0FBSztRQUMvQyxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxPQUFPLENBQUMsR0FBR0wsd0JBQXdCTSxPQUFPLEVBQUVIO0FBQ2hEO0FBQ0FOLGdDQUFnQyxHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL2NsaWVudHMvYnJvd3Nlci9pbmRleC5qcz9mNzkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVLaW5kZUJyb3dzZXJDbGllbnQgPSB2b2lkIDA7XG52YXIgYXV0aGNvZGVfd2l0aF9wa2NlX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYXV0aGNvZGUtd2l0aC1wa2NlLmpzXCIpKTtcbnZhciBlbnZpcm9ubWVudF9qc18xID0gcmVxdWlyZShcIi4uLy4uL2Vudmlyb25tZW50LmpzXCIpO1xudmFyIGNyZWF0ZUtpbmRlQnJvd3NlckNsaWVudCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgaWYgKCEoMCwgZW52aXJvbm1lbnRfanNfMS5pc0Jyb3dzZXJFbnZpcm9ubWVudCkoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3RoaXMgbWV0aG9kIG11c3QgYmUgaW52b2tlZCBpbiBhIGJyb3dzZXIgZW52aXJvbm1lbnQnKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBhdXRoY29kZV93aXRoX3BrY2VfanNfMS5kZWZhdWx0KShvcHRpb25zKTtcbn07XG5leHBvcnRzLmNyZWF0ZUtpbmRlQnJvd3NlckNsaWVudCA9IGNyZWF0ZUtpbmRlQnJvd3NlckNsaWVudDtcbiJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcmVhdGVLaW5kZUJyb3dzZXJDbGllbnQiLCJhdXRoY29kZV93aXRoX3BrY2VfanNfMSIsInJlcXVpcmUiLCJlbnZpcm9ubWVudF9qc18xIiwib3B0aW9ucyIsImlzQnJvd3NlckVudmlyb25tZW50IiwiRXJyb3IiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./browser/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/browser/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/types.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvY2xpZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsc0hBQW9CLEdBQUdOO0FBQzVDRCxhQUFhTyxtQkFBT0EsQ0FBQyxvSEFBbUIsR0FBR047QUFDM0NELGFBQWFPLG1CQUFPQSxDQUFDLHNHQUFZLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvY2xpZW50cy9pbmRleC5qcz8yODE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYnJvd3Nlci9pbmRleC5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2VydmVyL2luZGV4LmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/authorization-code.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/authorization-code.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar index_js_1 = __webpack_require__(/*! ../../oauth2-flows/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js\");\nvar with_auth_utilities_js_1 = __importDefault(__webpack_require__(/*! ./with-auth-utilities.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/with-auth-utilities.js\"));\nvar utilities = __importStar(__webpack_require__(/*! ../../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\nvar createAuthorizationCodeClient = function(options, isPKCE) {\n    var client = !isPKCE ? new index_js_1.AuthorizationCode(options, options.clientSecret) : new index_js_1.AuthCodeWithPKCE(options);\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeAbstract\n     * client above to return login url.\n     * @param {SessionManager} sessionManager\n     * @param {LoginURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var login = function(sessionManager, options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign({}, options))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeAbstract\n     * client above to return registration url.\n     * @param {SessionManager} sessionManager\n     * @param {RegisterURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var register = function(sessionManager, options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign(__assign({}, options), {\n                                start_page: \"registration\"\n                            }))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `createAuthorizationURL` method of the AuthCodeAbstract\n     * client above to return registration url with the `is_create_org` query param\n     * set to true.\n     * @param {SessionManager} sessionManager\n     * @param {CreateOrgURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ var createOrg = function(sessionManager, options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.createAuthorizationURL(sessionManager, __assign(__assign({}, options), {\n                                start_page: \"registration\",\n                                is_create_org: true\n                            }))\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `handleRedirectFromAuthDomain` method of the\n     * `AuthCodeAbstract` client above to handle the redirection back to the app.\n     * @param {SessionManager} sessionManager\n     * @param {URL} callbackURL\n     * @returns {Promise<void>}\n     */ var handleRedirectToApp = function(sessionManager, callbackURL) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.handleRedirectFromAuthDomain(sessionManager, callbackURL)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method acts as a wrapper around the `isAuthenticated` method provided by the\n     * `AuthCodeAbstract` client created above.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<Boolean>}\n     */ var isAuthenticated = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `getUserProfile` method of the `AuthCodeAbstract` client\n     * above to fetch the current user's information, raises exception if current user\n     * is not authenticated.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<UserType>}\n     */ var getUserProfile = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.getUserProfile(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the current user's details from the current session, raises\n     * exception if current user is not authenticated.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<UserType>}\n     */ var getUser = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot get user details, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getUserFromSession(sessionManager, client.tokenValidationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `getToken` method of the `AuthCodeAbstract` client\n     * to retrieve an access token.\n     * @param sessionManager\n     * @returns {Promise<string>}\n     */ var getToken = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.getToken(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes user of the `refreshTokens` method of the `AuthCodeAbstract` client\n     * to use the refresh token to get new tokens\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ var refreshTokens = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.refreshTokens(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method clears the current session and returns the logout URL, redirecting\n     * to which will clear the user's session on the authorization server.\n     * @param {SessionManager} sessionManager\n     * @returns {URL}\n     */ var logout = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.destroySession()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new URL(client.logoutEndpoint)\n                        ];\n                }\n            });\n        });\n    };\n    return __assign(__assign({}, (0, with_auth_utilities_js_1.default)(isAuthenticated, client.tokenValidationDetails)), {\n        handleRedirectToApp: handleRedirectToApp,\n        isAuthenticated: isAuthenticated,\n        getUserProfile: getUserProfile,\n        createOrg: createOrg,\n        getToken: getToken,\n        refreshTokens: refreshTokens,\n        register: register,\n        getUser: getUser,\n        logout: logout,\n        login: login\n    });\n};\nexports[\"default\"] = createAuthorizationCodeClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/authorization-code.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/client-credentials.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/client-credentials.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar with_auth_utilities_js_1 = __importDefault(__webpack_require__(/*! ./with-auth-utilities.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/with-auth-utilities.js\"));\nvar index_js_1 = __webpack_require__(/*! ../../oauth2-flows/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js\");\nvar createCCClient = function(options) {\n    var client = new index_js_1.ClientCredentials(options);\n    /**\n     * Method clears the current session and returns the logout URL, redirecting\n     * to which will clear the user's session on the authorization server.\n     * @param {SessionManager} sessionManager\n     * @returns {URL}\n     */ var logout = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.destroySession()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            new URL(client.logoutEndpoint)\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the `getToken` method of the `ClientCredentials` client\n     * to retrieve an access token.\n     * @param sessionManager\n     * @returns {Promise<string>}\n     */ var getToken = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.getToken(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method acts as a wrapper around the `isAuthenticated` method provided by the\n     * `ClientCredentials` client created above.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<Boolean>}\n     */ var isAuthenticated = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            client.isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return __assign(__assign({}, (0, with_auth_utilities_js_1.default)(isAuthenticated, client.tokenValidationDetails)), {\n        isAuthenticated: isAuthenticated,\n        getToken: getToken,\n        logout: logout\n    });\n};\nexports[\"default\"] = createCCClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/client-credentials.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createKindeServerClient = void 0;\nvar authorization_code_js_1 = __importDefault(__webpack_require__(/*! ./authorization-code.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/authorization-code.js\"));\nvar environment_js_1 = __webpack_require__(/*! ../../environment.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\");\nvar client_credentials_js_1 = __importDefault(__webpack_require__(/*! ./client-credentials.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/client-credentials.js\"));\nvar index_js_1 = __webpack_require__(/*! ../../oauth2-flows/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js\");\nvar createKindeServerClient = function(grantType, options) {\n    if (!(0, environment_js_1.isNodeEnvironment)()) {\n        throw new Error(\"this method must be invoked in a node.js environment\");\n    }\n    switch(grantType){\n        case index_js_1.GrantType.AUTHORIZATION_CODE:\n            {\n                var clientOptions = options;\n                return (0, authorization_code_js_1.default)(clientOptions, false);\n            }\n        case index_js_1.GrantType.PKCE:\n            {\n                var clientOptions = options;\n                return (0, authorization_code_js_1.default)(clientOptions, true);\n            }\n        case index_js_1.GrantType.CLIENT_CREDENTIALS:\n            {\n                var clientOptions = options;\n                return (0, client_credentials_js_1.default)(clientOptions);\n            }\n        default:\n            {\n                throw new Error(\"Unrecognized grant type provided\");\n            }\n    }\n};\nexports.createKindeServerClient = createKindeServerClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvY2xpZW50cy9zZXJ2ZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQUUsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHLEtBQUs7QUFDdkMsSUFBSUcsMEJBQTBCUixnQkFBZ0JTLG1CQUFPQSxDQUFDLHVJQUF5QjtBQUMvRSxJQUFJQyxtQkFBbUJELG1CQUFPQSxDQUFDLDhHQUFzQjtBQUNyRCxJQUFJRSwwQkFBMEJYLGdCQUFnQlMsbUJBQU9BLENBQUMsdUlBQXlCO0FBQy9FLElBQUlHLGFBQWFILG1CQUFPQSxDQUFDLDRIQUE2QjtBQUN0RCxJQUFJRiwwQkFBMEIsU0FBVU0sU0FBUyxFQUFFQyxPQUFPO0lBQ3RELElBQUksQ0FBQyxDQUFDLEdBQUdKLGlCQUFpQkssaUJBQWlCLEtBQUs7UUFDNUMsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBUUg7UUFDSixLQUFLRCxXQUFXSyxTQUFTLENBQUNDLGtCQUFrQjtZQUFFO2dCQUMxQyxJQUFJQyxnQkFBZ0JMO2dCQUNwQixPQUFPLENBQUMsR0FBR04sd0JBQXdCWSxPQUFPLEVBQUVELGVBQWU7WUFDL0Q7UUFDQSxLQUFLUCxXQUFXSyxTQUFTLENBQUNJLElBQUk7WUFBRTtnQkFDNUIsSUFBSUYsZ0JBQWdCTDtnQkFDcEIsT0FBTyxDQUFDLEdBQUdOLHdCQUF3QlksT0FBTyxFQUFFRCxlQUFlO1lBQy9EO1FBQ0EsS0FBS1AsV0FBV0ssU0FBUyxDQUFDSyxrQkFBa0I7WUFBRTtnQkFDMUMsSUFBSUgsZ0JBQWdCTDtnQkFDcEIsT0FBTyxDQUFDLEdBQUdILHdCQUF3QlMsT0FBTyxFQUFFRDtZQUNoRDtRQUNBO1lBQVM7Z0JBQ0wsTUFBTSxJQUFJSCxNQUFNO1lBQ3BCO0lBQ0o7QUFDSjtBQUNBWCwrQkFBK0IsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL3Nkay9jbGllbnRzL3NlcnZlci9pbmRleC5qcz8wZmJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVLaW5kZVNlcnZlckNsaWVudCA9IHZvaWQgMDtcbnZhciBhdXRob3JpemF0aW9uX2NvZGVfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9hdXRob3JpemF0aW9uLWNvZGUuanNcIikpO1xudmFyIGVudmlyb25tZW50X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vZW52aXJvbm1lbnQuanNcIik7XG52YXIgY2xpZW50X2NyZWRlbnRpYWxzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY2xpZW50LWNyZWRlbnRpYWxzLmpzXCIpKTtcbnZhciBpbmRleF9qc18xID0gcmVxdWlyZShcIi4uLy4uL29hdXRoMi1mbG93cy9pbmRleC5qc1wiKTtcbnZhciBjcmVhdGVLaW5kZVNlcnZlckNsaWVudCA9IGZ1bmN0aW9uIChncmFudFR5cGUsIG9wdGlvbnMpIHtcbiAgICBpZiAoISgwLCBlbnZpcm9ubWVudF9qc18xLmlzTm9kZUVudmlyb25tZW50KSgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndGhpcyBtZXRob2QgbXVzdCBiZSBpbnZva2VkIGluIGEgbm9kZS5qcyBlbnZpcm9ubWVudCcpO1xuICAgIH1cbiAgICBzd2l0Y2ggKGdyYW50VHlwZSkge1xuICAgICAgICBjYXNlIGluZGV4X2pzXzEuR3JhbnRUeXBlLkFVVEhPUklaQVRJT05fQ09ERToge1xuICAgICAgICAgICAgdmFyIGNsaWVudE9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICAgICAgcmV0dXJuICgwLCBhdXRob3JpemF0aW9uX2NvZGVfanNfMS5kZWZhdWx0KShjbGllbnRPcHRpb25zLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBpbmRleF9qc18xLkdyYW50VHlwZS5QS0NFOiB7XG4gICAgICAgICAgICB2YXIgY2xpZW50T3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgICAgICByZXR1cm4gKDAsIGF1dGhvcml6YXRpb25fY29kZV9qc18xLmRlZmF1bHQpKGNsaWVudE9wdGlvbnMsIHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgaW5kZXhfanNfMS5HcmFudFR5cGUuQ0xJRU5UX0NSRURFTlRJQUxTOiB7XG4gICAgICAgICAgICB2YXIgY2xpZW50T3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgICAgICByZXR1cm4gKDAsIGNsaWVudF9jcmVkZW50aWFsc19qc18xLmRlZmF1bHQpKGNsaWVudE9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGdyYW50IHR5cGUgcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnRzLmNyZWF0ZUtpbmRlU2VydmVyQ2xpZW50ID0gY3JlYXRlS2luZGVTZXJ2ZXJDbGllbnQ7XG4iXSwibmFtZXMiOlsiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlS2luZGVTZXJ2ZXJDbGllbnQiLCJhdXRob3JpemF0aW9uX2NvZGVfanNfMSIsInJlcXVpcmUiLCJlbnZpcm9ubWVudF9qc18xIiwiY2xpZW50X2NyZWRlbnRpYWxzX2pzXzEiLCJpbmRleF9qc18xIiwiZ3JhbnRUeXBlIiwib3B0aW9ucyIsImlzTm9kZUVudmlyb25tZW50IiwiRXJyb3IiLCJHcmFudFR5cGUiLCJBVVRIT1JJWkFUSU9OX0NPREUiLCJjbGllbnRPcHRpb25zIiwiZGVmYXVsdCIsIlBLQ0UiLCJDTElFTlRfQ1JFREVOVElBTFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/with-auth-utilities.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/with-auth-utilities.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar utilities = __importStar(__webpack_require__(/*! ../../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\nvar withAuthUtilities = function(isAuthenticated, validationDetails) {\n    var featureFlags = utilities.featureFlags, tokenClaims = utilities.tokenClaims;\n    /**\n     * Method extracts the provided number feature flag from the access token in\n     * the current session.\n     * @param {SessionManager} sessionManager\n     * @param {string} code\n     * @param {number} defaultValue\n     * @returns {number} integer flag value\n     */ var getIntegerFlag = function(sessionManager, code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return integer flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getIntegerFlag(sessionManager, code, validationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided string feature flag from the access token in\n     * the current session.\n     * @param {SessionManager} sessionManager\n     * @param {string} code\n     * @param {string} defaultValue\n     * @returns {string} string flag value\n     */ var getStringFlag = function(sessionManager, code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return string flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getStringFlag(sessionManager, code, validationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided boolean feature flag from the access token in\n     * the current session.\n     * @param {SessionManager} sessionManager\n     * @param {string} code\n     * @param {boolean} defaultValue\n     * @returns {boolean} boolean flag value\n     */ var getBooleanFlag = function(sessionManager, code, defaultValue) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return boolean flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getBooleanFlag(sessionManager, code, validationDetails, defaultValue)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided claim from the provided token type in the\n     * current session.\n     * @param {SessionManager} sessionManager\n     * @param {string} claim\n     * @param {ClaimTokenType} type\n     * @returns {unknown | null}\n     */ var getClaimValue = function(sessionManager, claim, type) {\n        if (type === void 0) {\n            type = \"access_token\";\n        }\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return claim \"'.concat(claim, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getClaimValue(sessionManager, claim, type, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided claim from the provided token type in the\n     * current session, the returned object includes the provided claim.\n     * @param {SessionManager} sessionManager\n     * @param {string} claim\n     * @param {ClaimTokenType} type\n     * @returns {{ name: string, value: unknown | null }}\n     */ var getClaim = function(sessionManager, claim, type) {\n        if (type === void 0) {\n            type = \"access_token\";\n        }\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return claim \"'.concat(claim, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getClaim(sessionManager, claim, type, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method returns the organization code from the current session and returns\n     * a boolean in the returned object indicating if the provided permission is\n     * present in the session.\n     * @param {SessionManager} sessionManager\n     * @param {string} name\n     * @returns {{ orgCode: string | null, isGranted: boolean }}\n     */ var getPermission = function(sessionManager, name) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return permission \"'.concat(name, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getPermission(sessionManager, name, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the organization code from the current session.\n     * @param {SessionManager} sessionManager\n     * @returns {{ orgCode: string | null }}\n     */ var getOrganization = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user organization, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getOrganization(sessionManager, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts all organization codes from the id token in the current\n     * session.\n     * @param {SessionManager} sessionManager\n     * @returns {{ orgCodes: string[] }}\n     */ var getUserOrganizations = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user organizations, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getUserOrganizations(sessionManager, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts all the permission and the organization code in the access\n     * token in the current session.\n     * @param {SessionManager} sessionManager\n     * @returns {{ permissions: string[], orgCode: string | null }}\n     */ var getPermissions = function(sessionManager) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error(\"Cannot return user permissions, no authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            tokenClaims.getPermissions(sessionManager, validationDetails)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method extracts the provided feature flag from the access token in the\n     * current session.\n     * @param {SessionManager} sessionManager\n     * @param {string} code\n     * @param {FlagType[keyof FlagType]} defaultValue\n     * @param {keyof FlagType} type\n     * @returns {GetFlagType}\n     */ var getFlag = function(sessionManager, code, defaultValue, type) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            isAuthenticated(sessionManager)\n                        ];\n                    case 1:\n                        if (!_a.sent()) {\n                            throw new Error('Cannot return flag \"'.concat(code, '\", no authentication credential found'));\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            featureFlags.getFlag(sessionManager, code, validationDetails, defaultValue, type)\n                        ];\n                    case 2:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    return {\n        getUserOrganizations: getUserOrganizations,\n        getOrganization: getOrganization,\n        getBooleanFlag: getBooleanFlag,\n        getIntegerFlag: getIntegerFlag,\n        getPermissions: getPermissions,\n        getPermission: getPermission,\n        getClaimValue: getClaimValue,\n        getStringFlag: getStringFlag,\n        getClaim: getClaim,\n        getFlag: getFlag\n    };\n};\nexports[\"default\"] = withAuthUtilities;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/server/with-auth-utilities.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/types.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/types.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvY2xpZW50cy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL2NsaWVudHMvdHlwZXMuanM/ZWJkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserEnvironment = exports.isNodeEnvironment = void 0;\nvar JSEnvironment;\n(function(JSEnvironment) {\n    JSEnvironment[\"BROWSER\"] = \"BROWSER\";\n    JSEnvironment[\"NODEJS\"] = \"NODEJS\";\n})(JSEnvironment || (JSEnvironment = {}));\nvar currentEnvironment =  true ? JSEnvironment.NODEJS : 0;\n/**\n * Method returns if current environment is node.js\n * @returns {boolean}\n */ var isNodeEnvironment = function() {\n    return currentEnvironment === JSEnvironment.NODEJS;\n};\nexports.isNodeEnvironment = isNodeEnvironment;\n/**\n * Method returns if current environment is browser.\n * @returns {boolean}\n */ var isBrowserEnvironment = function() {\n    return currentEnvironment === JSEnvironment.BROWSER;\n};\nexports.isBrowserEnvironment = isBrowserEnvironment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvZW52aXJvbm1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHQSx5QkFBeUIsR0FBRyxLQUFLO0FBQ2hFLElBQUlJO0FBQ0gsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDLFVBQVUsR0FBRztJQUMzQkEsYUFBYSxDQUFDLFNBQVMsR0FBRztBQUM5QixHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDO0FBQ3RDLElBQUlDLHFCQUFxQixLQUFrQixHQUFjRCxjQUFjRSxNQUFNLEdBQUdGLENBQXFCO0FBQ3JHOzs7Q0FHQyxHQUNELElBQUlELG9CQUFvQjtJQUNwQixPQUFPRSx1QkFBdUJELGNBQWNFLE1BQU07QUFDdEQ7QUFDQU4seUJBQXlCLEdBQUdHO0FBQzVCOzs7Q0FHQyxHQUNELElBQUlELHVCQUF1QjtJQUN2QixPQUFPRyx1QkFBdUJELGNBQWNHLE9BQU87QUFDdkQ7QUFDQVAsNEJBQTRCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvZW52aXJvbm1lbnQuanM/NTg1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNCcm93c2VyRW52aXJvbm1lbnQgPSBleHBvcnRzLmlzTm9kZUVudmlyb25tZW50ID0gdm9pZCAwO1xudmFyIEpTRW52aXJvbm1lbnQ7XG4oZnVuY3Rpb24gKEpTRW52aXJvbm1lbnQpIHtcbiAgICBKU0Vudmlyb25tZW50W1wiQlJPV1NFUlwiXSA9IFwiQlJPV1NFUlwiO1xuICAgIEpTRW52aXJvbm1lbnRbXCJOT0RFSlNcIl0gPSBcIk5PREVKU1wiO1xufSkoSlNFbnZpcm9ubWVudCB8fCAoSlNFbnZpcm9ubWVudCA9IHt9KSk7XG52YXIgY3VycmVudEVudmlyb25tZW50ID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyBKU0Vudmlyb25tZW50Lk5PREVKUyA6IEpTRW52aXJvbm1lbnQuQlJPV1NFUjtcbi8qKlxuICogTWV0aG9kIHJldHVybnMgaWYgY3VycmVudCBlbnZpcm9ubWVudCBpcyBub2RlLmpzXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xudmFyIGlzTm9kZUVudmlyb25tZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjdXJyZW50RW52aXJvbm1lbnQgPT09IEpTRW52aXJvbm1lbnQuTk9ERUpTO1xufTtcbmV4cG9ydHMuaXNOb2RlRW52aXJvbm1lbnQgPSBpc05vZGVFbnZpcm9ubWVudDtcbi8qKlxuICogTWV0aG9kIHJldHVybnMgaWYgY3VycmVudCBlbnZpcm9ubWVudCBpcyBicm93c2VyLlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbnZhciBpc0Jyb3dzZXJFbnZpcm9ubWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3VycmVudEVudmlyb25tZW50ID09PSBKU0Vudmlyb25tZW50LkJST1dTRVI7XG59O1xuZXhwb3J0cy5pc0Jyb3dzZXJFbnZpcm9ubWVudCA9IGlzQnJvd3NlckVudmlyb25tZW50O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyRW52aXJvbm1lbnQiLCJpc05vZGVFbnZpcm9ubWVudCIsIkpTRW52aXJvbm1lbnQiLCJjdXJyZW50RW52aXJvbm1lbnQiLCJOT0RFSlMiLCJCUk9XU0VSIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.KindeSDKError = exports.KindeSDKErrorCode = void 0;\nvar KindeSDKErrorCode;\n(function(KindeSDKErrorCode) {\n    KindeSDKErrorCode[\"INVALID_TOKEN_MEMORY_COMMIT\"] = \"INVALID_TOKEN_MEMORY_COMMIT\";\n    KindeSDKErrorCode[\"FAILED_TOKENS_REFRESH_ATTEMPT\"] = \"FAILED_TOKENS_REFRESH_ATTEMPT\";\n})(KindeSDKErrorCode = exports.KindeSDKErrorCode || (exports.KindeSDKErrorCode = {}));\nvar KindeSDKError = /** @class */ function(_super) {\n    __extends(KindeSDKError, _super);\n    function KindeSDKError(errorCode, message) {\n        var _this = _super.call(this, message) || this;\n        _this.errorCode = errorCode;\n        _this.name = \"KindeSDKError\";\n        Object.setPrototypeOf(_this, KindeSDKError.prototype);\n        return _this;\n    }\n    return KindeSDKError;\n}(Error);\nexports.KindeSDKError = KindeSDKError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvZXhjZXB0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFlBQVksQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxTQUFTLElBQUs7SUFDeEMsSUFBSUMsZ0JBQWdCLFNBQVVDLENBQUMsRUFBRUMsQ0FBQztRQUM5QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1lBQUVDLFdBQVcsRUFBRTtRQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1lBQUlELEVBQUVJLFNBQVMsR0FBR0g7UUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7WUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUMsT0FBT0ssU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUFFO1FBQ3BHLE9BQU9QLGNBQWNDLEdBQUdDO0lBQzVCO0lBQ0EsT0FBTyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSSxPQUFPQSxNQUFNLGNBQWNBLE1BQU0sTUFDakMsTUFBTSxJQUFJUyxVQUFVLHlCQUF5QkMsT0FBT1YsS0FBSztRQUM3REYsY0FBY0MsR0FBR0M7UUFDakIsU0FBU1c7WUFBTyxJQUFJLENBQUNDLFdBQVcsR0FBR2I7UUFBRztRQUN0Q0EsRUFBRU8sU0FBUyxHQUFHTixNQUFNLE9BQU9DLE9BQU9ZLE1BQU0sQ0FBQ2IsS0FBTVcsQ0FBQUEsR0FBR0wsU0FBUyxHQUFHTixFQUFFTSxTQUFTLEVBQUUsSUFBSUssSUFBRztJQUN0RjtBQUNKO0FBQ0FWLDhDQUE2QztJQUFFZSxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBR0EseUJBQXlCLEdBQUcsS0FBSztBQUN6RCxJQUFJRztBQUNILFVBQVVBLGlCQUFpQjtJQUN4QkEsaUJBQWlCLENBQUMsOEJBQThCLEdBQUc7SUFDbkRBLGlCQUFpQixDQUFDLGdDQUFnQyxHQUFHO0FBQ3pELEdBQUdBLG9CQUFvQkgsUUFBUUcsaUJBQWlCLElBQUtILENBQUFBLHlCQUF5QixHQUFHLENBQUM7QUFDbEYsSUFBSUUsZ0JBQWdCLFdBQVcsR0FBSSxTQUFVRSxNQUFNO0lBQy9DdEIsVUFBVW9CLGVBQWVFO0lBQ3pCLFNBQVNGLGNBQWNHLFNBQVMsRUFBRUMsT0FBTztRQUNyQyxJQUFJQyxRQUFRSCxPQUFPWCxJQUFJLENBQUMsSUFBSSxFQUFFYSxZQUFZLElBQUk7UUFDOUNDLE1BQU1GLFNBQVMsR0FBR0E7UUFDbEJFLE1BQU1DLElBQUksR0FBRztRQUNidEIsT0FBT0MsY0FBYyxDQUFDb0IsT0FBT0wsY0FBY1gsU0FBUztRQUNwRCxPQUFPZ0I7SUFDWDtJQUNBLE9BQU9MO0FBQ1gsRUFBRU87QUFDRlQscUJBQXFCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvZXhjZXB0aW9ucy5qcz8zYTdiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2luZGVTREtFcnJvciA9IGV4cG9ydHMuS2luZGVTREtFcnJvckNvZGUgPSB2b2lkIDA7XG52YXIgS2luZGVTREtFcnJvckNvZGU7XG4oZnVuY3Rpb24gKEtpbmRlU0RLRXJyb3JDb2RlKSB7XG4gICAgS2luZGVTREtFcnJvckNvZGVbXCJJTlZBTElEX1RPS0VOX01FTU9SWV9DT01NSVRcIl0gPSBcIklOVkFMSURfVE9LRU5fTUVNT1JZX0NPTU1JVFwiO1xuICAgIEtpbmRlU0RLRXJyb3JDb2RlW1wiRkFJTEVEX1RPS0VOU19SRUZSRVNIX0FUVEVNUFRcIl0gPSBcIkZBSUxFRF9UT0tFTlNfUkVGUkVTSF9BVFRFTVBUXCI7XG59KShLaW5kZVNES0Vycm9yQ29kZSA9IGV4cG9ydHMuS2luZGVTREtFcnJvckNvZGUgfHwgKGV4cG9ydHMuS2luZGVTREtFcnJvckNvZGUgPSB7fSkpO1xudmFyIEtpbmRlU0RLRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEtpbmRlU0RLRXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gS2luZGVTREtFcnJvcihlcnJvckNvZGUsIG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZXJyb3JDb2RlID0gZXJyb3JDb2RlO1xuICAgICAgICBfdGhpcy5uYW1lID0gJ0tpbmRlU0RLRXJyb3InO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX3RoaXMsIEtpbmRlU0RLRXJyb3IucHJvdG90eXBlKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gS2luZGVTREtFcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydHMuS2luZGVTREtFcnJvciA9IEtpbmRlU0RLRXJyb3I7XG4iXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJLaW5kZVNES0Vycm9yIiwiS2luZGVTREtFcnJvckNvZGUiLCJfc3VwZXIiLCJlcnJvckNvZGUiLCJtZXNzYWdlIiwiX3RoaXMiLCJuYW1lIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./session-managers/types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./oauth2-flows/types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utilities/types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./clients/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/clients/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./exceptions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utilities/validate-client-secret.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/validate-client-secret.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCLElBQUlHLE9BQU9QLE9BQU9RLHdCQUF3QixDQUFDTCxHQUFHQztJQUM5QyxJQUFJLENBQUNHLFFBQVMsVUFBU0EsT0FBTyxDQUFDSixFQUFFTSxVQUFVLEdBQUdGLEtBQUtHLFFBQVEsSUFBSUgsS0FBS0ksWUFBWSxHQUFHO1FBQ2pGSixPQUFPO1lBQUVLLFlBQVk7WUFBTUMsS0FBSztnQkFBYSxPQUFPVixDQUFDLENBQUNDLEVBQUU7WUFBRTtRQUFFO0lBQzlEO0lBQ0FKLE9BQU9jLGNBQWMsQ0FBQ1osR0FBR0csSUFBSUU7QUFDakMsSUFBTSxTQUFTTCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJVyxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNaLENBQUMsRUFBRWEsUUFBTztJQUNqRSxJQUFLLElBQUlDLEtBQUtkLEVBQUcsSUFBSWMsTUFBTSxhQUFhLENBQUNqQixPQUFPa0IsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osVUFBU0MsSUFBSWxCLGdCQUFnQmlCLFVBQVNiLEdBQUdjO0FBQzNIO0FBQ0FqQiw4Q0FBNkM7SUFBRXFCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0ROLGFBQWFPLG1CQUFPQSxDQUFDLGdJQUE2QixHQUFHTjtBQUNyREQsYUFBYU8sbUJBQU9BLENBQUMsd0hBQXlCLEdBQUdOO0FBQ2pERCxhQUFhTyxtQkFBT0EsQ0FBQyxrSEFBc0IsR0FBR047QUFDOUNELGFBQWFPLG1CQUFPQSxDQUFDLDhHQUFvQixHQUFHTjtBQUM1Q0QsYUFBYU8sbUJBQU9BLENBQUMsd0dBQWlCLEdBQUdOO0FBQ3pDRCxhQUFhTyxtQkFBT0EsQ0FBQyxvSkFBdUMsR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL3Nkay9pbmRleC5qcz85ZWY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2Vzc2lvbi1tYW5hZ2Vycy90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vb2F1dGgyLWZsb3dzL3R5cGVzLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsaXRpZXMvdHlwZXMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NsaWVudHMvaW5kZXguanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2V4Y2VwdGlvbnMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxpdGllcy92YWxpZGF0ZS1jbGllbnQtc2VjcmV0LmpzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbHVlIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeAbstract.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeAbstract.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __rest = (void 0) && (void 0).__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthCodeAbstract = void 0;\nvar exceptions_js_1 = __webpack_require__(/*! ../exceptions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js\");\nvar environment_js_1 = __webpack_require__(/*! ../environment.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\");\nvar utilities = __importStar(__webpack_require__(/*! ../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\nvar version_js_1 = __webpack_require__(/*! ../version.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/version.js\");\nvar jose_1 = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\nvar remote_jwks_cache_js_1 = __webpack_require__(/*! ../utilities/remote-jwks-cache.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/remote-jwks-cache.js\");\n/**\n * Abstract class provides contract (methods) for classes implementing OAuth2.0 flows\n * for authorization_code grant type, this includes the basic Authorization Code flow\n * and the PKCE extention code flow.\n * @class AuthCodeAbstract\n * @param {AuthorizationCodeOptions} config\n */ var AuthCodeAbstract = exports.AuthCodeAbstract = /** @class */ function() {\n    function AuthCodeAbstract(config) {\n        var _this = this;\n        this.config = config;\n        var authDomain = config.authDomain, logoutRedirectURL = config.logoutRedirectURL;\n        this.logoutEndpoint = \"\".concat(authDomain, \"/logout?redirect=\").concat(logoutRedirectURL !== null && logoutRedirectURL !== void 0 ? logoutRedirectURL : \"\");\n        this.userProfileEndpoint = \"\".concat(authDomain, \"/oauth2/v2/user_profile\");\n        this.authorizationEndpoint = \"\".concat(authDomain, \"/oauth2/auth\");\n        this.tokenEndpoint = \"\".concat(authDomain, \"/oauth2/token\");\n        var keyProvider = function() {\n            return __awaiter(_this, void 0, void 0, function() {\n                var func, _a;\n                return __generator(this, function(_b) {\n                    switch(_b.label){\n                        case 0:\n                            if (!(config.jwks !== undefined)) return [\n                                3 /*break*/ ,\n                                1\n                            ];\n                            _a = (0, jose_1.createLocalJWKSet)(config.jwks);\n                            return [\n                                3 /*break*/ ,\n                                3\n                            ];\n                        case 1:\n                            return [\n                                4 /*yield*/ ,\n                                (0, remote_jwks_cache_js_1.getRemoteJwks)(authDomain)\n                            ];\n                        case 2:\n                            _a = _b.sent();\n                            _b.label = 3;\n                        case 3:\n                            func = _a;\n                            return [\n                                4 /*yield*/ ,\n                                func({\n                                    alg: \"RS256\"\n                                })\n                            ];\n                        case 4:\n                            return [\n                                2 /*return*/ ,\n                                _b.sent()\n                            ];\n                    }\n                });\n            });\n        };\n        this.tokenValidationDetails = {\n            issuer: config.authDomain,\n            audience: config.audience,\n            keyProvider: keyProvider\n        };\n    }\n    /**\n     * Method handles redirection logic to after authorization server redirects back\n     * to application, this method makes use of the @see {exchangeAuthCodeForTokens}\n     * method above and saves the received tokens to the current session.\n     * @param {SessionManager} sessionManager\n     * @param {URL} callbackURL\n     * @returns {Promise<void>}\n     */ AuthCodeAbstract.prototype.handleRedirectFromAuthDomain = function(sessionManager, callbackURL) {\n        return __awaiter(this, void 0, void 0, function() {\n            var tokens;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.exchangeAuthCodeForTokens(sessionManager, callbackURL)\n                        ];\n                    case 1:\n                        tokens = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            utilities.commitTokensToSession(sessionManager, tokens, this.tokenValidationDetails)\n                        ];\n                    case 2:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method retrieves the access token, if the token present in the current session\n     * is unexpired it will be returned otherwise, a new one will be obtained using\n     * the refresh token if the refresh token is not available either an error will\n     * be thrown.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<string>}\n     */ AuthCodeAbstract.prototype.getToken = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var accessToken, isAccessTokenExpired, refreshToken, tokens, error_1;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getAccessToken(sessionManager)\n                        ];\n                    case 1:\n                        accessToken = _a.sent();\n                        if (!accessToken) {\n                            throw new Error(\"No authentication credential found\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            utilities.isTokenExpired(accessToken, this.tokenValidationDetails)\n                        ];\n                    case 2:\n                        isAccessTokenExpired = _a.sent();\n                        if (!isAccessTokenExpired) {\n                            return [\n                                2 /*return*/ ,\n                                accessToken\n                            ];\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getRefreshToken(sessionManager)\n                        ];\n                    case 3:\n                        refreshToken = _a.sent();\n                        if (!refreshToken && (0, environment_js_1.isNodeEnvironment)()) {\n                            throw Error(\"Cannot persist session no valid refresh token found\");\n                        }\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([\n                            4,\n                            6,\n                            ,\n                            7\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this.refreshTokens(sessionManager)\n                        ];\n                    case 5:\n                        tokens = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            tokens.access_token\n                        ];\n                    case 6:\n                        error_1 = _a.sent();\n                        throw new exceptions_js_1.KindeSDKError(exceptions_js_1.KindeSDKErrorCode.FAILED_TOKENS_REFRESH_ATTEMPT, \"Failed to refresh tokens owing to: \".concat(error_1.message));\n                    case 7:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method returns a boolean indicating if the access token in session is expired\n     * or not, in the event the token is expired it makes use of the `getToken` method\n     * above to first refresh it, in the event refresh fails false is returned.\n     * @param sessionManager\n     * @returns {Promise<boolean>}\n     */ AuthCodeAbstract.prototype.isAuthenticated = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var error_2;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        _a.trys.push([\n                            0,\n                            2,\n                            ,\n                            3\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this.getToken(sessionManager)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            true\n                        ];\n                    case 2:\n                        error_2 = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            false\n                        ];\n                    case 3:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method makes use of the user profile V2 endpoint to fetch the authenticated\n     * user's profile information.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<UserType>}\n     */ AuthCodeAbstract.prototype.getUserProfile = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var accessToken, headers, targetURL, config, response, payload;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.getToken(sessionManager)\n                        ];\n                    case 1:\n                        accessToken = _a.sent();\n                        headers = new Headers();\n                        headers.append(\"Authorization\", \"Bearer \".concat(accessToken));\n                        headers.append(\"Accept\", \"application/json\");\n                        targetURL = this.userProfileEndpoint;\n                        config = {\n                            method: \"GET\",\n                            headers: headers\n                        };\n                        return [\n                            4 /*yield*/ ,\n                            fetch(targetURL, config)\n                        ];\n                    case 2:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.json()\n                        ];\n                    case 3:\n                        payload = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            payload\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * A helper method employed by @see {exchangeAuthCodeForTokens} method in child\n     * classes to extract code and state parameters from the received callback URL\n     * an exception is raised in the event the callback URL contains an error query\n     * parameter.\n     * @param {URL} callbackURL\n     * @returns {[string, string]} c\n     */ AuthCodeAbstract.prototype.getCallbackURLParams = function(callbackURL) {\n        var searchParams = new URLSearchParams(callbackURL.search);\n        var state = searchParams.get(\"state\");\n        var error = searchParams.get(\"error\");\n        var code = searchParams.get(\"code\");\n        if (error) {\n            throw new Error(\"Authorization server reported an error: \".concat(error));\n        }\n        return [\n            code,\n            state\n        ];\n    };\n    /**\n     * Method implements logic for fetching tokens from the authorization server using\n     * the provided body, the `useCookies` is used exclusively on the browser.\n     * @param {SessionManager} sessionManager\n     * @param {URLSearchParams} body\n     * @param {boolean} useCookies\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ AuthCodeAbstract.prototype.fetchTokensFor = function(sessionManager, body, useCookies) {\n        if (useCookies === void 0) {\n            useCookies = false;\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var headers, config, response, payload, errorPayload, errorDescription, message;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        headers = new Headers();\n                        headers.append(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                        headers.append.apply(headers, __spreadArray([], __read((0, version_js_1.getSDKHeader)({\n                            frameworkVersion: this.config.frameworkVersion,\n                            framework: this.config.framework\n                        })), false));\n                        config = {\n                            method: \"POST\",\n                            headers: headers,\n                            body: body,\n                            credentials: useCookies ? \"include\" : undefined\n                        };\n                        return [\n                            4 /*yield*/ ,\n                            fetch(this.tokenEndpoint, config)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.json()\n                        ];\n                    case 2:\n                        payload = _a.sent();\n                        errorPayload = payload;\n                        if (!errorPayload.error) return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.destroySession()\n                        ];\n                    case 3:\n                        _a.sent();\n                        errorDescription = errorPayload.error_description;\n                        message = errorDescription !== null && errorDescription !== void 0 ? errorDescription : errorPayload.error;\n                        throw new Error(message);\n                    case 4:\n                        return [\n                            2 /*return*/ ,\n                            payload\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Helper method employed by @see {createAuthorizationURL} method above for\n     * generating the aforementioned authorization URL.\n     * @param {AuthURLOptions}\n     * @returns {URLSearchParams}\n     */ AuthCodeAbstract.prototype.generateAuthURLParams = function(options) {\n        var _a, _b;\n        if (options === void 0) {\n            options = {};\n        }\n        var searchParams = this.getBaseAuthURLParams();\n        var scope = (_a = this.config.scope) !== null && _a !== void 0 ? _a : AuthCodeAbstract.DEFAULT_TOKEN_SCOPES;\n        scope = scope.split(\" \").includes(\"openid\") ? scope : \"\".concat(scope, \" openid\");\n        var searchParamsObject = {\n            scope: scope\n        };\n        if (options.start_page) {\n            searchParamsObject.start_page = options.start_page;\n        }\n        if (options.org_code) {\n            searchParamsObject.org_code = options.org_code;\n        }\n        if (options.is_create_org) {\n            searchParamsObject.org_name = (_b = options.org_name) !== null && _b !== void 0 ? _b : \"\";\n            searchParamsObject.is_create_org = \"true\";\n        }\n        if (options.authUrlParams) {\n            var _c = options.authUrlParams, lang = _c.lang, loginHint = _c.login_hint, connectionId = _c.connection_id, rest = __rest(_c, [\n                \"lang\",\n                \"login_hint\",\n                \"connection_id\"\n            ]);\n            searchParamsObject = __assign(__assign({}, rest), searchParamsObject);\n            if (lang) {\n                searchParamsObject.lang = lang;\n            }\n            if (loginHint) {\n                searchParamsObject.login_hint = loginHint;\n            }\n            if (connectionId) {\n                searchParamsObject.connection_id = connectionId;\n            }\n        }\n        for(var key in searchParamsObject){\n            var value = searchParamsObject[key];\n            if (typeof value === \"object\" && value !== null) {\n                searchParams.append(key, JSON.stringify(value));\n            } else {\n                searchParams.append(key, String(value));\n            }\n        }\n        if (this.config.audience) {\n            var audienceArray = Array.isArray(this.config.audience) ? this.config.audience : [\n                this.config.audience\n            ];\n            audienceArray.forEach(function(aud) {\n                searchParams.append(\"audience\", aud);\n            });\n        }\n        return searchParams;\n    };\n    AuthCodeAbstract.DEFAULT_TOKEN_SCOPES = \"openid profile email offline\";\n    return AuthCodeAbstract;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeAbstract.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeWithPKCE.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeWithPKCE.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthCodeWithPKCE = void 0;\nvar environment_js_1 = __webpack_require__(/*! ../environment.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\");\nvar AuthCodeAbstract_js_1 = __webpack_require__(/*! ./AuthCodeAbstract.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeAbstract.js\");\nvar utilities = __importStar(__webpack_require__(/*! ../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\n/**\n * Class provides implementation for the authorization code with PKCE extension\n * OAuth2.0 flow, please note the use of the `isBrowserEnvironment()` method\n * in certain methods of this class, this is because this class is intended to\n * be used on both the browser and server.\n * @class AuthCodeWithPKCE\n * @param {AuthorizationCodeOptions} config\n */ var AuthCodeWithPKCE = exports.AuthCodeWithPKCE = /** @class */ function(_super) {\n    __extends(AuthCodeWithPKCE, _super);\n    function AuthCodeWithPKCE(config) {\n        var _this = _super.call(this, config) || this;\n        _this.config = config;\n        return _this;\n    }\n    /**\n     * Method provides implementation for `createAuthorizationURL` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class for\n     * further explanation.\n     * @param {SessionManager} sessionManager\n     * @param {AuthURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ AuthCodeWithPKCE.prototype.createAuthorizationURL = function(sessionManager, options) {\n        var _a;\n        if (options === void 0) {\n            options = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var challengeSetup, challenge, verifier, setItem, authURL, authParams;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            utilities.setupCodeChallenge()\n                        ];\n                    case 1:\n                        challengeSetup = _b.sent();\n                        challenge = challengeSetup.challenge, verifier = challengeSetup.verifier;\n                        this.codeChallenge = challenge;\n                        this.codeVerifier = verifier;\n                        this.state = (_a = options.state) !== null && _a !== void 0 ? _a : utilities.generateRandomString();\n                        setItem = (0, environment_js_1.isBrowserEnvironment)() ? sessionManager.setSessionItemBrowser : sessionManager.setSessionItem;\n                        return [\n                            4 /*yield*/ ,\n                            setItem.call(sessionManager, this.getCodeVerifierKey(this.state), JSON.stringify({\n                                codeVerifier: this.codeVerifier\n                            }))\n                        ];\n                    case 2:\n                        _b.sent();\n                        authURL = new URL(this.authorizationEndpoint);\n                        authParams = this.generateAuthURLParams(options);\n                        authURL.search = authParams.toString();\n                        return [\n                            2 /*return*/ ,\n                            authURL\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides implementation for `refreshTokens` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class for\n     * further explanation.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ AuthCodeWithPKCE.prototype.refreshTokens = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var refreshToken, body, tokens;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getRefreshToken(sessionManager)\n                        ];\n                    case 1:\n                        refreshToken = _a.sent();\n                        body = new URLSearchParams({\n                            grant_type: \"refresh_token\",\n                            refresh_token: refreshToken,\n                            client_id: this.config.clientId\n                        });\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchTokensFor(sessionManager, body, true)\n                        ];\n                    case 2:\n                        tokens = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            utilities.commitTokensToSession(sessionManager, tokens, this.tokenValidationDetails)\n                        ];\n                    case 3:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            tokens\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides implementation for `exchangeAuthCodeForTokens` method mandated\n     * by `AuthCodeAbstract` parent class, see corresponding comment in parent class\n     * for further explanation.\n     * @param {SessionManager} sessionManager\n     * @param {URL} callbackURL\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ AuthCodeWithPKCE.prototype.exchangeAuthCodeForTokens = function(sessionManager, callbackURL) {\n        return __awaiter(this, void 0, void 0, function() {\n            var code, state, storedStateKey, getItem, storedState, authFlowState, body, removeItem;\n            var _a;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        code = (_a = __read(_super.prototype.getCallbackURLParams.call(this, callbackURL), 2), _a[0]), state = _a[1];\n                        storedStateKey = this.getCodeVerifierKey(state);\n                        if (!(storedStateKey === null || storedStateKey === void 0 ? void 0 : storedStateKey.endsWith(state))) {\n                            throw new Error(\"Received state does not match stored state\");\n                        }\n                        getItem = (0, environment_js_1.isBrowserEnvironment)() ? sessionManager.getSessionItemBrowser : sessionManager.getSessionItem;\n                        return [\n                            4 /*yield*/ ,\n                            getItem.call(sessionManager, storedStateKey)\n                        ];\n                    case 1:\n                        storedState = _b.sent();\n                        if (!storedState) {\n                            throw new Error(\"Stored state not found\");\n                        }\n                        authFlowState = JSON.parse(storedState);\n                        this.codeVerifier = authFlowState.codeVerifier;\n                        body = new URLSearchParams({\n                            redirect_uri: this.config.redirectURL,\n                            client_id: this.config.clientId,\n                            code_verifier: this.codeVerifier,\n                            grant_type: \"authorization_code\",\n                            code: code\n                        });\n                        removeItem = (0, environment_js_1.isBrowserEnvironment)() ? sessionManager.removeSessionItemBrowser : sessionManager.removeSessionItem;\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([\n                            2,\n                            ,\n                            4,\n                            6\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchTokensFor(sessionManager, body)\n                        ];\n                    case 3:\n                        return [\n                            2 /*return*/ ,\n                            _b.sent()\n                        ];\n                    case 4:\n                        return [\n                            4 /*yield*/ ,\n                            removeItem.call(sessionManager, this.getCodeVerifierKey(state))\n                        ];\n                    case 5:\n                        _b.sent();\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 6:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method generates the key against which the code verifier is stored in session\n     * storage.\n     * @param {string} state\n     * @returns {string} - required code verifer key\n     */ AuthCodeWithPKCE.prototype.getCodeVerifierKey = function(state) {\n        return \"\".concat(AuthCodeWithPKCE.STATE_KEY, \"-\").concat(state);\n    };\n    /**\n     * Method provides implementation for `getBaseAuthURLParams` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class\n     * for further explanation.\n     * @returns {URLSearchParams} Required query parameters\n     */ AuthCodeWithPKCE.prototype.getBaseAuthURLParams = function() {\n        return new URLSearchParams({\n            state: this.state,\n            client_id: this.config.clientId,\n            redirect_uri: this.config.redirectURL,\n            response_type: \"code\",\n            code_challenge: this.codeChallenge,\n            code_challenge_method: \"S256\"\n        });\n    };\n    AuthCodeWithPKCE.STATE_KEY = \"acwpf-state-key\";\n    return AuthCodeWithPKCE;\n}(AuthCodeAbstract_js_1.AuthCodeAbstract);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeWithPKCE.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthorizationCode.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthorizationCode.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthorizationCode = void 0;\nvar AuthCodeAbstract_js_1 = __webpack_require__(/*! ./AuthCodeAbstract.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeAbstract.js\");\nvar utilities = __importStar(__webpack_require__(/*! ../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\n/**\n * Class provides implementation for the authorization code OAuth2.0 flow.\n * @class AuthorizationCode\n * @param {AuthorizationCodeOptions} config\n * @param {string} clientSecret\n */ var AuthorizationCode = exports.AuthorizationCode = /** @class */ function(_super) {\n    __extends(AuthorizationCode, _super);\n    function AuthorizationCode(config, clientSecret) {\n        var _this = _super.call(this, config) || this;\n        _this.config = config;\n        _this.clientSecret = clientSecret;\n        return _this;\n    }\n    /**\n     * Method provides implementation for `createAuthorizationURL` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class for\n     * further explanation.\n     * @param {SessionManager} sessionManager\n     * @param {AuthURLOptions} options\n     * @returns {Promise<URL>} required authorization URL\n     */ AuthorizationCode.prototype.createAuthorizationURL = function(sessionManager, options) {\n        var _a, _b;\n        if (options === void 0) {\n            options = {};\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var _c, _d, authURL, authParams;\n            return __generator(this, function(_e) {\n                switch(_e.label){\n                    case 0:\n                        _c = this;\n                        if (!((_a = options.state) !== null && _a !== void 0)) return [\n                            3 /*break*/ ,\n                            1\n                        ];\n                        _d = _a;\n                        return [\n                            3 /*break*/ ,\n                            3\n                        ];\n                    case 1:\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.getSessionItem(AuthorizationCode.STATE_KEY)\n                        ];\n                    case 2:\n                        _d = _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _c.state = (_b = _d) !== null && _b !== void 0 ? _b : utilities.generateRandomString();\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.setSessionItem(AuthorizationCode.STATE_KEY, this.state)\n                        ];\n                    case 4:\n                        _e.sent();\n                        authURL = new URL(this.authorizationEndpoint);\n                        authParams = this.generateAuthURLParams(options);\n                        authURL.search = authParams.toString();\n                        return [\n                            2 /*return*/ ,\n                            authURL\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides implementation for `refreshTokens` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class for\n     * further explanation.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ AuthorizationCode.prototype.refreshTokens = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var refreshToken, body, tokens;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getRefreshToken(sessionManager)\n                        ];\n                    case 1:\n                        refreshToken = _a.sent();\n                        if (!utilities.validateClientSecret(this.clientSecret)) {\n                            throw new Error(\"Invalid client secret \".concat(this.clientSecret));\n                        }\n                        body = new URLSearchParams({\n                            grant_type: \"refresh_token\",\n                            client_id: this.config.clientId,\n                            client_secret: this.clientSecret,\n                            refresh_token: refreshToken\n                        });\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchTokensFor(sessionManager, body)\n                        ];\n                    case 2:\n                        tokens = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            utilities.commitTokensToSession(sessionManager, tokens, this.tokenValidationDetails)\n                        ];\n                    case 3:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            tokens\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides implementation for `exchangeAuthCodeForTokens` method mandated\n     * by `AuthCodeAbstract` parent class, see corresponding comment in parent class\n     * for further explanation.\n     * @param {SessionManager} sessionManager\n     * @param {URL} callbackURL\n     * @returns {Promise<OAuth2CodeExchangeResponse>}\n     */ AuthorizationCode.prototype.exchangeAuthCodeForTokens = function(sessionManager, callbackURL) {\n        return __awaiter(this, void 0, void 0, function() {\n            var code, state, stateKey, storedState, body;\n            var _a;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        code = (_a = __read(this.getCallbackURLParams(callbackURL), 2), _a[0]), state = _a[1];\n                        stateKey = AuthorizationCode.STATE_KEY;\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.getSessionItem(stateKey)\n                        ];\n                    case 1:\n                        storedState = _b.sent();\n                        if (!storedState) {\n                            throw new Error(\"Authentication flow: Received: \".concat(state, \" | Expected: State not found\"));\n                        }\n                        if (storedState !== state) {\n                            throw new Error(\"Authentication flow: State mismatch. Received: \".concat(state, \" | Expected: \").concat(storedState));\n                        }\n                        if (!utilities.validateClientSecret(this.clientSecret)) {\n                            throw new Error(\"Invalid client secret \".concat(this.clientSecret));\n                        }\n                        body = new URLSearchParams({\n                            grant_type: \"authorization_code\",\n                            client_id: this.config.clientId,\n                            client_secret: this.clientSecret,\n                            redirect_uri: this.config.redirectURL,\n                            code: code\n                        });\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([\n                            2,\n                            ,\n                            4,\n                            6\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchTokensFor(sessionManager, body)\n                        ];\n                    case 3:\n                        return [\n                            2 /*return*/ ,\n                            _b.sent()\n                        ];\n                    case 4:\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.removeSessionItem(stateKey)\n                        ];\n                    case 5:\n                        _b.sent();\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 6:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides implementation for `getBaseAuthURLParams` method mandated by\n     * `AuthCodeAbstract` parent class, see corresponding comment in parent class\n     * for further explanation.\n     * @returns {URLSearchParams} Required query parameters\n     */ AuthorizationCode.prototype.getBaseAuthURLParams = function() {\n        return new URLSearchParams({\n            state: this.state,\n            client_id: this.config.clientId,\n            redirect_uri: this.config.redirectURL,\n            response_type: \"code\"\n        });\n    };\n    AuthorizationCode.STATE_KEY = \"ac-state-key\";\n    return AuthorizationCode;\n}(AuthCodeAbstract_js_1.AuthCodeAbstract);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthorizationCode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/ClientCredentials.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/ClientCredentials.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ClientCredentials = void 0;\nvar jose_1 = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\nvar utilities = __importStar(__webpack_require__(/*! ../utilities/index.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\"));\nvar version_js_1 = __webpack_require__(/*! ../version.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/version.js\");\nvar remote_jwks_cache_js_1 = __webpack_require__(/*! ../utilities/remote-jwks-cache.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/remote-jwks-cache.js\");\n/**\n * Class provides implementation for the client credentials OAuth2.0 flow.\n * @class ClientCredentials\n */ var ClientCredentials = /** @class */ function() {\n    function ClientCredentials(config) {\n        var _this = this;\n        this.config = config;\n        var authDomain = config.authDomain, logoutRedirectURL = config.logoutRedirectURL;\n        this.logoutEndpoint = \"\".concat(authDomain, \"/logout?redirect=\").concat(logoutRedirectURL !== null && logoutRedirectURL !== void 0 ? logoutRedirectURL : \"\");\n        this.tokenEndpoint = \"\".concat(authDomain, \"/oauth2/token\");\n        this.config = config;\n        var keyProvider = function() {\n            return __awaiter(_this, void 0, void 0, function() {\n                var func, _a;\n                return __generator(this, function(_b) {\n                    switch(_b.label){\n                        case 0:\n                            if (!(config.jwks !== undefined)) return [\n                                3 /*break*/ ,\n                                1\n                            ];\n                            _a = (0, jose_1.createLocalJWKSet)(config.jwks);\n                            return [\n                                3 /*break*/ ,\n                                3\n                            ];\n                        case 1:\n                            return [\n                                4 /*yield*/ ,\n                                (0, remote_jwks_cache_js_1.getRemoteJwks)(authDomain)\n                            ];\n                        case 2:\n                            _a = _b.sent();\n                            _b.label = 3;\n                        case 3:\n                            func = _a;\n                            return [\n                                4 /*yield*/ ,\n                                func({\n                                    alg: \"RS256\"\n                                })\n                            ];\n                        case 4:\n                            return [\n                                2 /*return*/ ,\n                                _b.sent()\n                            ];\n                    }\n                });\n            });\n        };\n        this.tokenValidationDetails = {\n            issuer: config.authDomain,\n            audience: config.audience,\n            keyProvider: keyProvider\n        };\n    }\n    /**\n     * Method retrieves the access token, if the token present in the current session\n     * is unexpired it will be returned otherwise, a new one will be be obtained by\n     * performing a network call.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<string>}\n     */ ClientCredentials.prototype.getToken = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var accessToken, isTokenExpired, payload;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            utilities.getAccessToken(sessionManager)\n                        ];\n                    case 1:\n                        accessToken = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            utilities.isTokenExpired(accessToken, this.tokenValidationDetails)\n                        ];\n                    case 2:\n                        isTokenExpired = _a.sent();\n                        if (accessToken && !isTokenExpired) {\n                            return [\n                                2 /*return*/ ,\n                                accessToken\n                            ];\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this.fetchAccessTokenFor(sessionManager)\n                        ];\n                    case 3:\n                        payload = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            utilities.commitTokenToSession(sessionManager, payload.access_token, \"access_token\", this.tokenValidationDetails)\n                        ];\n                    case 4:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            payload.access_token\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method implements logic for requesting access token using token endpoint.\n     * @param {SessionManager} sessionManager\n     * @returns {Promise<OAuth2CCTokenResponse>}\n     */ ClientCredentials.prototype.fetchAccessTokenFor = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var body, headers, config, response, payload, errorPayload, errorDescription, message;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        body = this.generateTokenURLParams();\n                        headers = new Headers();\n                        headers.append(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                        headers.append.apply(headers, __spreadArray([], __read((0, version_js_1.getSDKHeader)({\n                            frameworkVersion: this.config.frameworkVersion,\n                            framework: this.config.framework\n                        })), false));\n                        config = {\n                            method: \"POST\",\n                            headers: headers,\n                            body: body\n                        };\n                        return [\n                            4 /*yield*/ ,\n                            fetch(this.tokenEndpoint, config)\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            4 /*yield*/ ,\n                            response.json()\n                        ];\n                    case 2:\n                        payload = _a.sent();\n                        errorPayload = payload;\n                        if (!errorPayload.error) return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            sessionManager.destroySession()\n                        ];\n                    case 3:\n                        _a.sent();\n                        errorDescription = errorPayload.error_description;\n                        message = errorDescription !== null && errorDescription !== void 0 ? errorDescription : errorPayload.error;\n                        throw new Error(message);\n                    case 4:\n                        return [\n                            2 /*return*/ ,\n                            payload\n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method returns a boolean indicating if the access token in session is expired\n     * or not, in the event the token is expired it makes use of the `getToken` method\n     * above to first refresh it, in the event refresh fails false is returned.\n     * @param sessionManager\n     * @returns {Promise<boolean>}\n     */ ClientCredentials.prototype.isAuthenticated = function(sessionManager) {\n        return __awaiter(this, void 0, void 0, function() {\n            var error_1;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        _a.trys.push([\n                            0,\n                            2,\n                            ,\n                            3\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this.getToken(sessionManager)\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            true\n                        ];\n                    case 2:\n                        error_1 = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            false\n                        ];\n                    case 3:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    /**\n     * Method provides the query params required for generating the token URL for\n     * obtaining the required access token.\n     * @returns {URLSearchParams}\n     */ ClientCredentials.prototype.generateTokenURLParams = function() {\n        if (!utilities.validateClientSecret(this.config.clientSecret)) {\n            throw new Error(\"Invalid client secret \".concat(this.config.clientSecret));\n        }\n        var searchParams = new URLSearchParams({\n            grant_type: \"client_credentials\",\n            client_id: this.config.clientId,\n            client_secret: this.config.clientSecret\n        });\n        if (this.config.scope !== undefined) {\n            searchParams.append(\"scope\", this.config.scope);\n        }\n        if (this.config.audience) {\n            var audienceArray = Array.isArray(this.config.audience) ? this.config.audience : [\n                this.config.audience\n            ];\n            audienceArray.forEach(function(aud) {\n                searchParams.append(\"audience\", aud);\n            });\n        }\n        return new URLSearchParams(searchParams);\n    };\n    return ClientCredentials;\n}();\nexports.ClientCredentials = ClientCredentials;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/ClientCredentials.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthCodeWithPKCE = exports.AuthorizationCode = exports.ClientCredentials = void 0;\nvar ClientCredentials_js_1 = __webpack_require__(/*! ./ClientCredentials.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/ClientCredentials.js\");\nObject.defineProperty(exports, \"ClientCredentials\", ({\n    enumerable: true,\n    get: function() {\n        return ClientCredentials_js_1.ClientCredentials;\n    }\n}));\nvar AuthorizationCode_js_1 = __webpack_require__(/*! ./AuthorizationCode.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthorizationCode.js\");\nObject.defineProperty(exports, \"AuthorizationCode\", ({\n    enumerable: true,\n    get: function() {\n        return AuthorizationCode_js_1.AuthorizationCode;\n    }\n}));\nvar AuthCodeWithPKCE_js_1 = __webpack_require__(/*! ./AuthCodeWithPKCE.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/AuthCodeWithPKCE.js\");\nObject.defineProperty(exports, \"AuthCodeWithPKCE\", ({\n    enumerable: true,\n    get: function() {\n        return AuthCodeWithPKCE_js_1.AuthCodeWithPKCE;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/types.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvb2F1dGgyLWZsb3dzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETCx3QkFBd0IsR0FBR0EseUJBQXlCLEdBQUdBLHlCQUF5QixHQUFHLEtBQUs7QUFDeEYsSUFBSVMseUJBQXlCQyxtQkFBT0EsQ0FBQyxtSUFBd0I7QUFDN0QxQixxREFBb0Q7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT1ksdUJBQXVCRCxpQkFBaUI7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNoSixJQUFJRyx5QkFBeUJELG1CQUFPQSxDQUFDLG1JQUF3QjtBQUM3RDFCLHFEQUFvRDtJQUFFWSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPYyx1QkFBdUJKLGlCQUFpQjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ2hKLElBQUlLLHdCQUF3QkYsbUJBQU9BLENBQUMsaUlBQXVCO0FBQzNEMUIsb0RBQW1EO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9lLHNCQUFzQk4sZ0JBQWdCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDN0lQLGFBQWFXLG1CQUFPQSxDQUFDLDJHQUFZLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvb2F1dGgyLWZsb3dzL2luZGV4LmpzP2E3NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXV0aENvZGVXaXRoUEtDRSA9IGV4cG9ydHMuQXV0aG9yaXphdGlvbkNvZGUgPSBleHBvcnRzLkNsaWVudENyZWRlbnRpYWxzID0gdm9pZCAwO1xudmFyIENsaWVudENyZWRlbnRpYWxzX2pzXzEgPSByZXF1aXJlKFwiLi9DbGllbnRDcmVkZW50aWFscy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNsaWVudENyZWRlbnRpYWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDbGllbnRDcmVkZW50aWFsc19qc18xLkNsaWVudENyZWRlbnRpYWxzOyB9IH0pO1xudmFyIEF1dGhvcml6YXRpb25Db2RlX2pzXzEgPSByZXF1aXJlKFwiLi9BdXRob3JpemF0aW9uQ29kZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGhvcml6YXRpb25Db2RlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdXRob3JpemF0aW9uQ29kZV9qc18xLkF1dGhvcml6YXRpb25Db2RlOyB9IH0pO1xudmFyIEF1dGhDb2RlV2l0aFBLQ0VfanNfMSA9IHJlcXVpcmUoXCIuL0F1dGhDb2RlV2l0aFBLQ0UuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdXRoQ29kZVdpdGhQS0NFXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBdXRoQ29kZVdpdGhQS0NFX2pzXzEuQXV0aENvZGVXaXRoUEtDRTsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsIkF1dGhDb2RlV2l0aFBLQ0UiLCJBdXRob3JpemF0aW9uQ29kZSIsIkNsaWVudENyZWRlbnRpYWxzIiwiQ2xpZW50Q3JlZGVudGlhbHNfanNfMSIsInJlcXVpcmUiLCJBdXRob3JpemF0aW9uQ29kZV9qc18xIiwiQXV0aENvZGVXaXRoUEtDRV9qc18xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/types.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GrantType = void 0;\nvar GrantType;\n(function(GrantType) {\n    GrantType[\"AUTHORIZATION_CODE\"] = \"AUTHORIZATION_CODE\";\n    GrantType[\"CLIENT_CREDENTIALS\"] = \"CLIENT_CREDENTIALS\";\n    GrantType[\"PKCE\"] = \"PKCE\";\n})(GrantType = exports.GrantType || (exports.GrantType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvb2F1dGgyLWZsb3dzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pCLElBQUlFO0FBQ0gsVUFBVUEsU0FBUztJQUNoQkEsU0FBUyxDQUFDLHFCQUFxQixHQUFHO0lBQ2xDQSxTQUFTLENBQUMscUJBQXFCLEdBQUc7SUFDbENBLFNBQVMsQ0FBQyxPQUFPLEdBQUc7QUFDeEIsR0FBR0EsWUFBWUYsUUFBUUUsU0FBUyxJQUFLRixDQUFBQSxpQkFBaUIsR0FBRyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvb2F1dGgyLWZsb3dzL3R5cGVzLmpzP2QwOGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdyYW50VHlwZSA9IHZvaWQgMDtcbnZhciBHcmFudFR5cGU7XG4oZnVuY3Rpb24gKEdyYW50VHlwZSkge1xuICAgIEdyYW50VHlwZVtcIkFVVEhPUklaQVRJT05fQ09ERVwiXSA9IFwiQVVUSE9SSVpBVElPTl9DT0RFXCI7XG4gICAgR3JhbnRUeXBlW1wiQ0xJRU5UX0NSRURFTlRJQUxTXCJdID0gXCJDTElFTlRfQ1JFREVOVElBTFNcIjtcbiAgICBHcmFudFR5cGVbXCJQS0NFXCJdID0gXCJQS0NFXCI7XG59KShHcmFudFR5cGUgPSBleHBvcnRzLkdyYW50VHlwZSB8fCAoZXhwb3J0cy5HcmFudFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR3JhbnRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/oauth2-flows/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/BrowserSessionManager.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/BrowserSessionManager.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BrowserSessionManager = void 0;\nvar environment_js_1 = __webpack_require__(/*! ../environment.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/environment.js\");\n/**\n * Provides a session manager implementation for the browser.\n * @class BrowserSessionManager\n */ var BrowserSessionManager = exports.BrowserSessionManager = /** @class */ function() {\n    function BrowserSessionManager() {\n        this.memCache = {};\n        if (!(0, environment_js_1.isBrowserEnvironment)()) {\n            throw new Error(\"BrowserSessionStore must be instantiated on the browser\");\n        }\n    }\n    /**\n     * Prefixes provided item key with class static prefix.\n     * @param {string} itemKey\n     * @returns {string}\n     */ BrowserSessionManager.prototype.generateItemKey = function(itemKey) {\n        return \"\".concat(BrowserSessionManager.ITEM_NAME_PREFIX).concat(itemKey);\n    };\n    /**\n     * Clears all items from session store.\n     * @returns {void}\n     */ BrowserSessionManager.prototype.destroySession = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                sessionStorage.clear();\n                this.memCache = {};\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    /**\n     * Sets the provided key-value store to the memory cache.\n     * @param {string} itemKey\n     * @param {unknown} itemValue\n     * @returns {void}\n     */ BrowserSessionManager.prototype.setSessionItem = function(itemKey, itemValue) {\n        return __awaiter(this, void 0, void 0, function() {\n            var key;\n            return __generator(this, function(_a) {\n                key = this.generateItemKey(itemKey);\n                this.memCache[key] = itemValue;\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    /**\n     * Sets the provided key-value store to the browser session storage.\n     * @param {string} itemKey\n     * @param {unknown} itemValue\n     */ BrowserSessionManager.prototype.setSessionItemBrowser = function(itemKey, itemValue) {\n        return __awaiter(this, void 0, void 0, function() {\n            var key, isString, value;\n            return __generator(this, function(_a) {\n                key = this.generateItemKey(itemKey);\n                isString = typeof itemValue === \"string\";\n                value = !isString ? JSON.stringify(itemValue) : itemValue;\n                sessionStorage.setItem(key, value);\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    /**\n     * Gets the item for the provided key from the memory cache.\n     * @param {string} itemKey\n     * @returns {unknown | null}\n     */ BrowserSessionManager.prototype.getSessionItem = function(itemKey) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function() {\n            var key;\n            return __generator(this, function(_b) {\n                key = this.generateItemKey(itemKey);\n                return [\n                    2 /*return*/ ,\n                    (_a = this.memCache[key]) !== null && _a !== void 0 ? _a : null\n                ];\n            });\n        });\n    };\n    /**\n     * Gets the item for the provided key from the browser session storage.\n     * @param {string} itemKey\n     * @returns {unknown | null}\n     */ BrowserSessionManager.prototype.getSessionItemBrowser = function(itemKey) {\n        return __awaiter(this, void 0, void 0, function() {\n            var key;\n            return __generator(this, function(_a) {\n                key = this.generateItemKey(itemKey);\n                return [\n                    2 /*return*/ ,\n                    sessionStorage.getItem(key)\n                ];\n            });\n        });\n    };\n    /**\n     * Removes the item for the provided key from the memory cache.\n     * @param {string} itemKey\n     * @returns {void}\n     */ BrowserSessionManager.prototype.removeSessionItem = function(itemKey) {\n        return __awaiter(this, void 0, void 0, function() {\n            var key;\n            return __generator(this, function(_a) {\n                key = this.generateItemKey(itemKey);\n                delete this.memCache[key];\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    /**\n     * Removes the item for the provided key from the browser session storage.\n     * @param {string} itemKey\n     * @returns {void}\n     */ BrowserSessionManager.prototype.removeSessionItemBrowser = function(itemKey) {\n        return __awaiter(this, void 0, void 0, function() {\n            var key;\n            return __generator(this, function(_a) {\n                key = this.generateItemKey(itemKey);\n                sessionStorage.removeItem(key);\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    BrowserSessionManager.ITEM_NAME_PREFIX = \"browser-session-store@\";\n    return BrowserSessionManager;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/BrowserSessionManager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BrowserSessionManager = void 0;\nvar BrowserSessionManager_js_1 = __webpack_require__(/*! ./BrowserSessionManager.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/BrowserSessionManager.js\");\nObject.defineProperty(exports, \"BrowserSessionManager\", ({\n    enumerable: true,\n    get: function() {\n        return BrowserSessionManager_js_1.BrowserSessionManager;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/types.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvc2Vzc2lvbi1tYW5hZ2Vycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REwsNkJBQTZCLEdBQUcsS0FBSztBQUNyQyxJQUFJTyw2QkFBNkJDLG1CQUFPQSxDQUFDLCtJQUE0QjtBQUNyRXhCLHlEQUF3RDtJQUFFWSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPVSwyQkFBMkJELHFCQUFxQjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzVKUCxhQUFhUyxtQkFBT0EsQ0FBQywrR0FBWSxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL3Nlc3Npb24tbWFuYWdlcnMvaW5kZXguanM/NDM5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ccm93c2VyU2Vzc2lvbk1hbmFnZXIgPSB2b2lkIDA7XG52YXIgQnJvd3NlclNlc3Npb25NYW5hZ2VyX2pzXzEgPSByZXF1aXJlKFwiLi9Ccm93c2VyU2Vzc2lvbk1hbmFnZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCcm93c2VyU2Vzc2lvbk1hbmFnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJyb3dzZXJTZXNzaW9uTWFuYWdlcl9qc18xLkJyb3dzZXJTZXNzaW9uTWFuYWdlcjsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsIkJyb3dzZXJTZXNzaW9uTWFuYWdlciIsIkJyb3dzZXJTZXNzaW9uTWFuYWdlcl9qc18xIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/types.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/types.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvc2Vzc2lvbi1tYW5hZ2Vycy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL3Nlc3Npb24tbWFuYWdlcnMvdHlwZXMuanM/MDI3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/session-managers/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/code-challenge.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/code-challenge.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spreadArray = (void 0) && (void 0).__spreadArray || function(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setupCodeChallenge = exports.sha256 = exports.base64UrlEncode = void 0;\nvar random_string_js_1 = __webpack_require__(/*! ./random-string.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/random-string.js\");\nvar uncrypto_1 = __webpack_require__(/*! uncrypto */ \"(rsc)/./node_modules/uncrypto/dist/crypto.node.cjs\");\n/**\n * Encodes the provided ArrayBuffer string to base-64 format.\n * @param {ArrayBuffer} str\n * @returns {string}\n */ var base64UrlEncode = function(str) {\n    return btoa(String.fromCharCode.apply(String, __spreadArray([], __read(new Uint8Array(str)), false))).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n};\nexports.base64UrlEncode = base64UrlEncode;\n/**\n * Creates a one-way hash for the provided string using SHA-256\n * algorithm, the result is provided as an ArrayBuffer instance.\n * @param {string} plain\n * @returns {Promise<ArrayBuffer>}\n */ var sha256 = function(plain) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var encoder, data;\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    encoder = new TextEncoder();\n                    data = encoder.encode(plain);\n                    return [\n                        4 /*yield*/ ,\n                        uncrypto_1.subtle.digest(\"SHA-256\", data)\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent()\n                    ];\n            }\n        });\n    });\n};\nexports.sha256 = sha256;\n/**\n * Sets up the code challenge required for PKCE OAuth2.0 flow\n * returning the verifier (secret) and its corresponding one-way\n * hash (challenge).\n * @returns {Promise<{ challenge: string, verifier: string }>}\n */ var setupCodeChallenge = function() {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var secret, challenge, _a;\n        return __generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    secret = (0, random_string_js_1.generateRandomString)(50);\n                    _a = exports.base64UrlEncode;\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.sha256)(secret)\n                    ];\n                case 1:\n                    challenge = _a.apply(void 0, [\n                        _b.sent()\n                    ]);\n                    return [\n                        2 /*return*/ ,\n                        {\n                            challenge: challenge,\n                            verifier: secret\n                        }\n                    ];\n            }\n        });\n    });\n};\nexports.setupCodeChallenge = setupCodeChallenge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/code-challenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/feature-flags.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/feature-flags.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getBooleanFlag = exports.getStringFlag = exports.getIntegerFlag = exports.getFlag = void 0;\nvar token_claims_js_1 = __webpack_require__(/*! ./token-claims.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js\");\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js\");\n/**\n * Method extracts the provided feature flag from the access token in the\n * current session.\n * @param {SessionManager} sessionManager\n * @param {string} code\n * @param {FlagType[keyof FlagType]} defaultValue\n * @param {keyof FlagType} type\n * @returns {GetFlagType}\n */ var getFlag = function(sessionManager, code, validationDetails, defaultValue, type) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var featureFlags, flag, response;\n        var _a, _b, _c;\n        return __generator(this, function(_d) {\n            switch(_d.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        (0, token_claims_js_1.getClaimValue)(sessionManager, \"feature_flags\", \"access_token\", validationDetails)\n                    ];\n                case 1:\n                    featureFlags = (_a = _d.sent()) !== null && _a !== void 0 ? _a : {};\n                    flag = featureFlags[code];\n                    if (!flag && defaultValue === undefined) {\n                        throw new Error(\"Flag \".concat(code, \" was not found, and no default value has been provided\"));\n                    }\n                    if ((flag === null || flag === void 0 ? void 0 : flag.t) && type && type !== (flag === null || flag === void 0 ? void 0 : flag.t)) {\n                        throw new Error(\"Flag \".concat(code, \" is of type \").concat(types_js_1.FlagDataType[flag.t], \", expected type is \").concat(types_js_1.FlagDataType[type]));\n                    }\n                    response = {\n                        is_default: (flag === null || flag === void 0 ? void 0 : flag.v) === undefined,\n                        value: (_b = flag === null || flag === void 0 ? void 0 : flag.v) !== null && _b !== void 0 ? _b : defaultValue,\n                        code: code\n                    };\n                    if (!response.is_default) {\n                        response.type = types_js_1.FlagDataType[(_c = flag === null || flag === void 0 ? void 0 : flag.t) !== null && _c !== void 0 ? _c : type];\n                    }\n                    return [\n                        2 /*return*/ ,\n                        response\n                    ];\n            }\n        });\n    });\n};\nexports.getFlag = getFlag;\n/**\n * Method extracts the provided number feature flag from the access token in\n * the current session.\n * @param {SessionManager} sessionManager\n * @param {string} code\n * @param {number} defaultValue\n * @returns {number} integer flag value\n */ var getIntegerFlag = function(sessionManager, code, validationDetails, defaultValue) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getFlag)(sessionManager, code, validationDetails, defaultValue, \"i\")\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent().value\n                    ];\n            }\n        });\n    });\n};\nexports.getIntegerFlag = getIntegerFlag;\n/**\n * Method extracts the provided string feature flag from the access token in\n * the current session.\n * @param {SessionManager} sessionManager\n * @param {string} code\n * @param {string} defaultValue\n * @returns {string} string flag value\n */ var getStringFlag = function(sessionManager, code, validationDetails, defaultValue) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getFlag)(sessionManager, code, validationDetails, defaultValue, \"s\")\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent().value\n                    ];\n            }\n        });\n    });\n};\nexports.getStringFlag = getStringFlag;\n/**\n * Method extracts the provided boolean feature flag from the access token in\n * the current session.\n * @param {SessionManager} sessionManager\n * @param {string} code\n * @param {boolean} defaultValue\n * @returns {boolean} boolean flag value\n */ var getBooleanFlag = function(sessionManager, code, validationDetails, defaultValue) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getFlag)(sessionManager, code, validationDetails, defaultValue, \"b\")\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent().value\n                    ];\n            }\n        });\n    });\n};\nexports.getBooleanFlag = getBooleanFlag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/feature-flags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.tokenClaims = exports.featureFlags = void 0;\nvar featureFlags = __importStar(__webpack_require__(/*! ./feature-flags.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/feature-flags.js\"));\nexports.featureFlags = featureFlags;\nvar tokenClaims = __importStar(__webpack_require__(/*! ./token-claims.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js\"));\nexports.tokenClaims = tokenClaims;\n__exportStar(__webpack_require__(/*! ./feature-flags.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/feature-flags.js\"), exports);\n__exportStar(__webpack_require__(/*! ./code-challenge.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/code-challenge.js\"), exports);\n__exportStar(__webpack_require__(/*! ./random-string.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/random-string.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token-claims.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js\"), exports);\n__exportStar(__webpack_require__(/*! ./token-utils.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validate-client-secret.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/validate-client-secret.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdXRpbGl0aWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcscUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1mLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVjLENBQUM7SUFDekZoQixPQUFPYyxjQUFjLENBQUNaLEdBQUcsV0FBVztRQUFFVSxZQUFZO1FBQU1LLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTZCxDQUFDLEVBQUVjLENBQUM7SUFDZGQsQ0FBQyxDQUFDLFVBQVUsR0FBR2M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSVYsVUFBVSxFQUFFLE9BQU9VO0lBQ2xDLElBQUlDLFNBQVMsQ0FBQztJQUNkLElBQUlELE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSWYsS0FBS2UsSUFBSyxJQUFJZixNQUFNLGFBQWFKLE9BQU9xQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixLQUFLZixJQUFJTCxnQkFBZ0JxQixRQUFRRCxLQUFLZjtJQUFFO0lBQ3hJVyxtQkFBbUJLLFFBQVFEO0lBQzNCLE9BQU9DO0FBQ1g7QUFDQSxJQUFJSSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVNyQixDQUFDLEVBQUVzQixRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS3ZCLEVBQUcsSUFBSXVCLE1BQU0sYUFBYSxDQUFDMUIsT0FBT3FCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNFLFVBQVNDLElBQUkzQixnQkFBZ0IwQixVQUFTdEIsR0FBR3VCO0FBQzNIO0FBQ0ExQiw4Q0FBNkM7SUFBRWlCLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RRLG1CQUFtQixHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQ2xELElBQUlHLGVBQWVWLGFBQWFXLG1CQUFPQSxDQUFDLHdIQUFvQjtBQUM1REosb0JBQW9CLEdBQUdHO0FBQ3ZCLElBQUlELGNBQWNULGFBQWFXLG1CQUFPQSxDQUFDLHNIQUFtQjtBQUMxREosbUJBQW1CLEdBQUdFO0FBQ3RCSCxhQUFhSyxtQkFBT0EsQ0FBQyx3SEFBb0IsR0FBR0o7QUFDNUNELGFBQWFLLG1CQUFPQSxDQUFDLDBIQUFxQixHQUFHSjtBQUM3Q0QsYUFBYUssbUJBQU9BLENBQUMsd0hBQW9CLEdBQUdKO0FBQzVDRCxhQUFhSyxtQkFBT0EsQ0FBQyxzSEFBbUIsR0FBR0o7QUFDM0NELGFBQWFLLG1CQUFPQSxDQUFDLG9IQUFrQixHQUFHSjtBQUMxQ0QsYUFBYUssbUJBQU9BLENBQUMsd0dBQVksR0FBR0o7QUFDcENELGFBQWFLLG1CQUFPQSxDQUFDLDBJQUE2QixHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL3V0aWxpdGllcy9pbmRleC5qcz9lM2FlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b2tlbkNsYWltcyA9IGV4cG9ydHMuZmVhdHVyZUZsYWdzID0gdm9pZCAwO1xudmFyIGZlYXR1cmVGbGFncyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9mZWF0dXJlLWZsYWdzLmpzXCIpKTtcbmV4cG9ydHMuZmVhdHVyZUZsYWdzID0gZmVhdHVyZUZsYWdzO1xudmFyIHRva2VuQ2xhaW1zID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3Rva2VuLWNsYWltcy5qc1wiKSk7XG5leHBvcnRzLnRva2VuQ2xhaW1zID0gdG9rZW5DbGFpbXM7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZmVhdHVyZS1mbGFncy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29kZS1jaGFsbGVuZ2UuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3JhbmRvbS1zdHJpbmcuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Rva2VuLWNsYWltcy5qc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdG9rZW4tdXRpbHMuanNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzLmpzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92YWxpZGF0ZS1jbGllbnQtc2VjcmV0LmpzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJfX2NyZWF0ZUJpbmRpbmciLCJPYmplY3QiLCJjcmVhdGUiLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2VzTW9kdWxlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmaW5lUHJvcGVydHkiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJyZXN1bHQiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2V4cG9ydFN0YXIiLCJleHBvcnRzIiwicCIsInRva2VuQ2xhaW1zIiwiZmVhdHVyZUZsYWdzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/random-string.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/random-string.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateRandomString = void 0;\nvar uncrypto_1 = __webpack_require__(/*! uncrypto */ \"(rsc)/./node_modules/uncrypto/dist/crypto.node.cjs\");\n/**\n * Creates a random string of provided length.\n * @param {number} length\n * @returns {string} required secret\n */ var generateRandomString = function(length) {\n    if (length === void 0) {\n        length = 28;\n    }\n    var bytesNeeded = Math.ceil(length / 2);\n    var array = new Uint32Array(bytesNeeded);\n    (0, uncrypto_1.getRandomValues)(array);\n    var result = Array.from(array, function(dec) {\n        return (\"0\" + dec.toString(16)).slice(-2);\n    }).join(\"\");\n    if (length % 2 !== 0) {\n        // If the requested length is odd, remove the last character to adjust the length\n        result = result.slice(0, -1);\n    }\n    return result;\n};\nexports.generateRandomString = generateRandomString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdXRpbGl0aWVzL3JhbmRvbS1zdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHLEtBQUs7QUFDcEMsSUFBSUcsYUFBYUMsbUJBQU9BLENBQUMsb0VBQVU7QUFDbkM7Ozs7Q0FJQyxHQUNELElBQUlGLHVCQUF1QixTQUFVRyxNQUFNO0lBQ3ZDLElBQUlBLFdBQVcsS0FBSyxHQUFHO1FBQUVBLFNBQVM7SUFBSTtJQUN0QyxJQUFJQyxjQUFjQyxLQUFLQyxJQUFJLENBQUNILFNBQVM7SUFDckMsSUFBSUksUUFBUSxJQUFJQyxZQUFZSjtJQUMzQixJQUFHSCxXQUFXUSxlQUFlLEVBQUVGO0lBQ2hDLElBQUlHLFNBQVNDLE1BQU1DLElBQUksQ0FBQ0wsT0FBTyxTQUFVTSxHQUFHO1FBQUksT0FBTyxDQUFDLE1BQU1BLElBQUlDLFFBQVEsQ0FBQyxHQUFFLEVBQUdDLEtBQUssQ0FBQyxDQUFDO0lBQUksR0FBR0MsSUFBSSxDQUFDO0lBQ25HLElBQUliLFNBQVMsTUFBTSxHQUFHO1FBQ2xCLGlGQUFpRjtRQUNqRk8sU0FBU0EsT0FBT0ssS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUM5QjtJQUNBLE9BQU9MO0FBQ1g7QUFDQVosNEJBQTRCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUmVzdW1lVG9Kb2IvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdXRpbGl0aWVzL3JhbmRvbS1zdHJpbmcuanM/ZTE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhdGVSYW5kb21TdHJpbmcgPSB2b2lkIDA7XG52YXIgdW5jcnlwdG9fMSA9IHJlcXVpcmUoXCJ1bmNyeXB0b1wiKTtcbi8qKlxuICogQ3JlYXRlcyBhIHJhbmRvbSBzdHJpbmcgb2YgcHJvdmlkZWQgbGVuZ3RoLlxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHJldHVybnMge3N0cmluZ30gcmVxdWlyZWQgc2VjcmV0XG4gKi9cbnZhciBnZW5lcmF0ZVJhbmRvbVN0cmluZyA9IGZ1bmN0aW9uIChsZW5ndGgpIHtcbiAgICBpZiAobGVuZ3RoID09PSB2b2lkIDApIHsgbGVuZ3RoID0gMjg7IH1cbiAgICB2YXIgYnl0ZXNOZWVkZWQgPSBNYXRoLmNlaWwobGVuZ3RoIC8gMik7XG4gICAgdmFyIGFycmF5ID0gbmV3IFVpbnQzMkFycmF5KGJ5dGVzTmVlZGVkKTtcbiAgICAoMCwgdW5jcnlwdG9fMS5nZXRSYW5kb21WYWx1ZXMpKGFycmF5KTtcbiAgICB2YXIgcmVzdWx0ID0gQXJyYXkuZnJvbShhcnJheSwgZnVuY3Rpb24gKGRlYykgeyByZXR1cm4gKCcwJyArIGRlYy50b1N0cmluZygxNikpLnNsaWNlKC0yKTsgfSkuam9pbignJyk7XG4gICAgaWYgKGxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgICAgLy8gSWYgdGhlIHJlcXVlc3RlZCBsZW5ndGggaXMgb2RkLCByZW1vdmUgdGhlIGxhc3QgY2hhcmFjdGVyIHRvIGFkanVzdCB0aGUgbGVuZ3RoXG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdC5zbGljZSgwLCAtMSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy5nZW5lcmF0ZVJhbmRvbVN0cmluZyA9IGdlbmVyYXRlUmFuZG9tU3RyaW5nO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhdGVSYW5kb21TdHJpbmciLCJ1bmNyeXB0b18xIiwicmVxdWlyZSIsImxlbmd0aCIsImJ5dGVzTmVlZGVkIiwiTWF0aCIsImNlaWwiLCJhcnJheSIsIlVpbnQzMkFycmF5IiwiZ2V0UmFuZG9tVmFsdWVzIiwicmVzdWx0IiwiQXJyYXkiLCJmcm9tIiwiZGVjIiwidG9TdHJpbmciLCJzbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/random-string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/remote-jwks-cache.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/remote-jwks-cache.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRemoteJwks = void 0;\nvar jose_1 = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\nvar remoteJwksCache = {};\nvar getRemoteJwks = function(domain) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var func;\n        return __generator(this, function(_a) {\n            if (remoteJwksCache[domain] !== undefined) {\n                return [\n                    2 /*return*/ ,\n                    remoteJwksCache[domain]\n                ];\n            }\n            func = (0, jose_1.createRemoteJWKSet)(new URL(\"\".concat(domain, \"/.well-known/jwks.json\")), {\n                cacheMaxAge: 1000 * 60 * 60 * 24\n            });\n            remoteJwksCache[domain] = func;\n            return [\n                2 /*return*/ ,\n                func\n            ];\n        });\n    });\n};\nexports.getRemoteJwks = getRemoteJwks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/remote-jwks-cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = (void 0) && (void 0).__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getUserOrganizations = exports.getPermissions = exports.getOrganization = exports.getPermission = exports.getClaim = exports.getClaimValue = void 0;\nvar jose_1 = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\n/**\n * Method extracts the provided claim from the provided token type in the\n * current session.\n * @param {SessionManager} sessionManager\n * @param {string} claim\n * @param {ClaimTokenType} type\n * @returns {unknown | null}\n */ var getClaimValue = function(sessionManager, claim, type, validationDetails) {\n    if (type === void 0) {\n        type = \"access_token\";\n    }\n    return __awaiter(void 0, void 0, void 0, function() {\n        var token, key, decodedToken, tokenPayload;\n        var _a;\n        return __generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.getSessionItem(\"\".concat(type))\n                    ];\n                case 1:\n                    token = _b.sent();\n                    return [\n                        4 /*yield*/ ,\n                        validationDetails.keyProvider()\n                    ];\n                case 2:\n                    key = _b.sent();\n                    return [\n                        4 /*yield*/ ,\n                        (0, jose_1.jwtVerify)(token, key, type === \"id_token\" ? {\n                            currentDate: new Date(0)\n                        } : {})\n                    ];\n                case 3:\n                    decodedToken = _b.sent();\n                    tokenPayload = decodedToken.payload;\n                    return [\n                        2 /*return*/ ,\n                        (_a = tokenPayload[claim]) !== null && _a !== void 0 ? _a : null\n                    ];\n            }\n        });\n    });\n};\nexports.getClaimValue = getClaimValue;\n/**\n * Method extracts the provided claim from the provided token type in the\n * current session, the returned object includes the provided claim.\n * @param {SessionManager} sessionManager\n * @param {string} claim\n * @param {ClaimTokenType} type\n * @returns {{ name: string, value: unknown | null }}\n */ var getClaim = function(sessionManager, claim, type, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var _a;\n        return __generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    _a = {\n                        name: claim\n                    };\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getClaimValue)(sessionManager, claim, type, validationDetails)\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        (_a.value = _b.sent(), _a)\n                    ];\n            }\n        });\n    });\n};\nexports.getClaim = getClaim;\n/**\n * Method returns the organization code from the current session and returns\n * a boolean in the returned object indicating if the provided permission is\n * present in the session.\n * @param {SessionManager} sessionManager\n * @param {string} name\n * @returns {{ orgCode: string | null, isGranted: boolean }}\n */ var getPermission = function(sessionManager, name, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var permissions, isGranted, orgCode;\n        var _a;\n        return __generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getClaimValue)(sessionManager, \"permissions\", \"access_token\", validationDetails)\n                    ];\n                case 1:\n                    permissions = (_a = _b.sent()) !== null && _a !== void 0 ? _a : [];\n                    isGranted = permissions.some(function(p) {\n                        return p === name;\n                    });\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getClaimValue)(sessionManager, \"org_code\", \"access_token\", validationDetails)\n                    ];\n                case 2:\n                    orgCode = _b.sent();\n                    return [\n                        2 /*return*/ ,\n                        {\n                            orgCode: orgCode,\n                            isGranted: isGranted\n                        }\n                    ];\n            }\n        });\n    });\n};\nexports.getPermission = getPermission;\n/**\n * Method extracts the organization code from the current session.\n * @param {SessionManager} sessionManager\n * @returns {{ orgCode: string | null }}\n */ var getOrganization = function(sessionManager, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var _a;\n        return __generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    _a = {};\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getClaimValue)(sessionManager, \"org_code\", \"access_token\", validationDetails)\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        (_a.orgCode = _b.sent(), _a)\n                    ];\n            }\n        });\n    });\n};\nexports.getOrganization = getOrganization;\n/**\n * Method extracts all the permission and the organization code in the access\n * token in the current session.\n * @param {SessionManager} sessionManager\n * @returns {{ permissions: string[], orgCode: string | null }}\n */ var getPermissions = function(sessionManager, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var _a, permissions, orgCode;\n        var _b;\n        return __generator(this, function(_c) {\n            switch(_c.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        Promise.all([\n                            (_b = (0, exports.getClaimValue)(sessionManager, \"permissions\", \"access_token\", validationDetails)) !== null && _b !== void 0 ? _b : [],\n                            (0, exports.getClaimValue)(sessionManager, \"org_code\", \"access_token\", validationDetails)\n                        ])\n                    ];\n                case 1:\n                    _a = __read.apply(void 0, [\n                        _c.sent(),\n                        2\n                    ]), permissions = _a[0], orgCode = _a[1];\n                    return [\n                        2 /*return*/ ,\n                        {\n                            permissions: permissions,\n                            orgCode: orgCode\n                        }\n                    ];\n            }\n        });\n    });\n};\nexports.getPermissions = getPermissions;\n/**\n * Method extracts all organization codes from the id token in the current\n * session.\n * @param {SessionManager} sessionManager\n * @returns {{ orgCodes: string[] }}\n */ var getUserOrganizations = function(sessionManager, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var _a;\n        var _b;\n        return __generator(this, function(_c) {\n            switch(_c.label){\n                case 0:\n                    _a = {};\n                    return [\n                        4 /*yield*/ ,\n                        (0, exports.getClaimValue)(sessionManager, \"org_codes\", \"id_token\", validationDetails)\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        (_a.orgCodes = (_b = _c.sent()) !== null && _b !== void 0 ? _b : [], _a)\n                    ];\n            }\n        });\n    });\n};\nexports.getUserOrganizations = getUserOrganizations;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-claims.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-utils.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-utils.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (void 0) && (void 0).__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isTokenExpired = exports.getUserFromSession = exports.getAccessToken = exports.getRefreshToken = exports.commitTokensToSession = exports.commitTokenToSession = void 0;\nvar exceptions_js_1 = __webpack_require__(/*! ../exceptions.js */ \"(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/exceptions.js\");\nvar jose_1 = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/cjs/index.js\");\n/**\n * Saves the provided token to the current session.\n * @param {SessionManager} sessionManager\n * @param {string} token\n * @param {TokenType} type\n */ var commitTokenToSession = function(sessionManager, token, type, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var key, e_1;\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    if (!!token) return [\n                        3 /*break*/ ,\n                        2\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.removeSessionItem(type)\n                    ];\n                case 1:\n                    _a.sent();\n                    return [\n                        2 /*return*/ \n                    ];\n                case 2:\n                    if (!(type === \"access_token\" || type === \"id_token\")) return [\n                        3 /*break*/ ,\n                        7\n                    ];\n                    _a.label = 3;\n                case 3:\n                    _a.trys.push([\n                        3,\n                        6,\n                        ,\n                        7\n                    ]);\n                    return [\n                        4 /*yield*/ ,\n                        validationDetails.keyProvider()\n                    ];\n                case 4:\n                    key = _a.sent();\n                    return [\n                        4 /*yield*/ ,\n                        (0, jose_1.jwtVerify)(token, key)\n                    ];\n                case 5:\n                    _a.sent();\n                    return [\n                        3 /*break*/ ,\n                        7\n                    ];\n                case 6:\n                    e_1 = _a.sent();\n                    throw new exceptions_js_1.KindeSDKError(exceptions_js_1.KindeSDKErrorCode.INVALID_TOKEN_MEMORY_COMMIT, \"Attempting to commit invalid \".concat(type, ' token \"').concat(token, '\" to memory'));\n                case 7:\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.setSessionItem(type, token)\n                    ];\n                case 8:\n                    _a.sent();\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n};\nexports.commitTokenToSession = commitTokenToSession;\n/**\n * Saves the access, refresh and id tokens provided in the `TokenCollection`\n * object to the current session.\n * @param {SessionManager} sessionManager\n * @param tokens\n */ var commitTokensToSession = function(sessionManager, tokens, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        Promise.all([\n                            (0, exports.commitTokenToSession)(sessionManager, tokens.refresh_token, \"refresh_token\", validationDetails),\n                            (0, exports.commitTokenToSession)(sessionManager, tokens.access_token, \"access_token\", validationDetails),\n                            (0, exports.commitTokenToSession)(sessionManager, tokens.id_token, \"id_token\", validationDetails)\n                        ])\n                    ];\n                case 1:\n                    _a.sent();\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n};\nexports.commitTokensToSession = commitTokensToSession;\n/**\n * Extracts the refresh token from current session returns null if the\n * token is not found.\n * @param {SessionManager} sessionManager\n * @returns {string | null}\n */ var getRefreshToken = function(sessionManager) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.getSessionItem(\"refresh_token\")\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent()\n                    ];\n            }\n        });\n    });\n};\nexports.getRefreshToken = getRefreshToken;\n/**\n * Extracts the access token from current session returns null if the\n * token is not found.\n * @param {SessionManager} sessionManager\n * @returns {string | null}\n */ var getAccessToken = function(sessionManager) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        return __generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.getSessionItem(\"access_token\")\n                    ];\n                case 1:\n                    return [\n                        2 /*return*/ ,\n                        _a.sent()\n                    ];\n            }\n        });\n    });\n};\nexports.getAccessToken = getAccessToken;\n/**\n * Extracts the user information from the current session returns null if\n * the token is not found.\n * @param {SessionManager} sessionManager\n * @returns {string | null}\n */ var getUserFromSession = function(sessionManager, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var idTokenString, idToken, _a, _b, user;\n        var _c;\n        return __generator(this, function(_d) {\n            switch(_d.label){\n                case 0:\n                    return [\n                        4 /*yield*/ ,\n                        sessionManager.getSessionItem(\"id_token\")\n                    ];\n                case 1:\n                    idTokenString = _d.sent();\n                    _a = jose_1.jwtVerify;\n                    _b = [\n                        idTokenString\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        validationDetails.keyProvider()\n                    ];\n                case 2:\n                    return [\n                        4 /*yield*/ ,\n                        _a.apply(void 0, _b.concat([\n                            _d.sent(),\n                            {\n                                currentDate: new Date(0)\n                            }\n                        ]))\n                    ];\n                case 3:\n                    idToken = _d.sent();\n                    user = {\n                        family_name: idToken.payload.family_name,\n                        given_name: idToken.payload.given_name,\n                        picture: (_c = idToken.payload.picture) !== null && _c !== void 0 ? _c : null,\n                        email: idToken.payload.email,\n                        id: idToken.payload.sub\n                    };\n                    return [\n                        2 /*return*/ ,\n                        user\n                    ];\n            }\n        });\n    });\n};\nexports.getUserFromSession = getUserFromSession;\n/**\n * Checks if the provided JWT token is valid (expired or not).\n * @param {string | null} token\n * @returns {boolean} is expired or not\n */ var isTokenExpired = function(token, validationDetails) {\n    return __awaiter(void 0, void 0, void 0, function() {\n        var currentUnixTime, tokenPayload, _a, _b, e_2;\n        return __generator(this, function(_c) {\n            switch(_c.label){\n                case 0:\n                    if (!token) return [\n                        2 /*return*/ ,\n                        true\n                    ];\n                    _c.label = 1;\n                case 1:\n                    _c.trys.push([\n                        1,\n                        4,\n                        ,\n                        5\n                    ]);\n                    currentUnixTime = Math.floor(Date.now() / 1000);\n                    _a = jose_1.jwtVerify;\n                    _b = [\n                        token\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        validationDetails.keyProvider()\n                    ];\n                case 2:\n                    return [\n                        4 /*yield*/ ,\n                        _a.apply(void 0, _b.concat([\n                            _c.sent()\n                        ]))\n                    ];\n                case 3:\n                    tokenPayload = _c.sent();\n                    if (tokenPayload.payload.exp === undefined) return [\n                        2 /*return*/ ,\n                        true\n                    ];\n                    return [\n                        2 /*return*/ ,\n                        currentUnixTime >= tokenPayload.payload.exp\n                    ];\n                case 4:\n                    e_2 = _c.sent();\n                    return [\n                        2 /*return*/ ,\n                        true\n                    ];\n                case 5:\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n};\nexports.isTokenExpired = isTokenExpired;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/token-utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FlagDataType = void 0;\nvar FlagDataType;\n(function(FlagDataType) {\n    FlagDataType[\"s\"] = \"string\";\n    FlagDataType[\"b\"] = \"boolean\";\n    FlagDataType[\"i\"] = \"number\";\n})(FlagDataType = exports.FlagDataType || (exports.FlagDataType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdXRpbGl0aWVzL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxvQkFBb0IsR0FBRyxLQUFLO0FBQzVCLElBQUlFO0FBQ0gsVUFBVUEsWUFBWTtJQUNuQkEsWUFBWSxDQUFDLElBQUksR0FBRztJQUNwQkEsWUFBWSxDQUFDLElBQUksR0FBRztJQUNwQkEsWUFBWSxDQUFDLElBQUksR0FBRztBQUN4QixHQUFHQSxlQUFlRixRQUFRRSxZQUFZLElBQUtGLENBQUFBLG9CQUFvQixHQUFHLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL3Nkay91dGlsaXRpZXMvdHlwZXMuanM/Y2UwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmxhZ0RhdGFUeXBlID0gdm9pZCAwO1xudmFyIEZsYWdEYXRhVHlwZTtcbihmdW5jdGlvbiAoRmxhZ0RhdGFUeXBlKSB7XG4gICAgRmxhZ0RhdGFUeXBlW1wic1wiXSA9IFwic3RyaW5nXCI7XG4gICAgRmxhZ0RhdGFUeXBlW1wiYlwiXSA9IFwiYm9vbGVhblwiO1xuICAgIEZsYWdEYXRhVHlwZVtcImlcIl0gPSBcIm51bWJlclwiO1xufSkoRmxhZ0RhdGFUeXBlID0gZXhwb3J0cy5GbGFnRGF0YVR5cGUgfHwgKGV4cG9ydHMuRmxhZ0RhdGFUeXBlID0ge30pKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkZsYWdEYXRhVHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/validate-client-secret.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/validate-client-secret.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.validateClientSecret = void 0;\n/**\n * Validates that the supplied client secret is in the correct format.\n * @param {string} secret\n * @returns {boolean}\n */ var validateClientSecret = function(secret) {\n    var _a;\n    return !!((_a = secret.match(\"^[a-zA-Z0-9]{40,60}$\")) === null || _a === void 0 ? void 0 : _a.length);\n};\nexports.validateClientSecret = validateClientSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdXRpbGl0aWVzL3ZhbGlkYXRlLWNsaWVudC1zZWNyZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHLEtBQUs7QUFDcEM7Ozs7Q0FJQyxHQUNELElBQUlFLHVCQUF1QixTQUFVQyxNQUFNO0lBQ3ZDLElBQUlDO0lBQ0osT0FBTyxDQUFDLENBQUUsRUFBQ0EsS0FBS0QsT0FBT0UsS0FBSyxDQUFDLHVCQUFzQixNQUFPLFFBQVFELE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR0UsTUFBTTtBQUN4RztBQUNBTiw0QkFBNEIsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZXN1bWVUb0pvYi8uL25vZGVfbW9kdWxlcy9Aa2luZGUtb3NzL2tpbmRlLXR5cGVzY3JpcHQtc2RrL2Rpc3QtY2pzL3Nkay91dGlsaXRpZXMvdmFsaWRhdGUtY2xpZW50LXNlY3JldC5qcz84NjY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52YWxpZGF0ZUNsaWVudFNlY3JldCA9IHZvaWQgMDtcbi8qKlxuICogVmFsaWRhdGVzIHRoYXQgdGhlIHN1cHBsaWVkIGNsaWVudCBzZWNyZXQgaXMgaW4gdGhlIGNvcnJlY3QgZm9ybWF0LlxuICogQHBhcmFtIHtzdHJpbmd9IHNlY3JldFxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbnZhciB2YWxpZGF0ZUNsaWVudFNlY3JldCA9IGZ1bmN0aW9uIChzZWNyZXQpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuICEhKChfYSA9IHNlY3JldC5tYXRjaCgnXlthLXpBLVowLTldezQwLDYwfSQnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCk7XG59O1xuZXhwb3J0cy52YWxpZGF0ZUNsaWVudFNlY3JldCA9IHZhbGlkYXRlQ2xpZW50U2VjcmV0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidmFsaWRhdGVDbGllbnRTZWNyZXQiLCJzZWNyZXQiLCJfYSIsIm1hdGNoIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/utilities/validate-client-secret.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/version.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/version.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * This file is read-only, the const SDK_VERSION will be set to the package version\n * from package.json at build time, this action may or may not effect any changes\n * you make to this file. We therefore recommend that you refrain from editing this\n * file.\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getSDKHeader = exports.SDK_VERSION = void 0;\nexports.SDK_VERSION = \"2.9.1\";\nvar getSDKHeader = function(options) {\n    var _a, _b;\n    if (options === void 0) {\n        options = {};\n    }\n    var version = (_a = options.frameworkVersion) !== null && _a !== void 0 ? _a : exports.SDK_VERSION;\n    var framework = (_b = options.framework) !== null && _b !== void 0 ? _b : \"TypeScript\";\n    var headerValue = \"\".concat(framework, \"/\").concat(version);\n    return [\n        \"Kinde-SDK\",\n        headerValue\n    ];\n};\nexports.getSDKHeader = getSDKHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGtpbmRlLW9zcy9raW5kZS10eXBlc2NyaXB0LXNkay9kaXN0LWNqcy9zZGsvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOzs7OztDQUtDLEdBQ0RBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxvQkFBb0IsR0FBR0EsbUJBQW1CLEdBQUcsS0FBSztBQUNsREEsbUJBQW1CLEdBQUc7QUFDdEIsSUFBSUUsZUFBZSxTQUFVRSxPQUFPO0lBQ2hDLElBQUlDLElBQUlDO0lBQ1IsSUFBSUYsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVSxDQUFDO0lBQUc7SUFDeEMsSUFBSUcsVUFBVSxDQUFDRixLQUFLRCxRQUFRSSxnQkFBZ0IsTUFBTSxRQUFRSCxPQUFPLEtBQUssSUFBSUEsS0FBS0wsUUFBUUcsV0FBVztJQUNsRyxJQUFJTSxZQUFZLENBQUNILEtBQUtGLFFBQVFLLFNBQVMsTUFBTSxRQUFRSCxPQUFPLEtBQUssSUFBSUEsS0FBSztJQUMxRSxJQUFJSSxjQUFjLEdBQUdDLE1BQU0sQ0FBQ0YsV0FBVyxLQUFLRSxNQUFNLENBQUNKO0lBQ25ELE9BQU87UUFBQztRQUFhRztLQUFZO0FBQ3JDO0FBQ0FWLG9CQUFvQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL1Jlc3VtZVRvSm9iLy4vbm9kZV9tb2R1bGVzL0BraW5kZS1vc3Mva2luZGUtdHlwZXNjcmlwdC1zZGsvZGlzdC1janMvc2RrL3ZlcnNpb24uanM/OTcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogVGhpcyBmaWxlIGlzIHJlYWQtb25seSwgdGhlIGNvbnN0IFNES19WRVJTSU9OIHdpbGwgYmUgc2V0IHRvIHRoZSBwYWNrYWdlIHZlcnNpb25cbiAqIGZyb20gcGFja2FnZS5qc29uIGF0IGJ1aWxkIHRpbWUsIHRoaXMgYWN0aW9uIG1heSBvciBtYXkgbm90IGVmZmVjdCBhbnkgY2hhbmdlc1xuICogeW91IG1ha2UgdG8gdGhpcyBmaWxlLiBXZSB0aGVyZWZvcmUgcmVjb21tZW5kIHRoYXQgeW91IHJlZnJhaW4gZnJvbSBlZGl0aW5nIHRoaXNcbiAqIGZpbGUuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0U0RLSGVhZGVyID0gZXhwb3J0cy5TREtfVkVSU0lPTiA9IHZvaWQgMDtcbmV4cG9ydHMuU0RLX1ZFUlNJT04gPSAnMi45LjEnO1xudmFyIGdldFNES0hlYWRlciA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciB2ZXJzaW9uID0gKF9hID0gb3B0aW9ucy5mcmFtZXdvcmtWZXJzaW9uKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBleHBvcnRzLlNES19WRVJTSU9OO1xuICAgIHZhciBmcmFtZXdvcmsgPSAoX2IgPSBvcHRpb25zLmZyYW1ld29yaykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogJ1R5cGVTY3JpcHQnO1xuICAgIHZhciBoZWFkZXJWYWx1ZSA9IFwiXCIuY29uY2F0KGZyYW1ld29yaywgXCIvXCIpLmNvbmNhdCh2ZXJzaW9uKTtcbiAgICByZXR1cm4gWydLaW5kZS1TREsnLCBoZWFkZXJWYWx1ZV07XG59O1xuZXhwb3J0cy5nZXRTREtIZWFkZXIgPSBnZXRTREtIZWFkZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRTREtIZWFkZXIiLCJTREtfVkVSU0lPTiIsIm9wdGlvbnMiLCJfYSIsIl9iIiwidmVyc2lvbiIsImZyYW1ld29ya1ZlcnNpb24iLCJmcmFtZXdvcmsiLCJoZWFkZXJWYWx1ZSIsImNvbmNhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@kinde-oss/kinde-typescript-sdk/dist-cjs/sdk/version.js\n");

/***/ })

};
;